{"version":3,"sources":["subtotal.coffee"],"names":[],"mappings":"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","file":"subtotal.js","sourceRoot":"/source/","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super(input, opts)\r\n\r\n        processKey = (record, totals, keys, attrs, f) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\" \r\n                flatKey = key.join(String.fromCharCode(0))\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = f(key.slice())\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            if addKey\r\n                keys.push key\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n            \r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                    return @aggregator(this, key, [])\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                    return @aggregator(this, [], key)\r\n            m = rowKey.length-1\r\n            n = colKey.length-1            \r\n            if m < 0 or n < 0\r\n                return\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\r\n                if not @tree[flatRowKey]\r\n                    @tree[flatRowKey] = {}\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice(0, j+1)\r\n                    flatColKey = fColKey.join(String.fromCharCode(0))\r\n                    if not @tree[flatRowKey][flatColKey]\r\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                totals: \"Totals\"\r\n\r\n        opts = $.extend defaults, opts\r\n\r\n        arrowCollapsed = \"\\u25B6\"\r\n        arrowExpanded = \"\\u25E2\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal =pivotData.allTotal\r\n        \r\n        createCell = (cellType, className, textContent, attributes) ->\r\n            th = document.createElement(cellType)\r\n            if className then th.className = className\r\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\r\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            headers = []\r\n            th = createCell(\"th\", className, keysArr[0][0])\r\n            flatKey = keysArr[0][0]\r\n            nodePos = 0\r\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\r\n            headers[0] = node \r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell(\"th\", className, keysArr[0][c])\r\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\r\n                ++nodePos\r\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push(node)\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                flatKey = \"\"\r\n                c = 0\r\n                while c <= lastCol\r\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell(\"th\", className, keysArr[r][c])\r\n                    ++nodePos\r\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\r\n                    if c is 0\r\n                        headers.push header\r\n                    else\r\n                        header.parent = rMark[c-1]\r\n                        rMark[c-1].children.push header\r\n                        x = 0\r\n                        while x <= c-1\r\n                            rMark[x].descendants = rMark[x].descendants + 1\r\n                            ++x\r\n                    rMark[c] = header\r\n                    repeats = false\r\n                    ++c\r\n                c = 0\r\n                while c <= lastCol\r\n                    rMark[c].leaves = rMark[c].leaves + 1\r\n                    ++c\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\r\n            colAttr = colAttrs[col]\r\n            th = createCell(\"th\", \"pvtAxisLabel\", colAttr)\r\n            textContent = colAttr\r\n            if col < colAttrs.length-1\r\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\r\n            th = createCell(\"th\", \"pvtAxisLabel\", textContent)\r\n            th.setAttribute(\"data-colAttr\", colAttr)\r\n            tr.appendChild th\r\n            colHeaderHeaders.push({\"tr\": tr, \"th\": th, \"clickStatus\": \"expanded\"})\r\n            thead.appendChild tr\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\r\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\r\n\r\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\r\n            for i in [0..colAttrs.length-1] when i < colAttrs.length-1\r\n                th = colHeaderHeaders[i].th\r\n                colAttr = colAttrs[i]\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    alert event.target.getAttribute(\"data-colAttr\")\r\n                    #toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\")\r\n\r\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs)\r\n            # Process\r\n            tr = colHeaderHeaders[colHeader.col].tr\r\n            th = colHeader.th\r\n            th.setAttribute(\"data-colHeader\", th.textContent) \r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            if colHeader.children.length !=0\r\n                th.setAttribute(\"colspan\", colHeader.descendants+1)\r\n            th.setAttribute(\"data-node\", colHeaderCols.length)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length !=0\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleCol(colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")))\r\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtColLabel\", '', {\"rowspan\": rowspan})\r\n                colHeader.children[0].tr.appendChild(th)\r\n                colHeader.sTh = th\r\n            colHeader.clickStatus = \"expanded\"\r\n            colHeader.tr = tr\r\n            colHeader.idx = colHeaderCols.length\r\n            colHeader.pos = colHeaderCols.length+rowAttrs.length+1\r\n            colHeaderCols.push(colHeader)\r\n\r\n        ###\r\n        buildColHeaders = (colHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\r\n            tr = colHeader.tr\r\n            colHeader.tr = tr\r\n            th = colHeader.th\r\n            th.setAttribute(\"colspan\", colHeader.descendants+1)\r\n            th.setAttribute(\"data-colHeader\", th.textContent) \r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            th.setAttribute(\"data-node\", colHeaderCols.length)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length != 0\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleCol(colHeaders, colHeaderCols, colHeader)\r\n            if colHeader.parent\r\n                lastChild = colHeader.parent.children[colHeader.parent.children.length-1]\r\n                if colHeader is lastChild\r\n                    rowspan = colAttrs.length-colHeader.col + if rowAttrs.length != 0 then 1 else 0\r\n                    th = createCell(\"th\", \"pvtColLabel\", '', {\"rowspan\": rowspan})\r\n                    colHeader.tr.appendChild(th)\r\n            colHeader.clickStatus = \"expanded\"\r\n            colHeaderCols.push(colHeader)\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, colAttrs, colAttrs)\r\n        ###\r\n        \r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            rowHeaderHeaders.th = []\r\n            for i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                if i < rowAttrs.length-1\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\r\n                th = createCell(\"th\", \"pvtAxisLabel\", textContent)\r\n                th.setAttribute(\"data-rowAttr\", rowAttr)\r\n                tr.appendChild th                \r\n                rowHeaderHeaders.th.push({\"th\": th, \"clickStatus\": \"expanded\"})\r\n            if colAttrs.length != 0\r\n                th = createCell(\"th\")\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            for i in [0..rowAttrs.length-1] when i < rowAttrs.length-1\r\n                th = rowHeaderHeaders.th[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\")\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (tbody, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            th = rowHeader.th\r\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\r\n            th.setAttribute(\"data-rowHeader\", th.textContent) \r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute(\"colspan\", 2)\r\n            th.setAttribute(\"data-node\", rowHeaderRows.length)\r\n            tr.appendChild(th)\r\n            if rowHeader.children.length != 0\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow(rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")))\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtRowLabel\", '', {\"colspan\": colspan})\r\n                tr.appendChild(th)\r\n            rowHeader.clickStatus = \"expanded\"\r\n            rowHeader.tr = tr\r\n            rowHeaderRows.push(rowHeader)\r\n            tbody.appendChild(tr)\r\n            for h in rowHeader.children\r\n                buildRowHeaders(tbody, rowHeaderRows, h, rowAttrs, colAttrs)\r\n\r\n        buildValues = (rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtSubtotal\" else style\r\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.col\r\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\r\n            tr.appendChild(th)\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal colTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        collapseCol = (colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            colspan = 0\r\n            h = colHeaderCols[c]\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                console.log \"c: \" + c + \", c-i: \" + (c-i)\r\n                d = colHeaderCols[c-i]\r\n                console.log d.th.textContent + \", \" + (c-i)\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"colspan\", 1)\r\n                if d.th.style.display isnt \"none\"\r\n                    ++colspan\r\n                    d.th.style.display = \"none\"\r\n                    $('table.pvtTable tbody tr td:nth-child(' +  d.pos + ')').hide();\r\n                    if d.sTh\r\n                        d.sTh.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\"))-colspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.clickStatus = \"collapsed\"\r\n            h.th.setAttribute(\"colspan\", 1)\r\n            h.tr.style.display = \"\"\r\n\r\n        expandCol = (colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            collapseCol\r\n            colspan = 0\r\n            h = colHeaderCols[c]\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                console.log \"c: \" + c + \", c-i: \" + (c-i)\r\n                d = colHeaderCols[c-i]\r\n                console.log d.th.textContent + \", \" + (c-i)\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"colspan\", 1)\r\n                if d.th.style.display isnt \"none\"\r\n                    --colspan\r\n                    d.th.style.display = \"none\"\r\n                    $('table.pvtTable tbody tr td:nth-child(' + d.pos + ')').hide();\r\n                    if d.sTh\r\n                        d.sTh.style.display = \"none\"\r\n            for ch in h.children\r\n                if ch.th.style.display is \"none\"\r\n                    ++colspan\r\n                    ch.th.style.display = \"\"\r\n                    $('table.pvtTable tbody tr td:nth-child(' + ch.pos + ')').show();\r\n            h.th.setAttribute(\"colspan\", h.children.length+1)\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.clickStatus = \"expanded\"\r\n            h.th.style.display = \"\"\r\n            if h.sTh\r\n                h.sTh.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", (colspan + parseInt(p.th.getAttribute(\"colspan\"))))\r\n                p = p.parent\r\n\r\n        collapseRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = \"collapsed\"\r\n            h.th.setAttribute(\"rowspan\", 1)\r\n            h.tr.style.display = \"\"\r\n\r\n        expandRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            rowspan = 0\r\n            h = rowHeaderRows[r]\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    --rowspan\r\n                    d.tr.style.display = \"none\"\r\n            for c in h.children\r\n                if c.tr.style.display is \"none\"\r\n                    ++rowspan\r\n                    c.tr.style.display = \"\"\r\n            h.th.setAttribute(\"rowspan\", h.children.length+1)\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = \"expanded\"\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\r\n                p = p.parent\r\n\r\n        toggleCol = (colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            if colHeaderCols[c].clickStatus is \"collapsed\"\r\n                expandCol(colHeaderCols, c)\r\n            else\r\n                collapseCol(colHeaderCols, c)\r\n\r\n        toggleRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            if rowHeaderRows[r].clickStatus is \"collapsed\"\r\n                expandRow(rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderRows, r)\r\n\r\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n            i = idx\r\n            nAttrs = rowAttrs.length-1\r\n            while i < nAttrs\r\n                th = rowHeaderHeaders.th[i]\r\n                th.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\r\n                th.clickStatus = \"collapsed\"\r\n                ++i          \r\n            i = 0\r\n            nRows = rowHeaderRows.length\r\n            while i < nRows\r\n                h = rowHeaderRows[i]\r\n                if h.col is idx\r\n                    collapseRow(rowHeaderRows, h.node)\r\n                    i = i + h.descendants + 1\r\n                else\r\n                    ++i\r\n\r\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n\r\n            for i in [0..idx]\r\n                th = rowHeaderHeaders.th[i]\r\n                th.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\r\n                th.clickStatus = \"expanded\"\r\n                j = 0\r\n                nRows = rowHeaderRows.length\r\n                while j < nRows\r\n                    h = rowHeaderRows[j]\r\n                    if h.col == i\r\n                        expandRow(rowHeaderRows, h.node)\r\n                        j = j + h.descendants + 1\r\n                    else\r\n                        ++j\r\n\r\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            th = rowHeaderHeaders.th[idx]\r\n            if th.clickStatus is \"collapsed\"\r\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n            else\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderHeaders = []\r\n            colHeaderCols = []\r\n\r\n            if rowAttrs.length != 0\r\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\r\n            result = document.createElement(\"table\")\r\n            result.className = \"pvtTable\"\r\n            thead = document.createElement(\"thead\")\r\n            result.appendChild thead\r\n            if colAttrs.length != 0\r\n                buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs)\r\n                for h in colHeaders\r\n                    #buildColHeaders colHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs\r\n                   buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\r\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\r\n            if rowAttrs.length != 0\r\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\r\n                if colAttrs.length == 0\r\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs)\r\n            tbody = document.createElement(\"tbody\")\r\n            result.appendChild tbody\r\n            if rowAttrs.length != 0\r\n                for h in rowHeaders\r\n                    buildRowHeaders tbody, rowHeaderRows, h, rowAttrs, colAttrs\r\n                buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            buildValues(rowHeaderRows, colHeaderCols)\r\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildColTotals(tr, colHeaderCols)\r\n            buildGrandTotal(tbody, tr)\r\n            result.setAttribute(\"data-numrows\", rowKeys.length)\r\n            result.setAttribute(\"data-numcols\", colKeys.length)\r\n            if opts.collapseRowsAt\r\n                collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt)\r\n            return result\r\n\r\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\r\n        \r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap()\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\")\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\")\r\n"]}