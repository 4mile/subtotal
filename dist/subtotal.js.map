{"version":3,"file":"subtotal.js","sources":["subtotal.coffee"],"names":[],"mappings":"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","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super input, opts\r\n\r\n        processKey = (record, totals, keys, attrs, getAggregator) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join String.fromCharCode(0)\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = getAggregator key.slice()\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            keys.push key if addKey\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                return @aggregator this, key, []\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                return @aggregator this, [], key\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            return if m < 0 or n < 0\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join String.fromCharCode(0)\r\n                @tree[flatRowKey] = {} if not @tree[flatRowKey]\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice 0, j+1\r\n                    flatColKey = fColKey.join String.fromCharCode(0)\r\n                    @tree[flatRowKey][flatColKey] = @aggregator this, fRowKey, fColKey if not @tree[flatRowKey][flatColKey]\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend true, {}, defaults, opts\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n        classExpanded = \"expanded\"\r\n        classCollapsed = \"collapsed\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className.match regExp\r\n\r\n        removeClass = (element, className) ->\r\n            regExp = new RegExp \"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\"\r\n            element.className = element.className.replace regExp, ''\r\n\r\n        addClass = (element, className) ->\r\n            element.className += (\" \" + className) if not hasClass element, className\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End\r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            return if not opts.table and not opts.table.eventHandlers\r\n            eventHandlers = {}\r\n            for own event, handler of opts.table.eventHandlers\r\n                filters = {}\r\n                filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                eventHandlers[event] = (e) -> handler(e, value, filters, pivotData)\r\n            return eventHandlers\r\n\r\n        createCell = (cellType, className, textContent, attributes, eventHandlers) ->\r\n            th = document.createElement cellType\r\n            th.className = className if className?\r\n            th.textContent = textContent if textContent?\r\n            th.setAttribute attr, val for own attr, val of attributes if attributes?\r\n            th.addEventListener event, handler for own event, handler of eventHandlers if eventHandlers?\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            headers = []\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            th = createCell \"th\", className, keysArr[0][0]\r\n            key = []\r\n            key.push keysArr[0][0]\r\n            nodePos = 0\r\n            node = {\r\n                node: nodePos,\r\n                row: 0,\r\n                col: 0,\r\n                th: th,\r\n                parent: null,\r\n                children: [],\r\n                descendants: lastCol,\r\n                leaves: 1,\r\n                key: key,\r\n                flatKey: key.join String.fromCharCode(0)}\r\n            headers.push node\r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell \"th\", className, keysArr[0][c]\r\n                key = key.slice()\r\n                key.push keysArr[0][c]\r\n                ++nodePos\r\n                node =  {\r\n                    node: nodePos,\r\n                    row: 0,\r\n                    col: c,\r\n                    th: th,\r\n                    parent: rMark[c-1],\r\n                    children: [],\r\n                    descendants: lastCol-c,\r\n                    leaves: 1,\r\n                    key: key,\r\n                    flatKey: key.join String.fromCharCode(0)}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push node\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                key = []\r\n                c = 0\r\n                while c <= lastCol\r\n                    key = key.slice()\r\n                    key.push keysArr[r][c]\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell \"th\", className, keysArr[r][c]\r\n                    ++nodePos\r\n                    node = {\r\n                        node: nodePos,\r\n                        row: r,\r\n                        col: c,\r\n                        th: th,\r\n                        parent: null,\r\n                        children: [],\r\n                        descendants: 0,\r\n                        leaves: 1,\r\n                        key: key,\r\n                        flatKey: key.join String.fromCharCode(0)}\r\n                    if c is 0\r\n                        headers.push node\r\n                    else\r\n                        node.parent = rMark[c-1]\r\n                        rMark[c-1].children.push node\r\n                        x = 0\r\n                        while x <= c-1\r\n                            ++rMark[x].descendants\r\n                            ++x\r\n                    rMark[c] = node\r\n                    repeats = false\r\n                    ++c\r\n                ++rMark[c].leaves for c in [0..lastCol]\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\r\n            colAttr = colAttrs[col]\r\n            textContent = colAttr\r\n            className = \"pvtAxisLabel\"\r\n            if col < colAttrs.length-1\r\n                className += \" expanded\"\r\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\r\n            th = createCell \"th\", className, textContent\r\n            th.setAttribute \"data-colAttr\", colAttr\r\n            tr.appendChild th\r\n            colHeaderHeaders.push {\r\n                tr: tr,\r\n                th: th,\r\n                clickStatus: classExpanded,\r\n                expandedCount: 0,\r\n                nHeaders: 0}\r\n            thead.appendChild tr\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement \"tr\"\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell \"th\", null, null, {\r\n                    colspan: rowAttrs.length,\r\n                    rowspan: colAttrs.length}\r\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\r\n\r\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\r\n            n = colAttrs.length-1\r\n            for i in [0..n] when i < n\r\n                th = colHeaderHeaders[i].th\r\n                colAttr = colAttrs[i]\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute \"data-colAttr\"\r\n\r\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\r\n            # Process\r\n            hh = colHeaderHeaders[colHeader.col]\r\n            ++hh.expandedCount\r\n            ++hh.nHeaders\r\n            tr = hh.tr\r\n            th = colHeader.th\r\n            th.setAttribute \"data-colHeader\", th.textContent\r\n            th.setAttribute(\"rowspan\", 2) if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n            th.setAttribute(\"colspan\", colHeader.descendants+1) if colHeader.children.length !=0\r\n            th.setAttribute(\"data-node\", colHeaderCols.length)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length != 0\r\n                addClass th, classExpanded\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleCol colHeaderHeaders, colHeaderCols, parseInt event.target.getAttribute \"data-node\"\r\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\r\n                style = \"pvtColLabel pvtColSubtotal col\" + colHeader.row\r\n                th = createCell \"th\", style, '', {\"rowspan\": rowspan}\r\n                colHeader.children[0].tr.appendChild th\r\n                colHeader.sTh = th\r\n            colHeader.clickStatus = classExpanded\r\n            colHeader.tr = tr\r\n            colHeaderCols.push colHeader\r\n\r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement \"tr\"\r\n            rowHeaderHeaders.hh = []\r\n            for own i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                className = \"pvtAxisLabel\"\r\n                if i < rowAttrs.length-1\r\n                    className += \" expanded\"\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\r\n                th = createCell \"th\", className, textContent\r\n                th.setAttribute \"data-rowAttr\", rowAttr\r\n                tr.appendChild th\r\n                rowHeaderHeaders.hh.push {\r\n                    th: th,\r\n                    clickStatus: classExpanded,\r\n                    expandedCount: 0,\r\n                    nHeaders: 0}\r\n            if colAttrs.length != 0\r\n                th = createCell \"th\"\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            n = rowAttrs.length-1\r\n            for i in [0..n] when i < n\r\n                th = rowHeaderHeaders.hh[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute \"data-rowAttr\"\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length == 0 then 0 else 1)\r\n            th = createCell \"th\", \"pvtTotalLabel rowTotal\", opts.localeStrings.totals, {rowspan: rowspan}\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\r\n            hh = rowHeaderHeaders.hh[rowHeader.col]\r\n            ++hh.expandedCount\r\n            ++hh.nHeaders\r\n            tr = document.createElement \"tr\"\r\n            th = rowHeader.th\r\n            th.setAttribute \"rowspan\", rowHeader.descendants+1\r\n            th.setAttribute \"data-rowHeader\", th.textContent\r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute \"colspan\", 2\r\n            th.setAttribute \"data-node\", rowHeaderRows.length\r\n            tr.appendChild th\r\n            if rowHeader.children.length != 0\r\n                addClass th, classExpanded\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow rowHeaderHeaders, rowHeaderRows, parseInt event.target.getAttribute \"data-node\"\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell \"th\", \"pvtRowLabel pvtRowSubtotal\", '', {colspan: colspan}\r\n                tr.appendChild th\r\n            rowHeader.clickStatus = classExpanded\r\n            rowHeader.tr = tr\r\n            rowHeaderRows.push rowHeader\r\n            tbody.appendChild tr\r\n            for h in rowHeader.children\r\n                buildRowHeaders tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs\r\n\r\n        buildValues = (rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style += \" pvtColSubtotal\" if colHeader.children.length != 0\r\n                    style += \" pvtRowSubtotal\" if rowHeader.children.length != 0\r\n                    style += \" row\" + rowHeader.row +\r\n                        \" col\" + colHeader.row +\r\n                        \" rowcol\" + rowHeader.col +\r\n                        \" colcol\" + colHeader.col\r\n                    eventHandlers = getTableEventHandlers val, rowHeader.key, colHeader.key\r\n                    td = createCell \"td\", style, aggregator.format(val), {\"data-value\": val}, eventHandlers\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal\"\r\n                style += \" pvtRowSubtotal\" if rowHeader.children.length != 0\r\n                style += \" row\" + rowHeader.row + \" rowcol\" + rowHeader.col\r\n                td = createCell \"td\", style, totalAggregator.format(val), {\r\n                    \"data-value\": val,\r\n                    \"data-row\": \"row\"+rowHeader.row,\r\n                    \"data-col\": \"col\"+rowHeader.col}, getTableEventHandlers val, rowHeader.key, []\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement \"tr\"\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell \"th\", \"pvtTotalLabel colTotal\", opts.localeStrings.totals, {colspan: colspan}\r\n            tr.appendChild th\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtVal pvtTotal colTotal\"\r\n                style += \" pvtColSubtotal\" if h.children.length != 0\r\n                style += \" col\" + h.row + \" colcol\" + h.col\r\n                td = createCell \"td\", style, totalAggregator.format(val),\r\n                    {\"data-value\": val, \"data-for\": \"col\" + h.col},\r\n                    getTableEventHandlers val, [], h.key\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell \"td\", \"pvtGrandTotal\", totalAggregator.format(val),\r\n                {\"data-value\": val},\r\n                getTableEventHandlers val, [], []\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        setColVisibility = (visibility, h) ->\r\n            h.th.style.display = visibility\r\n            if h.children.length != 0\r\n                $(h.th).closest 'table.pvtTable'\r\n                    .find 'tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col\r\n                    .css 'display', visibility\r\n            else\r\n                $(h.th)\r\n                    .closest 'table.pvtTable'\r\n                    .find 'tbody tr td.pvtVal.col' + h.row\r\n                    .not '.pvtColSubtotal'\r\n                    .css 'display', visibility\r\n            h.sTh.style.display = visibility if h.sTh\r\n\r\n        collapseCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            return if not colHeaderCols[c]\r\n\r\n            h = colHeaderCols[c]\r\n            return if h.clickStatus is classCollapsed\r\n\r\n            colspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = colHeaderCols[c-i]\r\n                if d.th.style.display isnt \"none\"\r\n                    ++colspan\r\n                    setColVisibility \"none\", d\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\")) - colspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute \"data-colHeader\"\r\n            h.clickStatus = classCollapsed\r\n            h.th.setAttribute \"colspan\", 1\r\n            h.th.style.display = \"\"\r\n            colHeaderHeader = colHeaderHeaders[h.col]\r\n            colHeaderHeader.expandedCount--\r\n            if colHeaderHeader.expandedCount == 0\r\n                for i in [h.col..colHeaderHeaders.length-2]\r\n                    colHeaderHeader = colHeaderHeaders[i]\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute \"data-colAttr\"\r\n                    colHeaderHeader.clickStatus = classCollapsed\r\n\r\n        expandChildCol = (ch) ->\r\n            setColVisibility \"\", ch if ch.th.style.display is \"none\"\r\n            expandChildCol gch for gch in ch.children if ch.clickStatus isnt classCollapsed\r\n\r\n        expandCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            return if not colHeaderCols[c]\r\n\r\n            h = colHeaderCols[c]\r\n            return if h.clickStatus is classExpanded\r\n\r\n            colspan = 0\r\n            for ch in h.children\r\n                colspan += ch.th.colSpan\r\n                setColVisibility \"\", ch if ch.th.style.display is \"none\"\r\n                expandChildCol ch\r\n            if h.descendants != 0\r\n                replaceClass h.th, classCollapsed, classExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute \"data-colHeader\"\r\n            h.th.setAttribute \"colspan\", colspan+1\r\n            h.clickStatus = classExpanded\r\n            h.th.style.display = \"\"\r\n            h.sTh.style.display = \"\" if h.sTh?\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute \"colspan\", colspan + parseInt p.th.getAttribute \"colspan\"\r\n                p = p.parent\r\n            hh = colHeaderHeaders[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount is hh.nHeaders\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute \"data-colAttr\"\r\n                hh.clickStatus = classExpanded\r\n\r\n        collapseRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            return if not rowHeaderRows[r]\r\n\r\n            h = rowHeaderRows[r]\r\n            return if h.clickStatus is classCollapsed\r\n\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute \"rowspan\", parseInt p.th.getAttribute(\"rowspan\")-rowspan\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute \"data-rowHeader\"\r\n            h.clickStatus = classCollapsed\r\n            h.th.setAttribute \"rowspan\", 1\r\n            h.tr.style.display = \"\"\r\n            rowHeaderHeader = rowHeaderHeaders.hh[h.col]\r\n            rowHeaderHeader.expandedCount--\r\n            return if rowHeaderHeader.expandedCount != 0\r\n            for j in [h.col..rowHeaderHeaders.hh.length-2]\r\n                rowHeaderHeader = rowHeaderHeaders.hh[j]\r\n                replaceClass rowHeaderHeader.th, classExpanded, classCollapsed\r\n                rowHeaderHeader.th.textContent =\r\n                    \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute \"data-rowAttr\"\r\n                rowHeaderHeader.clickStatus = classCollapsed\r\n\r\n        expandChildRow = (ch) ->\r\n            ch.tr.style.display = \"\" if ch.tr.style.display is \"none\"\r\n            expandChildRow gch for gch in ch.children if ch.clickStatus isnt classCollapsed\r\n\r\n        expandRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            return if not rowHeaderRows[r]\r\n\r\n            h = rowHeaderRows[r]\r\n            return if h.clickStatus is classExpanded\r\n\r\n            rowspan = 0\r\n            for ch in h.children\r\n                rowspan += ch.th.rowSpan\r\n                ch.tr.style.display = \"\" if ch.tr.style.display is \"none\"\r\n                expandChildRow ch\r\n            if h.descendants != 0\r\n                replaceClass h.th, classCollapsed, classExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute \"data-rowHeader\"\r\n            h.th.setAttribute \"rowspan\", rowspan+1\r\n            h.clickStatus = classExpanded\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute \"rowspan\", rowspan + parseInt p.th.getAttribute \"rowspan\"\r\n                p = p.parent\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount == hh.nHeaders\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute \"data-rowAttr\"\r\n                hh.clickStatus = classExpanded\r\n\r\n        toggleCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            return if not colHeaderCols[c]?\r\n\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is classCollapsed\r\n                expandCol(colHeaderHeaders, colHeaderCols, c)\r\n            else\r\n                collapseCol(colHeaderHeaders, colHeaderCols, c)\r\n            h.th.scrollIntoView\r\n\r\n        toggleRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            return if not rowHeaderRows[r]?\r\n\r\n            if rowHeaderRows[r].clickStatus is classCollapsed\r\n                expandRow(rowHeaderHeaders, rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderHeaders, rowHeaderRows, r)\r\n\r\n        collapseColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            if typeof colAttr is 'string'\r\n                idx = colAttrs.indexOf colAttr\r\n            else\r\n                idx = colAttr\r\n            return if idx < 0 or idx == colAttrs.length-1\r\n            i = idx\r\n            nAttrs = colAttrs.length-1\r\n            while i < nAttrs\r\n                hh = colHeaderHeaders[i]\r\n                replaceClass hh.th, classExpanded, classCollapsed\r\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i]\r\n                hh.clickStatus = classCollapsed\r\n                ++i\r\n            i = 0\r\n            nCols = colHeaderCols.length\r\n            while i < nCols\r\n                h = colHeaderCols[i]\r\n                if h.col is idx and h.clickStatus isnt classCollapsed and h.th.style.display isnt \"none\"\r\n                    collapseCol colHeaderHeaders, colHeaderCols, parseInt h.th.getAttribute(\"data-node\")\r\n                ++i\r\n\r\n        expandColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            if typeof colAttr is 'string'\r\n                idx = colAttrs.indexOf colAttr\r\n            else\r\n                idx = colAttr\r\n            return if idx < 0 or idx == colAttrs.length-1\r\n            for i in [0..idx]\r\n                hh = colHeaderHeaders[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i]\r\n                hh.clickStatus = classExpanded\r\n                j = 0\r\n                nCols = colHeaderCols.length\r\n                while j < nCols\r\n                    h = colHeaderCols[j]\r\n                    expandCol colHeaderHeaders, colHeaderCols, j if h.col == i\r\n                    ++j\r\n            ++idx\r\n            while idx < colAttrs.length-1\r\n                colHeaderHeader = colHeaderHeaders[idx]\r\n                if colHeaderHeader.expandedCount == 0\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx]\r\n                    colHeaderHeader.clickStatus = classCollapsed\r\n                else if colHeaderHeader.expandedCount == colHeaderHeader.nHeaders\r\n                    replaceClass colHeaderHeader.th, classCollapsed, classExpanded\r\n                    colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx]\r\n                    colHeaderHeader.clickStatus = classExpanded\r\n                ++idx\r\n\r\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            if typeof rowAttr is 'string'\r\n                idx = rowAttrs.indexOf rowAttr\r\n            else\r\n                idx = rowAttr\r\n\r\n            return if idx < 0 or idx == rowAttrs.length-1\r\n\r\n            i = idx\r\n            nAttrs = rowAttrs.length-1\r\n            while i < nAttrs\r\n                h = rowHeaderHeaders.hh[i]\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\r\n                h.clickStatus = classCollapsed\r\n                ++i\r\n            j = 0\r\n            nRows = rowHeaderRows.length\r\n            while j < nRows\r\n                h = rowHeaderRows[j]\r\n                if h.col is idx and h.clickStatus isnt classCollapsed and h.tr.style.display isnt \"none\"\r\n                    collapseRow rowHeaderHeaders, rowHeaderRows, j\r\n                    j = j + h.descendants + 1\r\n                else\r\n                    ++j\r\n\r\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            if typeof rowAttr is 'string'\r\n                idx = rowAttrs.indexOf rowAttr\r\n            else\r\n                idx = rowAttr\r\n\r\n            return if idx < 0 or idx == rowAttrs.length-1\r\n\r\n            for i in [0..idx]\r\n                hh = rowHeaderHeaders.hh[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\r\n                hh.clickStatus = classExpanded\r\n                j = 0\r\n                nRows = rowHeaderRows.length\r\n                while j < nRows\r\n                    h = rowHeaderRows[j]\r\n                    if h.col == i\r\n                        expandRow(rowHeaderHeaders, rowHeaderRows, j)\r\n                        j += h.descendants + 1\r\n                    else\r\n                        ++j\r\n            ++idx\r\n            while idx < rowAttrs.length-1\r\n                rowHeaderHeader = rowHeaderHeaders.hh[idx]\r\n                if rowHeaderHeader.expandedCount == 0\r\n                    replaceClass rowHeaderHeader.th, classExpanded, classCollapsed\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx]\r\n                    rowHeaderHeader.clickStatus = classCollapsed\r\n                else if rowHeaderHeader.expandedCount == rowHeaderHeader.nHeaders\r\n                    replaceClass rowHeaderHeader.th, classCollapsed, classExpanded\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx]\r\n                    rowHeaderHeader.clickStatus = classExpanded\r\n                ++idx\r\n\r\n        toggleColHeaderHeader = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            idx = colAttrs.indexOf colAttr\r\n            h = colHeaderHeaders[idx]\r\n            if h.clickStatus is classCollapsed\r\n                expandColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n            else\r\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n\r\n\r\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf rowAttr\r\n            th = rowHeaderHeaders.hh[idx]\r\n            if th.clickStatus is classCollapsed\r\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n            else\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderHeaders = []\r\n            colHeaderCols = []\r\n\r\n            rowHeaders = processKeys rowKeys, \"pvtRowLabel\" if rowAttrs.length > 0 and rowKeys.length > 0\r\n            colHeaders = processKeys colKeys, \"pvtColLabel\" if colAttrs.length > 0 and colKeys.length > 0\r\n\r\n            result = document.createElement \"table\"\r\n            result.className = \"pvtTable\"\r\n            result.style.display = \"none\"\r\n\r\n            thead = document.createElement \"thead\"\r\n            result.appendChild thead\r\n\r\n            if colAttrs.length > 0\r\n                buildColHeaderHeaders thead, colHeaderHeaders, rowAttrs, colAttrs\r\n                buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs for h in colHeaders\r\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\r\n\r\n            if rowAttrs.length > 0\r\n                buildRowHeaderHeaders thead, rowHeaderHeaders, rowAttrs, colAttrs\r\n                buildRowTotalsHeader rowHeaderHeaders.tr, rowAttrs, colAttrs if colAttrs.length == 0\r\n\r\n            if colAttrs.length > 0\r\n                buildRowTotalsHeader colHeaderHeaders[0].tr, rowAttrs, colAttrs\r\n\r\n            tbody = document.createElement \"tbody\"\r\n            result.appendChild tbody\r\n            buildRowHeaders tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs for h in rowHeaders if rowAttrs.length > 0\r\n            buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            buildValues rowHeaderRows, colHeaderCols\r\n            tr = buildColTotalsHeader rowAttrs, colAttrs\r\n            buildColTotals tr, colHeaderCols if colAttrs.length > 0\r\n            buildGrandTotal tbody, tr\r\n\r\n            result.setAttribute \"data-numrows\", rowKeys.length\r\n            result.setAttribute \"data-numcols\", colKeys.length\r\n            result.style.display = \"\" if not opts.collapseRowsAt? and not opts.collapseColsAt?\r\n            ###\r\n            setTimeout (->\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt\r\n                if not opts.collapseColsAt\r\n                    result.style.display = \"\"), 0 if opts.collapseRowsAt?\r\n            setTimeout (->\r\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt\r\n                result.style.display = \"\"), 0 if opts.collapseColsAt?\r\n            ###\r\n            collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt if opts.collapseRowsAt?\r\n            if not opts.collapseColsAt?\r\n                result.style.display = \"\"\r\n                return result\r\n            collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt if opts.collapseColsAt?\r\n            result.style.display = \"\"\r\n\r\n            return result\r\n\r\n        return main rowAttrs, rowKeys, colAttrs, colKeys\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer pvtData, opts\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"heatmap\", opts\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"rowheatmap\", opts\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer pvtData, opts).heatmap \"colheatmap\", opts\r\n\r\n    usFmtPct = $.pivotUtilities.numberFormat digitsAfterDecimal:1, scaler: 100, suffix: \"%\"\r\n    aggregatorTemplates = $.pivotUtilities.aggregatorTemplates;\r\n\r\n    subtotalAggregatorTemplates =\r\n        fractionOf: (wrapped, type=\"row\", formatter=usFmtPct) -> (x...) -> (data, rowKey, colKey) ->\r\n            rowKey = [] if typeof rowKey is \"undefined\"\r\n            colKey = [] if typeof colKey is \"undefined\"\r\n            selector: {row: [rowKey.slice(0, -1),[]], col: [[], colKey.slice(0, -1)]}[type]\r\n            inner: wrapped(x...)(data, rowKey, colKey)\r\n            push: (record) -> @inner.push record\r\n            format: formatter\r\n            value: -> @inner.value() / data.getAggregator(@selector...).inner.value()\r\n            numInputs: wrapped(x...)().numInputs\r\n\r\n    $.pivotUtilities.subtotalAggregatorTemplates = subtotalAggregatorTemplates\r\n\r\n    $.pivotUtilities.subtotal_aggregators = do (tpl = aggregatorTemplates, sTpl = subtotalAggregatorTemplates) ->\r\n        \"Sum As Fraction Of Parent Row\":        sTpl.fractionOf(tpl.sum(), \"row\", usFmtPct)\r\n        \"Sum As Fraction Of Parent Column\":     sTpl.fractionOf(tpl.sum(), \"col\", usFmtPct)\r\n\r\n"]}