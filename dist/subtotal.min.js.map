{"version":3,"sources":["/source/subtotal.coffee","subtotal.min.js"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","superClass","input","opts","processKey","record","totals","keys","attrs","f","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","l","ref1","results1","pivotUtilities","PivotData","pivotData","arrowCollapsed","arrowExpanded","buildColHeaderHeader","buildColHeaderHeaders","buildColHeaderHeadersClickEvents","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaderHeadersClickEvents","buildRowHeaders","buildRowTotalsHeader","buildValues","collapseCol","collapseRow","collapseRowsAt","createCell","defaults","expandCol","expandRow","expandRowsAt","main","processKeys","toggleCol","toggleRow","toggleRowHeaderHeader","localeStrings","getRowKeys","getColKeys","cellType","className","textContent","attributes","th","val","document","createElement","setAttribute","keysArr","c","header","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","row","col","children","descendants","leaves","thead","colHeaderHeaders","tr","colAttr","appendChild","clickStatus","colspan","rowspan","colHeaderCols","onclick","event","window","alert","target","getAttribute","colHeader","h","parseInt","sTh","idx","pos","rowHeaderHeaders","rowAttr","rowHeaderRows","tbody","rowHeader","len1","style","td","totalAggregator","value","format","data-value","data-row","data-col","data-for","result","d","p","console","log","display","hide","ch","show","nAttrs","nRows","indexOf","colHeaders","rowHeaders","sTime","Date","now","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super(input, opts)\r\n\r\n        processKey = (record, totals, keys, attrs, f) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\" \r\n                flatKey = key.join(String.fromCharCode(0))\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = f(key.slice())\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            if addKey\r\n                keys.push key\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n            \r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                    return @aggregator(this, key, [])\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                    return @aggregator(this, [], key)\r\n            m = rowKey.length-1\r\n            n = colKey.length-1            \r\n            if m < 0 or n < 0\r\n                return\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\r\n                if not @tree[flatRowKey]\r\n                    @tree[flatRowKey] = {}\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice(0, j+1)\r\n                    flatColKey = fColKey.join(String.fromCharCode(0))\r\n                    if not @tree[flatRowKey][flatColKey]\r\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                totals: \"Totals\"\r\n\r\n        opts = $.extend defaults, opts\r\n\r\n        arrowCollapsed = \"\\u25B6\"\r\n        arrowExpanded = \"\\u25E2\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal =pivotData.allTotal\r\n        \r\n        createCell = (cellType, className, textContent, attributes) ->\r\n            th = document.createElement(cellType)\r\n            if className then th.className = className\r\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\r\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            headers = []\r\n            th = createCell(\"th\", className, keysArr[0][0])\r\n            flatKey = keysArr[0][0]\r\n            nodePos = 0\r\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\r\n            headers[0] = node \r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell(\"th\", className, keysArr[0][c])\r\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\r\n                ++nodePos\r\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push(node)\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                flatKey = \"\"\r\n                c = 0\r\n                while c <= lastCol\r\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell(\"th\", className, keysArr[r][c])\r\n                    ++nodePos\r\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\r\n                    if c is 0\r\n                        headers.push header\r\n                    else\r\n                        header.parent = rMark[c-1]\r\n                        rMark[c-1].children.push header\r\n                        x = 0\r\n                        while x <= c-1\r\n                            rMark[x].descendants = rMark[x].descendants + 1\r\n                            ++x\r\n                    rMark[c] = header\r\n                    repeats = false\r\n                    ++c\r\n                c = 0\r\n                while c <= lastCol\r\n                    rMark[c].leaves = rMark[c].leaves + 1\r\n                    ++c\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\r\n            colAttr = colAttrs[col]\r\n            th = createCell(\"th\", \"pvtAxisLabel\", colAttr)\r\n            textContent = colAttr\r\n            if col < colAttrs.length-1\r\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\r\n            th = createCell(\"th\", \"pvtAxisLabel\", textContent)\r\n            th.setAttribute(\"data-colAttr\", colAttr)\r\n            tr.appendChild th\r\n            colHeaderHeaders.push({\"tr\": tr, \"th\": th, \"clickStatus\": \"expanded\"})\r\n            thead.appendChild tr\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\r\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\r\n\r\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\r\n            for i in [0..colAttrs.length-1] when i < colAttrs.length-1\r\n                th = colHeaderHeaders[i].th\r\n                colAttr = colAttrs[i]\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    alert event.target.getAttribute(\"data-colAttr\")\r\n                    #toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\")\r\n\r\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs)\r\n            # Process\r\n            tr = colHeaderHeaders[colHeader.col].tr\r\n            th = colHeader.th\r\n            th.setAttribute(\"data-colHeader\", th.textContent) \r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            if colHeader.children.length !=0\r\n                th.setAttribute(\"colspan\", colHeader.descendants+1)\r\n            th.setAttribute(\"data-node\", colHeaderCols.length)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length !=0\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleCol(colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")))\r\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtColLabel\", '', {\"rowspan\": rowspan})\r\n                colHeader.children[0].tr.appendChild(th)\r\n                colHeader.sTh = th\r\n            colHeader.clickStatus = \"expanded\"\r\n            colHeader.tr = tr\r\n            colHeader.idx = colHeaderCols.length\r\n            colHeader.pos = colHeaderCols.length+rowAttrs.length+1\r\n            colHeaderCols.push(colHeader)\r\n\r\n        ###\r\n        buildColHeaders = (colHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\r\n            tr = colHeader.tr\r\n            colHeader.tr = tr\r\n            th = colHeader.th\r\n            th.setAttribute(\"colspan\", colHeader.descendants+1)\r\n            th.setAttribute(\"data-colHeader\", th.textContent) \r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            th.setAttribute(\"data-node\", colHeaderCols.length)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length != 0\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleCol(colHeaders, colHeaderCols, colHeader)\r\n            if colHeader.parent\r\n                lastChild = colHeader.parent.children[colHeader.parent.children.length-1]\r\n                if colHeader is lastChild\r\n                    rowspan = colAttrs.length-colHeader.col + if rowAttrs.length != 0 then 1 else 0\r\n                    th = createCell(\"th\", \"pvtColLabel\", '', {\"rowspan\": rowspan})\r\n                    colHeader.tr.appendChild(th)\r\n            colHeader.clickStatus = \"expanded\"\r\n            colHeaderCols.push(colHeader)\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, colAttrs, colAttrs)\r\n        ###\r\n        \r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            rowHeaderHeaders.th = []\r\n            for i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                if i < rowAttrs.length-1\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\r\n                th = createCell(\"th\", \"pvtAxisLabel\", textContent)\r\n                th.setAttribute(\"data-rowAttr\", rowAttr)\r\n                tr.appendChild th                \r\n                rowHeaderHeaders.th.push({\"th\": th, \"clickStatus\": \"expanded\"})\r\n            if colAttrs.length != 0\r\n                th = createCell(\"th\")\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            for i in [0..rowAttrs.length-1] when i < rowAttrs.length-1\r\n                th = rowHeaderHeaders.th[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\")\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (tbody, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            th = rowHeader.th\r\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\r\n            th.setAttribute(\"data-rowHeader\", th.textContent) \r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute(\"colspan\", 2)\r\n            th.setAttribute(\"data-node\", rowHeaderRows.length)\r\n            tr.appendChild(th)\r\n            if rowHeader.children.length != 0\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow(rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")))\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtRowLabel\", '', {\"colspan\": colspan})\r\n                tr.appendChild(th)\r\n            rowHeader.clickStatus = \"expanded\"\r\n            rowHeader.tr = tr\r\n            rowHeaderRows.push(rowHeader)\r\n            tbody.appendChild(tr)\r\n            for h in rowHeader.children\r\n                buildRowHeaders(tbody, rowHeaderRows, h, rowAttrs, colAttrs)\r\n\r\n        buildValues = (rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtSubtotal\" else style\r\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.col\r\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\r\n            tr.appendChild(th)\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal colTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        collapseCol = (colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            colspan = 0\r\n            h = colHeaderCols[c]\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                console.log \"c: \" + c + \", c-i: \" + (c-i)\r\n                d = colHeaderCols[c-i]\r\n                console.log d.th.textContent + \", \" + (c-i)\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"colspan\", 1)\r\n                if d.th.style.display isnt \"none\"\r\n                    ++colspan\r\n                    d.th.style.display = \"none\"\r\n                    $('table.pvtTable tbody tr td:nth-child(' +  d.pos + ')').hide();\r\n                    if d.sTh\r\n                        d.sTh.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\"))-colspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.clickStatus = \"collapsed\"\r\n            h.th.setAttribute(\"colspan\", 1)\r\n            h.tr.style.display = \"\"\r\n\r\n        expandCol = (colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            collapseCol\r\n            colspan = 0\r\n            h = colHeaderCols[c]\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                console.log \"c: \" + c + \", c-i: \" + (c-i)\r\n                d = colHeaderCols[c-i]\r\n                console.log d.th.textContent + \", \" + (c-i)\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"colspan\", 1)\r\n                if d.th.style.display isnt \"none\"\r\n                    --colspan\r\n                    d.th.style.display = \"none\"\r\n                    $('table.pvtTable tbody tr td:nth-child(' + d.pos + ')').hide();\r\n                    if d.sTh\r\n                        d.sTh.style.display = \"none\"\r\n            for ch in h.children\r\n                if ch.th.style.display is \"none\"\r\n                    ++colspan\r\n                    ch.th.style.display = \"\"\r\n                    $('table.pvtTable tbody tr td:nth-child(' + ch.pos + ')').show();\r\n            h.th.setAttribute(\"colspan\", h.children.length+1)\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.clickStatus = \"expanded\"\r\n            h.th.style.display = \"\"\r\n            if h.sTh\r\n                h.sTh.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", (colspan + parseInt(p.th.getAttribute(\"colspan\"))))\r\n                p = p.parent\r\n\r\n        collapseRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = \"collapsed\"\r\n            h.th.setAttribute(\"rowspan\", 1)\r\n            h.tr.style.display = \"\"\r\n\r\n        expandRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            rowspan = 0\r\n            h = rowHeaderRows[r]\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    --rowspan\r\n                    d.tr.style.display = \"none\"\r\n            for c in h.children\r\n                if c.tr.style.display is \"none\"\r\n                    ++rowspan\r\n                    c.tr.style.display = \"\"\r\n            h.th.setAttribute(\"rowspan\", h.children.length+1)\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = \"expanded\"\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\r\n                p = p.parent\r\n\r\n        toggleCol = (colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            if colHeaderCols[c].clickStatus is \"collapsed\"\r\n                expandCol(colHeaderCols, c)\r\n            else\r\n                collapseCol(colHeaderCols, c)\r\n\r\n        toggleRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            if rowHeaderRows[r].clickStatus is \"collapsed\"\r\n                expandRow(rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderRows, r)\r\n\r\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n            i = idx\r\n            nAttrs = rowAttrs.length-1\r\n            while i < nAttrs\r\n                th = rowHeaderHeaders.th[i]\r\n                th.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\r\n                th.clickStatus = \"collapsed\"\r\n                ++i          \r\n            i = 0\r\n            nRows = rowHeaderRows.length\r\n            while i < nRows\r\n                h = rowHeaderRows[i]\r\n                if h.col is idx\r\n                    collapseRow(rowHeaderRows, h.node)\r\n                    i = i + h.descendants + 1\r\n                else\r\n                    ++i\r\n\r\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n\r\n            for i in [0..idx]\r\n                th = rowHeaderHeaders.th[i]\r\n                th.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\r\n                th.clickStatus = \"expanded\"\r\n                j = 0\r\n                nRows = rowHeaderRows.length\r\n                while j < nRows\r\n                    h = rowHeaderRows[j]\r\n                    if h.col == i\r\n                        expandRow(rowHeaderRows, h.node)\r\n                        j = j + h.descendants + 1\r\n                    else\r\n                        ++j\r\n\r\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            th = rowHeaderHeaders.th[idx]\r\n            if th.clickStatus is \"collapsed\"\r\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n            else\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderHeaders = []\r\n            colHeaderCols = []\r\n\r\n            if rowAttrs.length != 0\r\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\r\n            result = document.createElement(\"table\")\r\n            result.className = \"pvtTable\"\r\n            thead = document.createElement(\"thead\")\r\n            result.appendChild thead\r\n            if colAttrs.length != 0\r\n                buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs)\r\n                for h in colHeaders\r\n                    #buildColHeaders colHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs\r\n                   buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\r\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\r\n            if rowAttrs.length != 0\r\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\r\n                if colAttrs.length == 0\r\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs)\r\n            tbody = document.createElement(\"tbody\")\r\n            result.appendChild tbody\r\n            if rowAttrs.length != 0\r\n                for h in rowHeaders\r\n                    buildRowHeaders tbody, rowHeaderRows, h, rowAttrs, colAttrs\r\n                buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            buildValues(rowHeaderRows, colHeaderCols)\r\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildColTotals(tr, colHeaderCols)\r\n            buildGrandTotal(tbody, tr)\r\n            result.setAttribute(\"data-numrows\", rowKeys.length)\r\n            result.setAttribute(\"data-numcols\", colKeys.length)\r\n            if opts.collapseRowsAt\r\n                collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt)\r\n            return result\r\n\r\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\r\n        \r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap()\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\")\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\")\r\n","(function() {\n  var callWithJQuery,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalPivotData, SubtotalRenderer;\n    SubtotalPivotData = (function(superClass) {\n      var processKey;\n\n      extend(SubtotalPivotData, superClass);\n\n      function SubtotalPivotData(input, opts) {\n        SubtotalPivotData.__super__.constructor.call(this, input, opts);\n      }\n\n      processKey = function(record, totals, keys, attrs, f) {\n        var addKey, attr, flatKey, k, key, len, ref;\n        key = [];\n        addKey = false;\n        for (k = 0, len = attrs.length; k < len; k++) {\n          attr = attrs[k];\n          key.push((ref = record[attr]) != null ? ref : \"null\");\n          flatKey = key.join(String.fromCharCode(0));\n          if (!totals[flatKey]) {\n            totals[flatKey] = f(key.slice());\n            addKey = true;\n          }\n          totals[flatKey].push(record);\n        }\n        if (addKey) {\n          keys.push(key);\n        }\n        return key;\n      };\n\n      SubtotalPivotData.prototype.processRecord = function(record) {\n        var colKey, fColKey, fRowKey, flatColKey, flatRowKey, i, j, k, m, n, ref, results, rowKey;\n        rowKey = [];\n        colKey = [];\n        this.allTotal.push(record);\n        rowKey = processKey(record, this.rowTotals, this.rowKeys, this.rowAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, key, []);\n          };\n        })(this));\n        colKey = processKey(record, this.colTotals, this.colKeys, this.colAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, [], key);\n          };\n        })(this));\n        m = rowKey.length - 1;\n        n = colKey.length - 1;\n        if (m < 0 || n < 0) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = m; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          fRowKey = rowKey.slice(0, i + 1);\n          flatRowKey = fRowKey.join(String.fromCharCode(0));\n          if (!this.tree[flatRowKey]) {\n            this.tree[flatRowKey] = {};\n          }\n          results.push((function() {\n            var l, ref1, results1;\n            results1 = [];\n            for (j = l = 0, ref1 = n; 0 <= ref1 ? l <= ref1 : l >= ref1; j = 0 <= ref1 ? ++l : --l) {\n              fColKey = colKey.slice(0, j + 1);\n              flatColKey = fColKey.join(String.fromCharCode(0));\n              if (!this.tree[flatRowKey][flatColKey]) {\n                this.tree[flatRowKey][flatColKey] = this.aggregator(this, fRowKey, fColKey);\n              }\n              results1.push(this.tree[flatRowKey][flatColKey].push(record));\n            }\n            return results1;\n          }).call(this));\n        }\n        return results;\n      };\n\n      return SubtotalPivotData;\n\n    })($.pivotUtilities.PivotData);\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData;\n    SubtotalRenderer = function(pivotData, opts) {\n      var allTotal, arrowCollapsed, arrowExpanded, buildColHeaderHeader, buildColHeaderHeaders, buildColHeaderHeadersClickEvents, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaderHeadersClickEvents, buildRowHeaders, buildRowTotalsHeader, buildValues, colAttrs, colKeys, colTotals, collapseCol, collapseRow, collapseRowsAt, createCell, defaults, expandCol, expandRow, expandRowsAt, main, processKeys, rowAttrs, rowKeys, rowTotals, toggleCol, toggleRow, toggleRowHeaderHeader, tree;\n      defaults = {\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(defaults, opts);\n      arrowCollapsed = \"\\u25B6\";\n      arrowExpanded = \"\\u25E2\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      createCell = function(cellType, className, textContent, attributes) {\n        var attr, th, val;\n        th = document.createElement(cellType);\n        if (className) {\n          th.className = className;\n        }\n        if (textContent !== null && textContent !== void 0) {\n          th.textContent = textContent;\n        }\n        if (attributes) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, flatKey, header, headers, lastCol, lastRow, node, nodePos, r, rMark, repeats, th, x;\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        headers = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        flatKey = keysArr[0][0];\n        nodePos = 0;\n        node = {\n          \"node\": nodePos,\n          \"row\": 0,\n          \"col\": 0,\n          \"th\": th,\n          \"parent\": null,\n          \"children\": [],\n          \"descendants\": lastCol,\n          \"leaves\": 1,\n          \"flatKey\": flatKey\n        };\n        headers[0] = node;\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c];\n          ++nodePos;\n          node = {\n            \"node\": nodePos,\n            \"row\": 0,\n            \"col\": c,\n            \"th\": th,\n            \"parent\": rMark[c - 1],\n            \"children\": [],\n            \"descendants\": lastCol - c,\n            \"leaves\": 1,\n            \"flatKey\": flatKey\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          flatKey = \"\";\n          c = 0;\n          while (c <= lastCol) {\n            flatKey = c === 0 ? keysArr[r][c] : flatKey + String.fromCharCode(0) + keysArr[r][c];\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            header = {\n              \"node\": nodePos,\n              \"row\": r,\n              \"col\": c,\n              \"th\": th,\n              \"parent\": null,\n              \"children\": [],\n              \"descendants\": 0,\n              \"leaves\": 1,\n              \"flatKey\": flatKey\n            };\n            if (c === 0) {\n              headers.push(header);\n            } else {\n              header.parent = rMark[c - 1];\n              rMark[c - 1].children.push(header);\n              x = 0;\n              while (x <= c - 1) {\n                rMark[x].descendants = rMark[x].descendants + 1;\n                ++x;\n              }\n            }\n            rMark[c] = header;\n            repeats = false;\n            ++c;\n          }\n          c = 0;\n          while (c <= lastCol) {\n            rMark[c].leaves = rMark[c].leaves + 1;\n            ++c;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeader = function(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) {\n        var colAttr, textContent, th;\n        colAttr = colAttrs[col];\n        th = createCell(\"th\", \"pvtAxisLabel\", colAttr);\n        textContent = colAttr;\n        if (col < colAttrs.length - 1) {\n          textContent = \" \" + arrowExpanded + \" \" + colAttr;\n        }\n        th = createCell(\"th\", \"pvtAxisLabel\", textContent);\n        th.setAttribute(\"data-colAttr\", colAttr);\n        tr.appendChild(th);\n        colHeaderHeaders.push({\n          \"tr\": tr,\n          \"th\": th,\n          \"clickStatus\": \"expanded\"\n        });\n        return thead.appendChild(tr);\n      };\n      buildColHeaderHeaders = function(thead, colHeaderHeaders, rowAttrs, colAttrs) {\n        var c, k, ref, results, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            \"colspan\": rowAttrs.length,\n            \"rowspan\": colAttrs.length\n          }));\n        }\n        buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0);\n        results = [];\n        for (c = k = 1, ref = colAttrs.length; 1 <= ref ? k <= ref : k >= ref; c = 1 <= ref ? ++k : --k) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          results.push(buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c));\n        }\n        return results;\n      };\n      buildColHeaderHeadersClickEvents = function(colHeaderHeaders, colHeaderCols, colAttrs) {\n        var colAttr, i, k, ref, results, th;\n        results = [];\n        for (i = k = 0, ref = colAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < colAttrs.length - 1)) {\n            continue;\n          }\n          th = colHeaderHeaders[i].th;\n          colAttr = colAttrs[i];\n          results.push(th.onclick = function(event) {\n            event = event || window.event;\n            return alert(event.target.getAttribute(\"data-colAttr\"));\n          });\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) {\n        var h, k, len, ref, rowspan, th, tr;\n        ref = colHeader.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n        }\n        tr = colHeaderHeaders[colHeader.col].tr;\n        th = colHeader.th;\n        th.setAttribute(\"data-colHeader\", th.textContent);\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants + 1);\n        }\n        th.setAttribute(\"data-node\", colHeaderCols.length);\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleCol(colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          rowspan = colAttrs.length - (colHeader.col + 1) + (rowAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtColLabel\", '', {\n            \"rowspan\": rowspan\n          });\n          colHeader.children[0].tr.appendChild(th);\n          colHeader.sTh = th;\n        }\n        colHeader.clickStatus = \"expanded\";\n        colHeader.tr = tr;\n        colHeader.idx = colHeaderCols.length;\n        colHeader.pos = colHeaderCols.length + rowAttrs.length + 1;\n        return colHeaderCols.push(colHeader);\n      };\n\n      /*\n      buildColHeaders = (colHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\n          tr = colHeader.tr\n          colHeader.tr = tr\n          th = colHeader.th\n          th.setAttribute(\"colspan\", colHeader.descendants+1)\n          th.setAttribute(\"data-colHeader\", th.textContent) \n          if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\n              th.setAttribute(\"rowspan\", 2)\n          th.setAttribute(\"data-node\", colHeaderCols.length)\n          tr.appendChild(th)\n          if colHeader.children.length != 0\n              th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\n              th.onclick = (event) ->\n                  event = event || window.event\n                  toggleCol(colHeaders, colHeaderCols, colHeader)\n          if colHeader.parent\n              lastChild = colHeader.parent.children[colHeader.parent.children.length-1]\n              if colHeader is lastChild\n                  rowspan = colAttrs.length-colHeader.col + if rowAttrs.length != 0 then 1 else 0\n                  th = createCell(\"th\", \"pvtColLabel\", '', {\"rowspan\": rowspan})\n                  colHeader.tr.appendChild(th)\n          colHeader.clickStatus = \"expanded\"\n          colHeaderCols.push(colHeader)\n          for h in colHeader.children\n              buildColHeaders(colHeaderHeaders, colHeaderCols, h, colAttrs, colAttrs)\n       */\n      buildRowHeaderHeaders = function(thead, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var i, rowAttr, textContent, th, tr;\n        tr = document.createElement(\"tr\");\n        rowHeaderHeaders.th = [];\n        for (i in rowAttrs) {\n          rowAttr = rowAttrs[i];\n          textContent = rowAttr;\n          if (i < rowAttrs.length - 1) {\n            textContent = \" \" + arrowExpanded + \" \" + rowAttr;\n          }\n          th = createCell(\"th\", \"pvtAxisLabel\", textContent);\n          th.setAttribute(\"data-rowAttr\", rowAttr);\n          tr.appendChild(th);\n          rowHeaderHeaders.th.push({\n            \"th\": th,\n            \"clickStatus\": \"expanded\"\n          });\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        thead.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowHeaderHeadersClickEvents = function(rowHeaderHeaders, rowHeaderRows, rowAttrs) {\n        var i, k, ref, results, rowAttr, th;\n        results = [];\n        for (i = k = 0, ref = rowAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < rowAttrs.length - 1)) {\n            continue;\n          }\n          th = rowHeaderHeaders.th[i];\n          rowAttr = rowAttrs[i];\n          results.push(th.th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRowHeaderHeader(rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\"));\n          });\n        }\n        return results;\n      };\n      buildRowTotalsHeader = function(tr, rowAttrs, colAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"rowspan\": rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(tbody, rowHeaderRows, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, k, len, ref, results, th, tr;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        th.setAttribute(\"data-rowHeader\", th.textContent);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRows.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel\", '', {\n            \"colspan\": colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = \"expanded\";\n        rowHeader.tr = tr;\n        rowHeaderRows.push(rowHeader);\n        tbody.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          results.push(buildRowHeaders(tbody, rowHeaderRows, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRows, colHeaderCols) {\n        var aggregator, colHeader, flatColKey, flatRowKey, k, l, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (k = 0, len = rowHeaderRows.length; k < len; k++) {\n          rowHeader = rowHeaderRows[k];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (l = 0, len1 = colHeaderCols.length; l < len1; l++) {\n            colHeader = colHeaderCols[l];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            style = colHeader.children.length !== 0 ? style + \" pvtSubtotal\" : style;\n            style = style + \" row\" + rowHeader.row + \" col\" + colHeader.col;\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            });\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"colspan\": colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderCols) {\n        var h, k, len, results, td, totalAggregator, val;\n        results = [];\n        for (k = 0, len = colHeaderCols.length; k < len; k++) {\n          h = colHeaderCols[k];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          td = createCell(\"td\", \"pvtTotal colTotal\", totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        });\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      collapseCol = function(colHeaderCols, c) {\n        var colspan, d, h, i, k, p, ref;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        colspan = 0;\n        h = colHeaderCols[c];\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          console.log(\"c: \" + c + \", c-i: \" + (c - i));\n          d = colHeaderCols[c - i];\n          console.log(d.th.textContent + \", \" + (c - i));\n          if (d.descendants !== 0) {\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"colspan\", 1);\n          if (d.th.style.display !== \"none\") {\n            ++colspan;\n            d.th.style.display = \"none\";\n            $('table.pvtTable tbody tr td:nth-child(' + d.pos + ')').hide();\n            if (d.sTh) {\n              d.sTh.style.display = \"none\";\n            }\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\")) - colspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"colspan\", 1);\n        return h.tr.style.display = \"\";\n      };\n      expandCol = function(colHeaderCols, c) {\n        var ch, colspan, d, h, i, k, l, len, p, ref, ref1, results;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        collapseCol;\n        colspan = 0;\n        h = colHeaderCols[c];\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          console.log(\"c: \" + c + \", c-i: \" + (c - i));\n          d = colHeaderCols[c - i];\n          console.log(d.th.textContent + \", \" + (c - i));\n          if (d.descendants !== 0) {\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"colspan\", 1);\n          if (d.th.style.display !== \"none\") {\n            --colspan;\n            d.th.style.display = \"none\";\n            $('table.pvtTable tbody tr td:nth-child(' + d.pos + ')').hide();\n            if (d.sTh) {\n              d.sTh.style.display = \"none\";\n            }\n          }\n        }\n        ref1 = h.children;\n        for (l = 0, len = ref1.length; l < len; l++) {\n          ch = ref1[l];\n          if (ch.th.style.display === \"none\") {\n            ++colspan;\n            ch.th.style.display = \"\";\n            $('table.pvtTable tbody tr td:nth-child(' + ch.pos + ')').show();\n          }\n        }\n        h.th.setAttribute(\"colspan\", h.children.length + 1);\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.clickStatus = \"expanded\";\n        h.th.style.display = \"\";\n        if (h.sTh) {\n          h.sTh.style.display = \"\";\n        }\n        p = h.parent;\n        results = [];\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", colspan + parseInt(p.th.getAttribute(\"colspan\")));\n          results.push(p = p.parent);\n        }\n        return results;\n      };\n      collapseRow = function(rowHeaderRows, r) {\n        var d, h, i, k, p, ref, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\")) - rowspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"rowspan\", 1);\n        return h.tr.style.display = \"\";\n      };\n      expandRow = function(rowHeaderRows, r) {\n        var c, d, h, i, k, l, len, p, ref, ref1, results, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        rowspan = 0;\n        h = rowHeaderRows[r];\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            --rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        ref1 = h.children;\n        for (l = 0, len = ref1.length; l < len; l++) {\n          c = ref1[l];\n          if (c.tr.style.display === \"none\") {\n            ++rowspan;\n            c.tr.style.display = \"\";\n          }\n        }\n        h.th.setAttribute(\"rowspan\", h.children.length + 1);\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = \"expanded\";\n        h.tr.style.display = \"\";\n        p = h.parent;\n        results = [];\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          results.push(p = p.parent);\n        }\n        return results;\n      };\n      toggleCol = function(colHeaderCols, c) {\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        if (colHeaderCols[c].clickStatus === \"collapsed\") {\n          return expandCol(colHeaderCols, c);\n        } else {\n          return collapseCol(colHeaderCols, c);\n        }\n      };\n      toggleRow = function(rowHeaderRows, r) {\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === \"collapsed\") {\n          return expandRow(rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderRows, r);\n        }\n      };\n      collapseRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, nAttrs, nRows, results, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = rowAttrs.length - 1;\n        while (i < nAttrs) {\n          th = rowHeaderHeaders.th[i];\n          th.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i];\n          th.clickStatus = \"collapsed\";\n          ++i;\n        }\n        i = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (i < nRows) {\n          h = rowHeaderRows[i];\n          if (h.col === idx) {\n            collapseRow(rowHeaderRows, h.node);\n            results.push(i = i + h.descendants + 1);\n          } else {\n            results.push(++i);\n          }\n        }\n        return results;\n      };\n      expandRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, j, k, nRows, ref, results, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          th = rowHeaderHeaders.th[i];\n          th.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i];\n          th.clickStatus = \"expanded\";\n          j = 0;\n          nRows = rowHeaderRows.length;\n          results.push((function() {\n            var results1;\n            results1 = [];\n            while (j < nRows) {\n              h = rowHeaderRows[j];\n              if (h.col === i) {\n                expandRow(rowHeaderRows, h.node);\n                results1.push(j = j + h.descendants + 1);\n              } else {\n                results1.push(++j);\n              }\n            }\n            return results1;\n          })());\n        }\n        return results;\n      };\n      toggleRowHeaderHeader = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var idx, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        th = rowHeaderHeaders.th[idx];\n        if (th.clickStatus === \"collapsed\") {\n          return expandRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        } else {\n          return collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        }\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderHeaders, colHeaders, h, k, l, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, sTime, tbody, thead, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderHeaders = [];\n        colHeaderCols = [];\n        if (rowAttrs.length !== 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length !== 0) {\n          sTime = Date.now();\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        thead = document.createElement(\"thead\");\n        result.appendChild(thead);\n        if (colAttrs.length !== 0) {\n          buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs);\n          for (k = 0, len = colHeaders.length; k < len; k++) {\n            h = colHeaders[k];\n            buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n          }\n          buildColHeaderHeadersClickEvents(colHeaderHeaders, colHeaderCols, colAttrs);\n        }\n        if (rowAttrs.length !== 0) {\n          buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs);\n          }\n        }\n        if (colAttrs.length !== 0) {\n          sTime = Date.now();\n          buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs);\n        }\n        tbody = document.createElement(\"tbody\");\n        result.appendChild(tbody);\n        if (rowAttrs.length !== 0) {\n          for (l = 0, len1 = rowHeaders.length; l < len1; l++) {\n            h = rowHeaders[l];\n            buildRowHeaders(tbody, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n          buildRowHeaderHeadersClickEvents(rowHeaderHeaders, rowHeaderRows, rowAttrs);\n        }\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length !== 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(tbody, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        if (opts.collapseRowsAt) {\n          collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap();\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\");\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\");\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal.js.map\n"],"sourceRoot":"/source/"}