{"version":3,"sources":["/source/subtotal.coffee","subtotal.min.js"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","superClass","input","opts","processKey","record","totals","keys","attrs","f","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","l","ref1","results1","pivotUtilities","PivotData","pivotData","addClass","arrowCollapsed","arrowExpanded","buildColHeaderHeader","buildColHeaderHeaders","buildColHeaderHeadersClickEvents","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaderHeadersClickEvents","buildRowHeaders","buildRowTotalsHeader","buildValues","classCollapsed","classExpanded","collapseCol","collapseColsAt","collapseRow","collapseRowsAt","createCell","defaults","expandChildCol","expandChildRow","expandCol","expandColsAt","expandRow","expandRowsAt","getTableEventHandlers","hasClass","main","processKeys","removeClass","replaceClass","setColVisibility","toggleCol","toggleColHeaderHeader","toggleRow","toggleRowHeaderHeader","table","clickCallback","localeStrings","getRowKeys","getColKeys","element","className","regExp","RegExp","match","replace","replaceClassName","byClassName","value","rowValues","colValues","filters","tableEvent","tableEventHandler","tableEventHandlers","eventHandlers","e","cellType","textContent","attributes","event","handler","th","val","document","createElement","setAttribute","addEventListener","keysArr","c","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","row","col","children","descendants","leaves","thead","colHeaderHeaders","tr","colAttr","appendChild","clickStatus","expandedCount","nHeaders","colspan","rowspan","colHeaderCols","onclick","window","target","getAttribute","colHeader","h","hh","style","parseInt","sTh","rowHeaderHeaders","rowAttr","rowHeaderRows","tbody","rowHeader","len1","td","totalAggregator","format","data-value","data-row","data-col","data-for","result","visibility","display","closest","find","css","not","colHeaderHeader","d","p","ref2","ch","gch","colSpan","rowHeaderHeader","rowSpan","scrollIntoView","idx","nAttrs","nCols","indexOf","nRows","colHeaders","rowHeaders","setTimeout","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super(input, opts)\r\n\r\n        processKey = (record, totals, keys, attrs, f) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join(String.fromCharCode(0))\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = f(key.slice())\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            if addKey\r\n                keys.push key\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                    return @aggregator(this, key, [])\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                    return @aggregator(this, [], key)\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            if m < 0 or n < 0\r\n                return\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\r\n                if not @tree[flatRowKey]\r\n                    @tree[flatRowKey] = {}\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice(0, j+1)\r\n                    flatColKey = fColKey.join(String.fromCharCode(0))\r\n                    if not @tree[flatRowKey][flatColKey]\r\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            table: clickCallback: null\r\n            localeStrings: totals: \"Totals\"\r\n\r\n        opts = $.extend(true, {}, defaults, opts)\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n        classExpanded = \"expanded\" \r\n        classCollapsed = \"collapsed\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal = pivotData.allTotal\r\n\r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\")\r\n            element.className.match(regExp)\r\n\r\n        removeClass = (element, className) ->\r\n            regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\")\r\n            element.className = element.className.replace(regExp, '')\r\n\r\n        addClass = (element, className) ->\r\n            if (!hasClass(element, className)) then element.className += (\" \" + className)\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName \r\n        # Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End \r\n\r\n        getTableEventHandlers = (value, rowValues, colValues) ->\r\n            if opts.table.eventHandlers?\r\n                tableEventHandlers = {}\r\n                for own tableEvent, tableEventHandler of opts.table.eventHandlers\r\n                    filters = {}\r\n                    filters[attr] = colValues[i] for own i, attr of colAttrs when colValues[i]?\r\n                    filters[attr] = rowValues[i] for own i, attr of rowAttrs when rowValues[i]?\r\n                    tableEventHandlers[tableEvent] = (e) -> tableEventHandler(e, value, filters, pivotData)\r\n                return tableEventHandlers\r\n\r\n        createCell = (cellType, className, textContent, attributes, eventHandlers) ->\r\n            th = document.createElement(cellType)\r\n            if className then th.className = className\r\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\r\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\r\n            if eventHandlers\r\n               for own event, handler of eventHandlers\r\n                   th.addEventListener(event, handler)\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            headers = []\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            th = createCell(\"th\", className, keysArr[0][0])\r\n            key = []\r\n            key.push(keysArr[0][0])\r\n            nodePos = 0\r\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"key\": key, \"flatKey\": key.join(String.fromCharCode(0))}\r\n            headers.push(node)\r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell(\"th\", className, keysArr[0][c])\r\n                key = key.slice()\r\n                key.push(keysArr[0][c])\r\n                ++nodePos\r\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"key\": key, \"flatKey\": key.join(String.fromCharCode(0))}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push(node)\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                c = 0\r\n                key = []\r\n                key.push(keysArr[r][0])\r\n                while c <= lastCol\r\n                    if c > 0\r\n                        key = key.slice()\r\n                        key.push(keysArr[r][c])\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell(\"th\", className, keysArr[r][c])\r\n                    ++nodePos\r\n                    node = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"key\": key, \"flatKey\": key.join(String.fromCharCode(0))}\r\n                    if c is 0\r\n                        headers.push node\r\n                    else\r\n                        node.parent = rMark[c-1]\r\n                        rMark[c-1].children.push node\r\n                        x = 0\r\n                        while x <= c-1\r\n                            rMark[x].descendants = rMark[x].descendants + 1\r\n                            ++x\r\n                    rMark[c] = node\r\n                    repeats = false\r\n                    ++c\r\n                c = 0\r\n                while c <= lastCol\r\n                    rMark[c].leaves = rMark[c].leaves + 1\r\n                    ++c\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\r\n            colAttr = colAttrs[col]\r\n            # th = createCell(\"th\", \"pvtAxisLabel\", colAttr)\r\n            textContent = colAttr\r\n            className = \"pvtAxisLabel\"\r\n            if col < colAttrs.length-1\r\n                className += \" expanded\"\r\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\r\n            th = createCell(\"th\", className, textContent)\r\n            th.setAttribute(\"data-colAttr\", colAttr)\r\n            tr.appendChild th\r\n            colHeaderHeaders.push({\"tr\": tr, \"th\": th, \"clickStatus\": classExpanded, \"expandedCount\": 0, \"nHeaders\": 0})\r\n            thead.appendChild tr\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\r\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\r\n\r\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\r\n            for i in [0..colAttrs.length-1] when i < colAttrs.length-1\r\n                th = colHeaderHeaders[i].th\r\n                colAttr = colAttrs[i]\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\")\r\n\r\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs)\r\n            # Process\r\n            hh = colHeaderHeaders[colHeader.col]\r\n            ++hh.expandedCount\r\n            ++hh.nHeaders\r\n            tr = hh.tr\r\n            th = colHeader.th\r\n            th.setAttribute(\"data-colHeader\", th.textContent)\r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            if colHeader.children.length !=0\r\n                th.setAttribute(\"colspan\", colHeader.descendants+1)\r\n            th.setAttribute(\"data-node\", colHeaderCols.length)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length !=0\r\n                addClass th, classExpanded\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")))\r\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\r\n                style = \"pvtColLabel col\" + colHeader.row\r\n                th = createCell(\"th\", style, '', {\"rowspan\": rowspan})\r\n                colHeader.children[0].tr.appendChild(th)\r\n                colHeader.sTh = th\r\n            colHeader.clickStatus = classExpanded\r\n            colHeader.tr = tr\r\n            colHeaderCols.push(colHeader)\r\n\r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            rowHeaderHeaders.hh = []\r\n            for own i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                className = \"pvtAxisLabel\"\r\n                if i < rowAttrs.length-1\r\n                    className += \" expanded\"\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\r\n                th = createCell(\"th\", className, textContent)\r\n                th.setAttribute(\"data-rowAttr\", rowAttr)\r\n                tr.appendChild th\r\n                rowHeaderHeaders.hh.push({\"th\": th, \"clickStatus\": classExpanded, \"expandedCount\": 0, \"nHeaders\": 0})\r\n            if colAttrs.length != 0\r\n                th = createCell(\"th\")\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            for i in [0..rowAttrs.length-1] when i < rowAttrs.length-1\r\n                th = rowHeaderHeaders.hh[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\")\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\r\n            hh = rowHeaderHeaders.hh[rowHeader.col]\r\n            ++hh.expandedCount\r\n            ++hh.nHeaders\r\n            tr = document.createElement(\"tr\")\r\n            th = rowHeader.th\r\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\r\n            th.setAttribute(\"data-rowHeader\", th.textContent)\r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute(\"colspan\", 2)\r\n            th.setAttribute(\"data-node\", rowHeaderRows.length)\r\n            tr.appendChild(th)\r\n            if rowHeader.children.length != 0\r\n                addClass th, classExpanded\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")))\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtRowLabel pvtRowSubtotal\", '', {\"colspan\": colspan})\r\n                tr.appendChild(th)\r\n            rowHeader.clickStatus = classExpanded\r\n            rowHeader.tr = tr\r\n            rowHeaderRows.push(rowHeader)\r\n            tbody.appendChild(tr)\r\n            for h in rowHeader.children\r\n                buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs)\r\n\r\n        buildValues = (rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtColSubtotal\" else style\r\n                    style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\r\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.row+\" rowcol\"+rowHeader.col+\" colcol\"+colHeader.col\r\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val}, getTableEventHandlers(val, rowHeader.key, colHeader.key))\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal\"\r\n                style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\r\n                style = style + \" row\"+rowHeader.row+\" rowcol\"+rowHeader.col\r\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col}, getTableEventHandlers(val, rowHeader.key, []))\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\r\n            tr.appendChild(th)\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtVal pvtTotal colTotal\"\r\n                style = if h.children.length then style + \" pvtColSubtotal\" else style\r\n                style = style + \" col\"+h.row+\" colcol\"+h.col\r\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col}, getTableEventHandlers(val, [], h.key))\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val}, getTableEventHandlers(val, [], []))\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        setColVisibility = (visibility, h) ->\r\n            h.th.style.display = visibility\r\n            if h.children.length\r\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility)\r\n            else\r\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility)\r\n            if h.sTh\r\n                h.sTh.style.display = visibility\r\n\r\n        collapseCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is classCollapsed\r\n                return\r\n            colspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = colHeaderCols[c-i]\r\n                if d.th.style.display isnt \"none\"\r\n                    ++colspan\r\n                    setColVisibility \"none\", d\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\"))-colspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.clickStatus = classCollapsed\r\n            h.th.setAttribute(\"colspan\", 1)\r\n            h.th.style.display = \"\"\r\n            colHeaderHeader = colHeaderHeaders[h.col]\r\n            colHeaderHeader.expandedCount--\r\n            if colHeaderHeader.expandedCount == 0\r\n                for i in [h.col..colHeaderHeaders.length-2]\r\n                    colHeaderHeader = colHeaderHeaders[i]\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\")\r\n                    colHeaderHeader.clickStatus = classCollapsed\r\n\r\n        expandChildCol = (ch) ->\r\n            if ch.th.style.display is \"none\"\r\n                setColVisibility \"\", ch\r\n            if ch.clickStatus isnt classCollapsed\r\n                for gch in ch.children\r\n                    expandChildCol gch\r\n\r\n        expandCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is classExpanded\r\n                return\r\n            colspan = 0\r\n            for ch in h.children\r\n                colspan = colspan + ch.th.colSpan\r\n                if ch.th.style.display is \"none\"\r\n                    setColVisibility \"\", ch\r\n                expandChildCol ch\r\n            if h.descendants != 0\r\n                replaceClass h.th, classCollapsed, classExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.th.setAttribute(\"colspan\", colspan+1)\r\n            h.clickStatus = classExpanded\r\n            h.th.style.display = \"\"\r\n            if h.sTh\r\n                h.sTh.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", (colspan + parseInt(p.th.getAttribute(\"colspan\"))))\r\n                p = p.parent\r\n            hh = colHeaderHeaders[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount == hh.nHeaders\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\")\r\n                hh.clickStatus = classExpanded\r\n\r\n        collapseRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            if h.clickStatus is classCollapsed\r\n                return\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = classCollapsed\r\n            h.th.setAttribute(\"rowspan\", 1)\r\n            h.tr.style.display = \"\"\r\n            rowHeaderHeader = rowHeaderHeaders.hh[h.col]\r\n            rowHeaderHeader.expandedCount--\r\n            if rowHeaderHeader.expandedCount == 0\r\n                for j in [h.col..rowHeaderHeaders.hh.length-2]\r\n                    rowHeaderHeader = rowHeaderHeaders.hh[j]\r\n                    replaceClass rowHeaderHeader.th, classExpanded, classCollapsed\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\")\r\n                    rowHeaderHeader.clickStatus = classCollapsed\r\n\r\n        expandChildRow = (ch) ->\r\n            if ch.tr.style.display is \"none\"\r\n                ch.tr.style.display = \"\"\r\n            if ch.clickStatus isnt classCollapsed\r\n                for gch in ch.children\r\n                    expandChildRow gch\r\n\r\n        expandRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            if h.clickStatus is classExpanded\r\n                return\r\n            rowspan = 0\r\n            for ch in h.children\r\n                rowspan = rowspan + ch.th.rowSpan\r\n                if ch.tr.style.display is \"none\"\r\n                    ch.tr.style.display = \"\"\r\n                expandChildRow ch\r\n            if h.descendants != 0\r\n                replaceClass h.th, classCollapsed, classExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.th.setAttribute(\"rowspan\", rowspan+1)\r\n            h.clickStatus = classExpanded\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\r\n                p = p.parent\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount == hh.nHeaders\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\")\r\n                hh.clickStatus = classExpanded\r\n\r\n        toggleCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is classCollapsed\r\n                expandCol(colHeaderHeaders, colHeaderCols, c)\r\n            else\r\n                collapseCol(colHeaderHeaders, colHeaderCols, c)\r\n            h.th.scrollIntoView\r\n\r\n        toggleRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            if rowHeaderRows[r].clickStatus is classCollapsed\r\n                expandRow(rowHeaderHeaders, rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderHeaders, rowHeaderRows, r)\r\n\r\n        collapseColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            if typeof colAttr is 'string'\r\n                idx = colAttrs.indexOf(colAttr)\r\n            else\r\n                idx = colAttr\r\n            if idx < 0 or idx == colAttrs.length-1\r\n                return\r\n            i = idx\r\n            nAttrs = colAttrs.length-1\r\n            while i < nAttrs\r\n                hh = colHeaderHeaders[i]\r\n                replaceClass hh.th, classExpanded, classCollapsed\r\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i]\r\n                hh.clickStatus = classCollapsed\r\n                ++i\r\n            i = 0\r\n            nCols = colHeaderCols.length\r\n            while i < nCols\r\n                h = colHeaderCols[i]\r\n                if h.col is idx and h.clickStatus isnt classCollapsed and h.th.style.display isnt \"none\"\r\n                    collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")))\r\n                ++i\r\n\r\n        expandColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            if typeof colAttr is 'string'\r\n                idx = colAttrs.indexOf(colAttr)\r\n            else\r\n                idx = colAttr\r\n            if idx < 0 or idx == colAttrs.length-1\r\n                return\r\n            for i in [0..idx]\r\n                hh = colHeaderHeaders[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i]\r\n                hh.clickStatus = classExpanded\r\n                j = 0\r\n                nCols = colHeaderCols.length\r\n                while j < nCols\r\n                    h = colHeaderCols[j]\r\n                    if h.col == i\r\n                        expandCol(colHeaderHeaders, colHeaderCols, j)\r\n                    ++j\r\n            ++idx\r\n            while idx < colAttrs.length-1\r\n                colHeaderHeader = colHeaderHeaders[idx]\r\n                if colHeaderHeader.expandedCount == 0\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx]\r\n                    colHeaderHeader.clickStatus = classCollapsed\r\n                else if colHeaderHeader.expandedCount == colHeaderHeader.nHeaders\r\n                    replaceClass colHeaderHeader.th, classCollapsed, classExpanded\r\n                    colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx]\r\n                    colHeaderHeader.clickStatus = classExpanded\r\n                ++idx\r\n\r\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            if typeof rowAttr is 'string'\r\n                idx = rowAttrs.indexOf(rowAttr)\r\n            else\r\n                idx = rowAttr\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n            i = idx\r\n            nAttrs = rowAttrs.length-1\r\n            while i < nAttrs\r\n                h = rowHeaderHeaders.hh[i]\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\r\n                h.clickStatus = classCollapsed\r\n                ++i\r\n            j = 0\r\n            nRows = rowHeaderRows.length\r\n            while j < nRows\r\n                h = rowHeaderRows[j]\r\n                if h.col is idx and h.clickStatus isnt classCollapsed and h.tr.style.display isnt \"none\"\r\n                    collapseRow(rowHeaderHeaders, rowHeaderRows, j)\r\n                    j = j + h.descendants + 1\r\n                else\r\n                    ++j\r\n\r\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            if typeof rowAttr is 'string'\r\n                idx = rowAttrs.indexOf(rowAttr)\r\n            else\r\n                idx = rowAttr\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n            for i in [0..idx]\r\n                hh = rowHeaderHeaders.hh[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\r\n                hh.clickStatus = classExpanded\r\n                j = 0\r\n                nRows = rowHeaderRows.length\r\n                while j < nRows\r\n                    h = rowHeaderRows[j]\r\n                    if h.col == i\r\n                        expandRow(rowHeaderHeaders, rowHeaderRows, j)\r\n                        j = j + h.descendants + 1\r\n                    else\r\n                        ++j\r\n            ++idx\r\n            while idx < rowAttrs.length-1\r\n                rowHeaderHeader = rowHeaderHeaders.hh[idx]\r\n                if rowHeaderHeader.expandedCount == 0\r\n                    replaceClass rowHeaderHeader.th, classExpanded, classCollapsed\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx]\r\n                    rowHeaderHeader.clickStatus = classCollapsed\r\n                else if rowHeaderHeader.expandedCount == rowHeaderHeader.nHeaders\r\n                    replaceClass rowHeaderHeader.th, classCollapsed, classExpanded\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx]\r\n                    rowHeaderHeader.clickStatus = classExpanded\r\n                ++idx\r\n\r\n        toggleColHeaderHeader = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            idx = colAttrs.indexOf(colAttr)\r\n            h = colHeaderHeaders[idx]\r\n            if h.clickStatus is classCollapsed\r\n                expandColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n            else\r\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n\r\n\r\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            th = rowHeaderHeaders.hh[idx]\r\n            if th.clickStatus is classCollapsed\r\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n            else\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderHeaders = []\r\n            colHeaderCols = []\r\n\r\n            if rowAttrs.length != 0 and rowKeys.length != 0\r\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\r\n            if colAttrs.length != 0 and colKeys.length != 0\r\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\r\n            result = document.createElement(\"table\")\r\n            result.className = \"pvtTable\"\r\n            result.style.display = \"none\"\r\n            thead = document.createElement(\"thead\")\r\n            result.appendChild thead\r\n            if colAttrs.length != 0\r\n                buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs)\r\n                for h in colHeaders\r\n                   buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\r\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\r\n            if rowAttrs.length != 0\r\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\r\n                if colAttrs.length == 0\r\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs)\r\n            tbody = document.createElement(\"tbody\")\r\n            result.appendChild tbody\r\n            if rowAttrs.length != 0\r\n                for h in rowHeaders\r\n                    buildRowHeaders tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs\r\n                buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            buildValues(rowHeaderRows, colHeaderCols)\r\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildColTotals(tr, colHeaderCols)\r\n            buildGrandTotal(tbody, tr)\r\n            result.setAttribute(\"data-numrows\", rowKeys.length)\r\n            result.setAttribute(\"data-numcols\", colKeys.length)\r\n            if not opts.collapseRowsAt? and not opts.collapseColsAt?\r\n                result.style.display = \"\"\r\n            if opts.collapseRowsAt?\r\n                setTimeout (->\r\n                    collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt\r\n                    if not opts.collapseColsAt\r\n                        result.style.display = \"\"\r\n                ), 0\r\n            if opts.collapseColsAt?\r\n                setTimeout (->\r\n                    collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt\r\n                    result.style.display = \"\"\r\n                ), 0\r\n            return result\r\n\r\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts)\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts)\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts)\r\n","(function() {\n  var callWithJQuery,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalPivotData, SubtotalRenderer;\n    SubtotalPivotData = (function(superClass) {\n      var processKey;\n\n      extend(SubtotalPivotData, superClass);\n\n      function SubtotalPivotData(input, opts) {\n        SubtotalPivotData.__super__.constructor.call(this, input, opts);\n      }\n\n      processKey = function(record, totals, keys, attrs, f) {\n        var addKey, attr, flatKey, k, key, len, ref;\n        key = [];\n        addKey = false;\n        for (k = 0, len = attrs.length; k < len; k++) {\n          attr = attrs[k];\n          key.push((ref = record[attr]) != null ? ref : \"null\");\n          flatKey = key.join(String.fromCharCode(0));\n          if (!totals[flatKey]) {\n            totals[flatKey] = f(key.slice());\n            addKey = true;\n          }\n          totals[flatKey].push(record);\n        }\n        if (addKey) {\n          keys.push(key);\n        }\n        return key;\n      };\n\n      SubtotalPivotData.prototype.processRecord = function(record) {\n        var colKey, fColKey, fRowKey, flatColKey, flatRowKey, i, j, k, m, n, ref, results, rowKey;\n        rowKey = [];\n        colKey = [];\n        this.allTotal.push(record);\n        rowKey = processKey(record, this.rowTotals, this.rowKeys, this.rowAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, key, []);\n          };\n        })(this));\n        colKey = processKey(record, this.colTotals, this.colKeys, this.colAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, [], key);\n          };\n        })(this));\n        m = rowKey.length - 1;\n        n = colKey.length - 1;\n        if (m < 0 || n < 0) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = m; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          fRowKey = rowKey.slice(0, i + 1);\n          flatRowKey = fRowKey.join(String.fromCharCode(0));\n          if (!this.tree[flatRowKey]) {\n            this.tree[flatRowKey] = {};\n          }\n          results.push((function() {\n            var l, ref1, results1;\n            results1 = [];\n            for (j = l = 0, ref1 = n; 0 <= ref1 ? l <= ref1 : l >= ref1; j = 0 <= ref1 ? ++l : --l) {\n              fColKey = colKey.slice(0, j + 1);\n              flatColKey = fColKey.join(String.fromCharCode(0));\n              if (!this.tree[flatRowKey][flatColKey]) {\n                this.tree[flatRowKey][flatColKey] = this.aggregator(this, fRowKey, fColKey);\n              }\n              results1.push(this.tree[flatRowKey][flatColKey].push(record));\n            }\n            return results1;\n          }).call(this));\n        }\n        return results;\n      };\n\n      return SubtotalPivotData;\n\n    })($.pivotUtilities.PivotData);\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData;\n    SubtotalRenderer = function(pivotData, opts) {\n      var addClass, allTotal, arrowCollapsed, arrowExpanded, buildColHeaderHeader, buildColHeaderHeaders, buildColHeaderHeadersClickEvents, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaderHeadersClickEvents, buildRowHeaders, buildRowTotalsHeader, buildValues, classCollapsed, classExpanded, colAttrs, colKeys, colTotals, collapseCol, collapseColsAt, collapseRow, collapseRowsAt, createCell, defaults, expandChildCol, expandChildRow, expandCol, expandColsAt, expandRow, expandRowsAt, getTableEventHandlers, hasClass, main, processKeys, removeClass, replaceClass, rowAttrs, rowKeys, rowTotals, setColVisibility, toggleCol, toggleColHeaderHeader, toggleRow, toggleRowHeaderHeader, tree;\n      defaults = {\n        table: {\n          clickCallback: null\n        },\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(true, {}, defaults, opts);\n      arrowCollapsed = opts.arrowCollapsed != null ? opts.arrowCollapsed : opts.arrowCollapsed = \"\\u25B6\";\n      arrowExpanded = opts.arrowExpanded != null ? opts.arrowExpanded : opts.arrowExpanded = \"\\u25E2\";\n      classExpanded = \"expanded\";\n      classCollapsed = \"collapsed\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      hasClass = function(element, className) {\n        var regExp;\n        regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\");\n        return element.className.match(regExp);\n      };\n      removeClass = function(element, className) {\n        var regExp;\n        regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\");\n        return element.className = element.className.replace(regExp, '');\n      };\n      addClass = function(element, className) {\n        if (!hasClass(element, className)) {\n          return element.className += \" \" + className;\n        }\n      };\n      replaceClass = function(element, replaceClassName, byClassName) {\n        removeClass(element, replaceClassName);\n        return addClass(element, byClassName);\n      };\n      getTableEventHandlers = function(value, rowValues, colValues) {\n        var attr, filters, i, ref, tableEvent, tableEventHandler, tableEventHandlers;\n        if (opts.table.eventHandlers != null) {\n          tableEventHandlers = {};\n          ref = opts.table.eventHandlers;\n          for (tableEvent in ref) {\n            if (!hasProp.call(ref, tableEvent)) continue;\n            tableEventHandler = ref[tableEvent];\n            filters = {};\n            for (i in colAttrs) {\n              if (!hasProp.call(colAttrs, i)) continue;\n              attr = colAttrs[i];\n              if (colValues[i] != null) {\n                filters[attr] = colValues[i];\n              }\n            }\n            for (i in rowAttrs) {\n              if (!hasProp.call(rowAttrs, i)) continue;\n              attr = rowAttrs[i];\n              if (rowValues[i] != null) {\n                filters[attr] = rowValues[i];\n              }\n            }\n            tableEventHandlers[tableEvent] = function(e) {\n              return tableEventHandler(e, value, filters, pivotData);\n            };\n          }\n          return tableEventHandlers;\n        }\n      };\n      createCell = function(cellType, className, textContent, attributes, eventHandlers) {\n        var attr, event, handler, th, val;\n        th = document.createElement(cellType);\n        if (className) {\n          th.className = className;\n        }\n        if (textContent !== null && textContent !== void 0) {\n          th.textContent = textContent;\n        }\n        if (attributes) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        if (eventHandlers) {\n          for (event in eventHandlers) {\n            if (!hasProp.call(eventHandlers, event)) continue;\n            handler = eventHandlers[event];\n            th.addEventListener(event, handler);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, headers, key, lastCol, lastRow, node, nodePos, r, rMark, repeats, th, x;\n        headers = [];\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        key = [];\n        key.push(keysArr[0][0]);\n        nodePos = 0;\n        node = {\n          \"node\": nodePos,\n          \"row\": 0,\n          \"col\": 0,\n          \"th\": th,\n          \"parent\": null,\n          \"children\": [],\n          \"descendants\": lastCol,\n          \"leaves\": 1,\n          \"key\": key,\n          \"flatKey\": key.join(String.fromCharCode(0))\n        };\n        headers.push(node);\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          key = key.slice();\n          key.push(keysArr[0][c]);\n          ++nodePos;\n          node = {\n            \"node\": nodePos,\n            \"row\": 0,\n            \"col\": c,\n            \"th\": th,\n            \"parent\": rMark[c - 1],\n            \"children\": [],\n            \"descendants\": lastCol - c,\n            \"leaves\": 1,\n            \"key\": key,\n            \"flatKey\": key.join(String.fromCharCode(0))\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          c = 0;\n          key = [];\n          key.push(keysArr[r][0]);\n          while (c <= lastCol) {\n            if (c > 0) {\n              key = key.slice();\n              key.push(keysArr[r][c]);\n            }\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            node = {\n              \"node\": nodePos,\n              \"row\": r,\n              \"col\": c,\n              \"th\": th,\n              \"parent\": null,\n              \"children\": [],\n              \"descendants\": 0,\n              \"leaves\": 1,\n              \"key\": key,\n              \"flatKey\": key.join(String.fromCharCode(0))\n            };\n            if (c === 0) {\n              headers.push(node);\n            } else {\n              node.parent = rMark[c - 1];\n              rMark[c - 1].children.push(node);\n              x = 0;\n              while (x <= c - 1) {\n                rMark[x].descendants = rMark[x].descendants + 1;\n                ++x;\n              }\n            }\n            rMark[c] = node;\n            repeats = false;\n            ++c;\n          }\n          c = 0;\n          while (c <= lastCol) {\n            rMark[c].leaves = rMark[c].leaves + 1;\n            ++c;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeader = function(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) {\n        var className, colAttr, textContent, th;\n        colAttr = colAttrs[col];\n        textContent = colAttr;\n        className = \"pvtAxisLabel\";\n        if (col < colAttrs.length - 1) {\n          className += \" expanded\";\n          textContent = \" \" + arrowExpanded + \" \" + colAttr;\n        }\n        th = createCell(\"th\", className, textContent);\n        th.setAttribute(\"data-colAttr\", colAttr);\n        tr.appendChild(th);\n        colHeaderHeaders.push({\n          \"tr\": tr,\n          \"th\": th,\n          \"clickStatus\": classExpanded,\n          \"expandedCount\": 0,\n          \"nHeaders\": 0\n        });\n        return thead.appendChild(tr);\n      };\n      buildColHeaderHeaders = function(thead, colHeaderHeaders, rowAttrs, colAttrs) {\n        var c, k, ref, results, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            \"colspan\": rowAttrs.length,\n            \"rowspan\": colAttrs.length\n          }));\n        }\n        buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0);\n        results = [];\n        for (c = k = 1, ref = colAttrs.length; 1 <= ref ? k <= ref : k >= ref; c = 1 <= ref ? ++k : --k) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          results.push(buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c));\n        }\n        return results;\n      };\n      buildColHeaderHeadersClickEvents = function(colHeaderHeaders, colHeaderCols, colAttrs) {\n        var colAttr, i, k, ref, results, th;\n        results = [];\n        for (i = k = 0, ref = colAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < colAttrs.length - 1)) {\n            continue;\n          }\n          th = colHeaderHeaders[i].th;\n          colAttr = colAttrs[i];\n          results.push(th.onclick = function(event) {\n            event = event || window.event;\n            return toggleColHeaderHeader(colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\"));\n          });\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) {\n        var h, hh, k, len, ref, rowspan, style, th, tr;\n        ref = colHeader.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n        }\n        hh = colHeaderHeaders[colHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = hh.tr;\n        th = colHeader.th;\n        th.setAttribute(\"data-colHeader\", th.textContent);\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants + 1);\n        }\n        th.setAttribute(\"data-node\", colHeaderCols.length);\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          addClass(th, classExpanded);\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          rowspan = colAttrs.length - (colHeader.col + 1) + (rowAttrs.length !== 0 ? 1 : 0);\n          style = \"pvtColLabel col\" + colHeader.row;\n          th = createCell(\"th\", style, '', {\n            \"rowspan\": rowspan\n          });\n          colHeader.children[0].tr.appendChild(th);\n          colHeader.sTh = th;\n        }\n        colHeader.clickStatus = classExpanded;\n        colHeader.tr = tr;\n        return colHeaderCols.push(colHeader);\n      };\n      buildRowHeaderHeaders = function(thead, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var className, i, rowAttr, textContent, th, tr;\n        tr = document.createElement(\"tr\");\n        rowHeaderHeaders.hh = [];\n        for (i in rowAttrs) {\n          if (!hasProp.call(rowAttrs, i)) continue;\n          rowAttr = rowAttrs[i];\n          textContent = rowAttr;\n          className = \"pvtAxisLabel\";\n          if (i < rowAttrs.length - 1) {\n            className += \" expanded\";\n            textContent = \" \" + arrowExpanded + \" \" + rowAttr;\n          }\n          th = createCell(\"th\", className, textContent);\n          th.setAttribute(\"data-rowAttr\", rowAttr);\n          tr.appendChild(th);\n          rowHeaderHeaders.hh.push({\n            \"th\": th,\n            \"clickStatus\": classExpanded,\n            \"expandedCount\": 0,\n            \"nHeaders\": 0\n          });\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        thead.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowHeaderHeadersClickEvents = function(rowHeaderHeaders, rowHeaderRows, rowAttrs) {\n        var i, k, ref, results, rowAttr, th;\n        results = [];\n        for (i = k = 0, ref = rowAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < rowAttrs.length - 1)) {\n            continue;\n          }\n          th = rowHeaderHeaders.hh[i];\n          rowAttr = rowAttrs[i];\n          results.push(th.th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRowHeaderHeader(rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\"));\n          });\n        }\n        return results;\n      };\n      buildRowTotalsHeader = function(tr, rowAttrs, colAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"rowspan\": rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, hh, k, len, ref, results, th, tr;\n        hh = rowHeaderHeaders.hh[rowHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        th.setAttribute(\"data-rowHeader\", th.textContent);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRows.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          addClass(th, classExpanded);\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel pvtRowSubtotal\", '', {\n            \"colspan\": colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = classExpanded;\n        rowHeader.tr = tr;\n        rowHeaderRows.push(rowHeader);\n        tbody.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          results.push(buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRows, colHeaderCols) {\n        var aggregator, colHeader, flatColKey, flatRowKey, k, l, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (k = 0, len = rowHeaderRows.length; k < len; k++) {\n          rowHeader = rowHeaderRows[k];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (l = 0, len1 = colHeaderCols.length; l < len1; l++) {\n            colHeader = colHeaderCols[l];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            style = colHeader.children.length !== 0 ? style + \" pvtColSubtotal\" : style;\n            style = rowHeader.children.length !== 0 ? style + \" pvtRowSubtotal\" : style;\n            style = style + \" row\" + rowHeader.row + \" col\" + colHeader.row + \" rowcol\" + rowHeader.col + \" colcol\" + colHeader.col;\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            }, getTableEventHandlers(val, rowHeader.key, colHeader.key));\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          style = \"pvtTotal rowTotal\";\n          style = rowHeader.children.length !== 0 ? style + \" pvtRowSubtotal\" : style;\n          style = style + \" row\" + rowHeader.row + \" rowcol\" + rowHeader.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          }, getTableEventHandlers(val, rowHeader.key, []));\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"colspan\": colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderCols) {\n        var h, k, len, results, style, td, totalAggregator, val;\n        results = [];\n        for (k = 0, len = colHeaderCols.length; k < len; k++) {\n          h = colHeaderCols[k];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          style = \"pvtVal pvtTotal colTotal\";\n          style = h.children.length ? style + \" pvtColSubtotal\" : style;\n          style = style + \" col\" + h.row + \" colcol\" + h.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          }, getTableEventHandlers(val, [], h.key));\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        }, getTableEventHandlers(val, [], []));\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      setColVisibility = function(visibility, h) {\n        h.th.style.display = visibility;\n        if (h.children.length) {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility);\n        } else {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility);\n        }\n        if (h.sTh) {\n          return h.sTh.style.display = visibility;\n        }\n      };\n      collapseCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var colHeaderHeader, colspan, d, h, i, k, l, p, ref, ref1, ref2, results;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === classCollapsed) {\n          return;\n        }\n        colspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = colHeaderCols[c - i];\n          if (d.th.style.display !== \"none\") {\n            ++colspan;\n            setColVisibility(\"none\", d);\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\")) - colspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classExpanded, classCollapsed);\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.clickStatus = classCollapsed;\n        h.th.setAttribute(\"colspan\", 1);\n        h.th.style.display = \"\";\n        colHeaderHeader = colHeaderHeaders[h.col];\n        colHeaderHeader.expandedCount--;\n        if (colHeaderHeader.expandedCount === 0) {\n          results = [];\n          for (i = l = ref1 = h.col, ref2 = colHeaderHeaders.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; i = ref1 <= ref2 ? ++l : --l) {\n            colHeaderHeader = colHeaderHeaders[i];\n            replaceClass(colHeaderHeader.th, classExpanded, classCollapsed);\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\");\n            results.push(colHeaderHeader.clickStatus = classCollapsed);\n          }\n          return results;\n        }\n      };\n      expandChildCol = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.th.style.display === \"none\") {\n          setColVisibility(\"\", ch);\n        }\n        if (ch.clickStatus !== classCollapsed) {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildCol(gch));\n          }\n          return results;\n        }\n      };\n      expandCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var ch, colspan, h, hh, k, len, p, ref;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === classExpanded) {\n          return;\n        }\n        colspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          colspan = colspan + ch.th.colSpan;\n          if (ch.th.style.display === \"none\") {\n            setColVisibility(\"\", ch);\n          }\n          expandChildCol(ch);\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classCollapsed, classExpanded);\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.th.setAttribute(\"colspan\", colspan + 1);\n        h.clickStatus = classExpanded;\n        h.th.style.display = \"\";\n        if (h.sTh) {\n          h.sTh.style.display = \"\";\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", colspan + parseInt(p.th.getAttribute(\"colspan\")));\n          p = p.parent;\n        }\n        hh = colHeaderHeaders[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\");\n          return hh.clickStatus = classExpanded;\n        }\n      };\n      collapseRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var d, h, i, j, k, l, p, ref, ref1, ref2, results, rowHeaderHeader, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === classCollapsed) {\n          return;\n        }\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\")) - rowspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classExpanded, classCollapsed);\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = classCollapsed;\n        h.th.setAttribute(\"rowspan\", 1);\n        h.tr.style.display = \"\";\n        rowHeaderHeader = rowHeaderHeaders.hh[h.col];\n        rowHeaderHeader.expandedCount--;\n        if (rowHeaderHeader.expandedCount === 0) {\n          results = [];\n          for (j = l = ref1 = h.col, ref2 = rowHeaderHeaders.hh.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; j = ref1 <= ref2 ? ++l : --l) {\n            rowHeaderHeader = rowHeaderHeaders.hh[j];\n            replaceClass(rowHeaderHeader.th, classExpanded, classCollapsed);\n            rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\");\n            results.push(rowHeaderHeader.clickStatus = classCollapsed);\n          }\n          return results;\n        }\n      };\n      expandChildRow = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.tr.style.display === \"none\") {\n          ch.tr.style.display = \"\";\n        }\n        if (ch.clickStatus !== classCollapsed) {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildRow(gch));\n          }\n          return results;\n        }\n      };\n      expandRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var ch, h, hh, k, len, p, ref, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === classExpanded) {\n          return;\n        }\n        rowspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          rowspan = rowspan + ch.th.rowSpan;\n          if (ch.tr.style.display === \"none\") {\n            ch.tr.style.display = \"\";\n          }\n          expandChildRow(ch);\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classCollapsed, classExpanded);\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.th.setAttribute(\"rowspan\", rowspan + 1);\n        h.clickStatus = classExpanded;\n        h.tr.style.display = \"\";\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          p = p.parent;\n        }\n        hh = rowHeaderHeaders.hh[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\");\n          return hh.clickStatus = classExpanded;\n        }\n      };\n      toggleCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var h;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === classCollapsed) {\n          expandCol(colHeaderHeaders, colHeaderCols, c);\n        } else {\n          collapseCol(colHeaderHeaders, colHeaderCols, c);\n        }\n        return h.th.scrollIntoView;\n      };\n      toggleRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === classCollapsed) {\n          return expandRow(rowHeaderHeaders, rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderHeaders, rowHeaderRows, r);\n        }\n      };\n      collapseColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, hh, i, idx, nAttrs, nCols, results;\n        if (typeof colAttr === 'string') {\n          idx = colAttrs.indexOf(colAttr);\n        } else {\n          idx = colAttr;\n        }\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = colAttrs.length - 1;\n        while (i < nAttrs) {\n          hh = colHeaderHeaders[i];\n          replaceClass(hh.th, classExpanded, classCollapsed);\n          hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i];\n          hh.clickStatus = classCollapsed;\n          ++i;\n        }\n        i = 0;\n        nCols = colHeaderCols.length;\n        results = [];\n        while (i < nCols) {\n          h = colHeaderCols[i];\n          if (h.col === idx && h.clickStatus !== classCollapsed && h.th.style.display !== \"none\") {\n            collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")));\n          }\n          results.push(++i);\n        }\n        return results;\n      };\n      expandColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var colHeaderHeader, h, hh, i, idx, j, k, nCols, ref, results;\n        if (typeof colAttr === 'string') {\n          idx = colAttrs.indexOf(colAttr);\n        } else {\n          idx = colAttr;\n        }\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = colHeaderHeaders[i];\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i];\n          hh.clickStatus = classExpanded;\n          j = 0;\n          nCols = colHeaderCols.length;\n          while (j < nCols) {\n            h = colHeaderCols[j];\n            if (h.col === i) {\n              expandCol(colHeaderHeaders, colHeaderCols, j);\n            }\n            ++j;\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < colAttrs.length - 1) {\n          colHeaderHeader = colHeaderHeaders[idx];\n          if (colHeaderHeader.expandedCount === 0) {\n            replaceClass(colHeaderHeader.th, classExpanded, classCollapsed);\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = classCollapsed;\n          } else if (colHeaderHeader.expandedCount === colHeaderHeader.nHeaders) {\n            replaceClass(colHeaderHeader.th, classCollapsed, classExpanded);\n            colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = classExpanded;\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      collapseRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, j, nAttrs, nRows, results;\n        if (typeof rowAttr === 'string') {\n          idx = rowAttrs.indexOf(rowAttr);\n        } else {\n          idx = rowAttr;\n        }\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = rowAttrs.length - 1;\n        while (i < nAttrs) {\n          h = rowHeaderHeaders.hh[i];\n          replaceClass(h.th, classExpanded, classCollapsed);\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i];\n          h.clickStatus = classCollapsed;\n          ++i;\n        }\n        j = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (j < nRows) {\n          h = rowHeaderRows[j];\n          if (h.col === idx && h.clickStatus !== classCollapsed && h.tr.style.display !== \"none\") {\n            collapseRow(rowHeaderHeaders, rowHeaderRows, j);\n            results.push(j = j + h.descendants + 1);\n          } else {\n            results.push(++j);\n          }\n        }\n        return results;\n      };\n      expandRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, hh, i, idx, j, k, nRows, ref, results, rowHeaderHeader;\n        if (typeof rowAttr === 'string') {\n          idx = rowAttrs.indexOf(rowAttr);\n        } else {\n          idx = rowAttr;\n        }\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = rowHeaderHeaders.hh[i];\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i];\n          hh.clickStatus = classExpanded;\n          j = 0;\n          nRows = rowHeaderRows.length;\n          while (j < nRows) {\n            h = rowHeaderRows[j];\n            if (h.col === i) {\n              expandRow(rowHeaderHeaders, rowHeaderRows, j);\n              j = j + h.descendants + 1;\n            } else {\n              ++j;\n            }\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < rowAttrs.length - 1) {\n          rowHeaderHeader = rowHeaderHeaders.hh[idx];\n          if (rowHeaderHeader.expandedCount === 0) {\n            replaceClass(rowHeaderHeader.th, classExpanded, classCollapsed);\n            rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = classCollapsed;\n          } else if (rowHeaderHeader.expandedCount === rowHeaderHeader.nHeaders) {\n            replaceClass(rowHeaderHeader.th, classCollapsed, classExpanded);\n            rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = classExpanded;\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      toggleColHeaderHeader = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, idx;\n        idx = colAttrs.indexOf(colAttr);\n        h = colHeaderHeaders[idx];\n        if (h.clickStatus === classCollapsed) {\n          return expandColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        } else {\n          return collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        }\n      };\n      toggleRowHeaderHeader = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var idx, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        th = rowHeaderHeaders.hh[idx];\n        if (th.clickStatus === classCollapsed) {\n          return expandRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        } else {\n          return collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        }\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderHeaders, colHeaders, h, k, l, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, tbody, thead, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderHeaders = [];\n        colHeaderCols = [];\n        if (rowAttrs.length !== 0 && rowKeys.length !== 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length !== 0 && colKeys.length !== 0) {\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        result.style.display = \"none\";\n        thead = document.createElement(\"thead\");\n        result.appendChild(thead);\n        if (colAttrs.length !== 0) {\n          buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs);\n          for (k = 0, len = colHeaders.length; k < len; k++) {\n            h = colHeaders[k];\n            buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n          }\n          buildColHeaderHeadersClickEvents(colHeaderHeaders, colHeaderCols, colAttrs);\n        }\n        if (rowAttrs.length !== 0) {\n          buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs);\n          }\n        }\n        if (colAttrs.length !== 0) {\n          buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs);\n        }\n        tbody = document.createElement(\"tbody\");\n        result.appendChild(tbody);\n        if (rowAttrs.length !== 0) {\n          for (l = 0, len1 = rowHeaders.length; l < len1; l++) {\n            h = rowHeaders[l];\n            buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n          buildRowHeaderHeadersClickEvents(rowHeaderHeaders, rowHeaderRows, rowAttrs);\n        }\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length !== 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(tbody, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        if ((opts.collapseRowsAt == null) && (opts.collapseColsAt == null)) {\n          result.style.display = \"\";\n        }\n        if (opts.collapseRowsAt != null) {\n          setTimeout((function() {\n            collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt);\n            if (!opts.collapseColsAt) {\n              return result.style.display = \"\";\n            }\n          }), 0);\n        }\n        if (opts.collapseColsAt != null) {\n          setTimeout((function() {\n            collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt);\n            return result.style.display = \"\";\n          }), 0);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts);\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts);\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts);\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal.js.map\n"],"sourceRoot":"/source/"}