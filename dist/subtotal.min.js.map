{"version":3,"sources":["/source/subtotal.coffee","subtotal.min.js"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","superClass","input","opts","processKey","record","totals","keys","attrs","f","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","l","ref1","results1","pivotUtilities","PivotData","pivotData","arrowCollapsed","arrowExpanded","buildColHeaderHeader","buildColHeaderHeaders","buildColHeaderHeadersClickEvents","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaderHeadersClickEvents","buildRowHeaders","buildRowTotalsHeader","buildValues","collapseCol","collapseColsAt","collapseRow","collapseRowsAt","createCell","defaults","expandCol","expandColsAt","expandRow","expandRowsAt","main","processKeys","toggleCol","toggleColHeaderHeader","toggleRow","toggleRowHeaderHeader","localeStrings","getRowKeys","getColKeys","cellType","className","textContent","attributes","th","val","document","createElement","setAttribute","keysArr","c","header","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","row","col","children","descendants","leaves","thead","colHeaderHeaders","tr","colAttr","appendChild","clickStatus","colspan","rowspan","colHeaderCols","onclick","event","window","target","getAttribute","colHeader","h","style","parseInt","sTh","rowHeaderHeaders","rowAttr","rowHeaderRows","tbody","rowHeader","len1","td","totalAggregator","value","format","data-value","data-row","data-col","data-for","result","d","p","display","hide","not","ch","show","idx","nAttrs","nRows","indexOf","nCols","colHeaders","rowHeaders","setTimeout","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super(input, opts)\r\n\r\n        processKey = (record, totals, keys, attrs, f) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\" \r\n                flatKey = key.join(String.fromCharCode(0))\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = f(key.slice())\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            if addKey\r\n                keys.push key\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n            \r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                    return @aggregator(this, key, [])\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                    return @aggregator(this, [], key)\r\n            m = rowKey.length-1\r\n            n = colKey.length-1            \r\n            if m < 0 or n < 0\r\n                return\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\r\n                if not @tree[flatRowKey]\r\n                    @tree[flatRowKey] = {}\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice(0, j+1)\r\n                    flatColKey = fColKey.join(String.fromCharCode(0))\r\n                    if not @tree[flatRowKey][flatColKey]\r\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                totals: \"Totals\"\r\n\r\n        opts = $.extend defaults, opts\r\n\r\n        arrowCollapsed = \"\\u25B6\"\r\n        arrowExpanded = \"\\u25E2\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal =pivotData.allTotal\r\n        \r\n        createCell = (cellType, className, textContent, attributes) ->\r\n            th = document.createElement(cellType)\r\n            if className then th.className = className\r\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\r\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            headers = []\r\n            th = createCell(\"th\", className, keysArr[0][0])\r\n            flatKey = keysArr[0][0]\r\n            nodePos = 0\r\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\r\n            headers[0] = node \r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell(\"th\", className, keysArr[0][c])\r\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\r\n                ++nodePos\r\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push(node)\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                flatKey = \"\"\r\n                c = 0\r\n                while c <= lastCol\r\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell(\"th\", className, keysArr[r][c])\r\n                    ++nodePos\r\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\r\n                    if c is 0\r\n                        headers.push header\r\n                    else\r\n                        header.parent = rMark[c-1]\r\n                        rMark[c-1].children.push header\r\n                        x = 0\r\n                        while x <= c-1\r\n                            rMark[x].descendants = rMark[x].descendants + 1\r\n                            ++x\r\n                    rMark[c] = header\r\n                    repeats = false\r\n                    ++c\r\n                c = 0\r\n                while c <= lastCol\r\n                    rMark[c].leaves = rMark[c].leaves + 1\r\n                    ++c\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\r\n            colAttr = colAttrs[col]\r\n            th = createCell(\"th\", \"pvtAxisLabel\", colAttr)\r\n            textContent = colAttr\r\n            if col < colAttrs.length-1\r\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\r\n            th = createCell(\"th\", \"pvtAxisLabel\", textContent)\r\n            th.setAttribute(\"data-colAttr\", colAttr)\r\n            tr.appendChild th\r\n            colHeaderHeaders.push({\"tr\": tr, \"th\": th, \"clickStatus\": \"expanded\"})\r\n            thead.appendChild tr\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\r\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\r\n\r\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\r\n            for i in [0..colAttrs.length-1] when i < colAttrs.length-1\r\n                th = colHeaderHeaders[i].th\r\n                colAttr = colAttrs[i]\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\")\r\n\r\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs)\r\n            # Process\r\n            tr = colHeaderHeaders[colHeader.col].tr\r\n            th = colHeader.th\r\n            th.setAttribute(\"data-colHeader\", th.textContent) \r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            if colHeader.children.length !=0\r\n                th.setAttribute(\"colspan\", colHeader.descendants+1)\r\n            th.setAttribute(\"data-node\", colHeaderCols.length)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length !=0\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleCol(colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")))\r\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\r\n                style = \"pvtColLabel col\" + colHeader.row\r\n                th = createCell(\"th\", style, '', {\"rowspan\": rowspan})\r\n                colHeader.children[0].tr.appendChild(th)\r\n                colHeader.sTh = th\r\n            colHeader.clickStatus = \"expanded\"\r\n            colHeader.tr = tr\r\n            colHeaderCols.push(colHeader)\r\n        \r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            rowHeaderHeaders.th = []\r\n            for i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                if i < rowAttrs.length-1\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\r\n                th = createCell(\"th\", \"pvtAxisLabel\", textContent)\r\n                th.setAttribute(\"data-rowAttr\", rowAttr)\r\n                tr.appendChild th                \r\n                rowHeaderHeaders.th.push({\"th\": th, \"clickStatus\": \"expanded\"})\r\n            if colAttrs.length != 0\r\n                th = createCell(\"th\")\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            for i in [0..rowAttrs.length-1] when i < rowAttrs.length-1\r\n                th = rowHeaderHeaders.th[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\")\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (tbody, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            th = rowHeader.th\r\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\r\n            th.setAttribute(\"data-rowHeader\", th.textContent) \r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute(\"colspan\", 2)\r\n            th.setAttribute(\"data-node\", rowHeaderRows.length)\r\n            tr.appendChild(th)\r\n            if rowHeader.children.length != 0\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow(rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")))\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtRowLabel\", '', {\"colspan\": colspan})\r\n                tr.appendChild(th)\r\n            rowHeader.clickStatus = \"expanded\"\r\n            rowHeader.tr = tr\r\n            rowHeaderRows.push(rowHeader)\r\n            tbody.appendChild(tr)\r\n            for h in rowHeader.children\r\n                buildRowHeaders(tbody, rowHeaderRows, h, rowAttrs, colAttrs)\r\n\r\n        buildValues = (rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtColSubtotal\" else style\r\n                    style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\r\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.row+\" rowcol\"+rowHeader.col+\" colcol\"+colHeader.col\r\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\r\n            tr.appendChild(th)\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtVal pvtTotal colTotal\"\r\n                style = if h.children.length then style + \" pvtColSubtotal\" else style\r\n                style = style + \" col\"+h.row+\" colcol\"+h.col\r\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        collapseCol = (colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is \"collapsed\"\r\n                return\r\n            colspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = colHeaderCols[c-i]\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"colspan\", 1)\r\n                if d.th.style.display isnt \"none\"\r\n                    ++colspan\r\n                    d.th.style.display = \"none\"\r\n                    if d.children.length\r\n                        $('table.pvtTable tbody tr td.pvtColSubtotal.col' + d.row + '.colcol' + d.col).hide()\r\n                    else\r\n                        $('table.pvtTable tbody tr td.pvtVal.col' + d.row).not('.pvtColSubtotal').hide()\r\n                    if d.sTh\r\n                        d.sTh.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\"))-colspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.clickStatus = \"collapsed\"\r\n            h.th.setAttribute(\"colspan\", 1)\r\n            h.th.style.display = \"\"\r\n\r\n        expandCol = (colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is \"expanded\"\r\n                return\r\n            colspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = colHeaderCols[c-i]\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"colspan\", 1)\r\n                if d.th.style.display isnt \"none\"\r\n                    ++colspan\r\n                    d.th.style.display = \"none\"\r\n                    if d.children.length\r\n                        $('table.pvtTable tbody tr td.pvtColSubtotal.col' + d.row + '.colcol' + d.col).hide()\r\n                    else\r\n                        $('table.pvtTable tbody tr td.pvtVal.col' + d.row).not('.pvtColSubtotal').hide()\r\n                    if d.sTh\r\n                        d.sTh.style.display = \"none\"\r\n            for ch in h.children\r\n                if ch.th.style.display is \"none\"\r\n                    ++colspan\r\n                    ch.th.style.display = \"\"\r\n                    if ch.children.length\r\n                        $('table.pvtTable tbody tr td.pvtColSubtotal.col' + ch.row + '.colcol' + ch.col).show()\r\n                    else\r\n                        $('table.pvtTable tbody tr td.pvtVal.col' + ch.row).not('.pvtColSubtotal').show()\r\n                    if ch.sTh\r\n                        ch.sTh.style.display = \"\"\r\n            h.th.setAttribute(\"colspan\", h.children.length+1)\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.clickStatus = \"expanded\"\r\n            h.th.style.display = \"\"\r\n            if h.sTh\r\n                h.sTh.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", (colspan + parseInt(p.th.getAttribute(\"colspan\"))))\r\n                p = p.parent\r\n\r\n        collapseRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            if h.clickStatus is \"collapsed\"\r\n                return\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = \"collapsed\"\r\n            h.th.setAttribute(\"rowspan\", 1)\r\n            h.tr.style.display = \"\"\r\n\r\n        expandRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            if h.clickStatus is \"expanded\"\r\n                return\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    --rowspan\r\n                    d.tr.style.display = \"none\"\r\n            for c in h.children\r\n                if c.tr.style.display is \"none\"\r\n                    ++rowspan\r\n                    c.tr.style.display = \"\"\r\n            h.th.setAttribute(\"rowspan\", h.children.length+1)\r\n            if h.descendants != 0\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = \"expanded\"\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\r\n                p = p.parent\r\n\r\n        toggleCol = (colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            if colHeaderCols[c].clickStatus is \"collapsed\"\r\n                expandCol(colHeaderCols, c)\r\n            else\r\n                collapseCol(colHeaderCols, c)\r\n\r\n        toggleRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            if rowHeaderRows[r].clickStatus is \"collapsed\"\r\n                expandRow(rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderRows, r)\r\n\r\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n            i = idx\r\n            nAttrs = rowAttrs.length-1\r\n            while i < nAttrs\r\n                th = rowHeaderHeaders.th[i]\r\n                th.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\r\n                th.clickStatus = \"collapsed\"\r\n                ++i          \r\n            i = 0\r\n            nRows = rowHeaderRows.length\r\n            while i < nRows\r\n                h = rowHeaderRows[i]\r\n                if h.col is idx\r\n                    collapseRow(rowHeaderRows, h.node)\r\n                    i = i + h.descendants + 1\r\n                else\r\n                    ++i\r\n\r\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n            for i in [0..idx]\r\n                th = rowHeaderHeaders.th[i]\r\n                th.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\r\n                th.clickStatus = \"expanded\"\r\n                j = 0\r\n                nRows = rowHeaderRows.length\r\n                while j < nRows\r\n                    h = rowHeaderRows[j]\r\n                    if h.col == i\r\n                        expandRow(rowHeaderRows, h.node)\r\n                        j = j + h.descendants + 1\r\n                    else\r\n                        ++j\r\n\r\n        collapseColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            idx = colAttrs.indexOf(colAttr)\r\n            if idx < 0 or idx == colAttrs.length-1\r\n                return\r\n            i = idx\r\n            nAttrs = colAttrs.length-1\r\n            while i < nAttrs\r\n                th = colHeaderHeaders[i].th\r\n                th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i]\r\n                th.clickStatus = \"collapsed\"\r\n                ++i          \r\n            i = 0\r\n            nCols = colHeaderCols.length\r\n            while i < nCols\r\n                h = colHeaderCols[i]\r\n                if h.col is idx\r\n                    collapseCol(colHeaderCols, i)\r\n                ++i\r\n\r\n        expandColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            idx = colAttrs.indexOf(colAttr)\r\n            if idx < 0 or idx == colAttrs.length-1\r\n                return\r\n            for i in [0..idx]\r\n                th = colHeaderHeaders[i].th\r\n                th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i]\r\n                th.clickStatus = \"expanded\"\r\n                j = 0\r\n                nCols = colHeaderCols.length\r\n                while j < nCols\r\n                    h = colHeaderCols[j]\r\n                    if h.col == i\r\n                        expandCol(colHeaderCols, j)\r\n                    ++j\r\n\r\n        toggleColHeaderHeader = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            idx = colAttrs.indexOf(colAttr)\r\n            th = colHeaderHeaders[idx].th\r\n            if th.clickStatus is \"collapsed\"\r\n                expandColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n            else\r\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n\r\n\r\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            th = rowHeaderHeaders.th[idx]\r\n            if th.clickStatus is \"collapsed\"\r\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n            else\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderHeaders = []\r\n            colHeaderCols = []\r\n\r\n            if rowAttrs.length != 0\r\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\r\n            if colAttrs.length != 0\r\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\r\n            result = document.createElement(\"table\")\r\n            result.className = \"pvtTable\"\r\n            result.style.display = \"none\"\r\n            thead = document.createElement(\"thead\")\r\n            result.appendChild thead\r\n            if colAttrs.length != 0\r\n                buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs)\r\n                for h in colHeaders\r\n                   buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\r\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\r\n            if rowAttrs.length != 0\r\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\r\n                if colAttrs.length == 0\r\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs)\r\n            tbody = document.createElement(\"tbody\")\r\n            result.appendChild tbody\r\n            if rowAttrs.length != 0\r\n                for h in rowHeaders\r\n                    buildRowHeaders tbody, rowHeaderRows, h, rowAttrs, colAttrs\r\n                buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            buildValues(rowHeaderRows, colHeaderCols)\r\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildColTotals(tr, colHeaderCols)\r\n            buildGrandTotal(tbody, tr)\r\n            result.setAttribute(\"data-numrows\", rowKeys.length)\r\n            result.setAttribute(\"data-numcols\", colKeys.length)\r\n            if not opts.collapseRowsAt and not opts.collapseColsAt\r\n                result.style.display = \"\"\r\n            if opts.collapseRowsAt\r\n                setTimeout (->\r\n                    collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt\r\n                    if not opts.collapseColsAt\r\n                        result.style.display = \"\"\r\n                ), 0\r\n            if opts.collapseColsAt\r\n                setTimeout (->\r\n                    collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt\r\n                    result.style.display = \"\"\r\n                ), 0\r\n            return result\r\n\r\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\r\n        \r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap()\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\")\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\")\r\n","(function() {\n  var callWithJQuery,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalPivotData, SubtotalRenderer;\n    SubtotalPivotData = (function(superClass) {\n      var processKey;\n\n      extend(SubtotalPivotData, superClass);\n\n      function SubtotalPivotData(input, opts) {\n        SubtotalPivotData.__super__.constructor.call(this, input, opts);\n      }\n\n      processKey = function(record, totals, keys, attrs, f) {\n        var addKey, attr, flatKey, k, key, len, ref;\n        key = [];\n        addKey = false;\n        for (k = 0, len = attrs.length; k < len; k++) {\n          attr = attrs[k];\n          key.push((ref = record[attr]) != null ? ref : \"null\");\n          flatKey = key.join(String.fromCharCode(0));\n          if (!totals[flatKey]) {\n            totals[flatKey] = f(key.slice());\n            addKey = true;\n          }\n          totals[flatKey].push(record);\n        }\n        if (addKey) {\n          keys.push(key);\n        }\n        return key;\n      };\n\n      SubtotalPivotData.prototype.processRecord = function(record) {\n        var colKey, fColKey, fRowKey, flatColKey, flatRowKey, i, j, k, m, n, ref, results, rowKey;\n        rowKey = [];\n        colKey = [];\n        this.allTotal.push(record);\n        rowKey = processKey(record, this.rowTotals, this.rowKeys, this.rowAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, key, []);\n          };\n        })(this));\n        colKey = processKey(record, this.colTotals, this.colKeys, this.colAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, [], key);\n          };\n        })(this));\n        m = rowKey.length - 1;\n        n = colKey.length - 1;\n        if (m < 0 || n < 0) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = m; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          fRowKey = rowKey.slice(0, i + 1);\n          flatRowKey = fRowKey.join(String.fromCharCode(0));\n          if (!this.tree[flatRowKey]) {\n            this.tree[flatRowKey] = {};\n          }\n          results.push((function() {\n            var l, ref1, results1;\n            results1 = [];\n            for (j = l = 0, ref1 = n; 0 <= ref1 ? l <= ref1 : l >= ref1; j = 0 <= ref1 ? ++l : --l) {\n              fColKey = colKey.slice(0, j + 1);\n              flatColKey = fColKey.join(String.fromCharCode(0));\n              if (!this.tree[flatRowKey][flatColKey]) {\n                this.tree[flatRowKey][flatColKey] = this.aggregator(this, fRowKey, fColKey);\n              }\n              results1.push(this.tree[flatRowKey][flatColKey].push(record));\n            }\n            return results1;\n          }).call(this));\n        }\n        return results;\n      };\n\n      return SubtotalPivotData;\n\n    })($.pivotUtilities.PivotData);\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData;\n    SubtotalRenderer = function(pivotData, opts) {\n      var allTotal, arrowCollapsed, arrowExpanded, buildColHeaderHeader, buildColHeaderHeaders, buildColHeaderHeadersClickEvents, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaderHeadersClickEvents, buildRowHeaders, buildRowTotalsHeader, buildValues, colAttrs, colKeys, colTotals, collapseCol, collapseColsAt, collapseRow, collapseRowsAt, createCell, defaults, expandCol, expandColsAt, expandRow, expandRowsAt, main, processKeys, rowAttrs, rowKeys, rowTotals, toggleCol, toggleColHeaderHeader, toggleRow, toggleRowHeaderHeader, tree;\n      defaults = {\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(defaults, opts);\n      arrowCollapsed = \"\\u25B6\";\n      arrowExpanded = \"\\u25E2\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      createCell = function(cellType, className, textContent, attributes) {\n        var attr, th, val;\n        th = document.createElement(cellType);\n        if (className) {\n          th.className = className;\n        }\n        if (textContent !== null && textContent !== void 0) {\n          th.textContent = textContent;\n        }\n        if (attributes) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, flatKey, header, headers, lastCol, lastRow, node, nodePos, r, rMark, repeats, th, x;\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        headers = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        flatKey = keysArr[0][0];\n        nodePos = 0;\n        node = {\n          \"node\": nodePos,\n          \"row\": 0,\n          \"col\": 0,\n          \"th\": th,\n          \"parent\": null,\n          \"children\": [],\n          \"descendants\": lastCol,\n          \"leaves\": 1,\n          \"flatKey\": flatKey\n        };\n        headers[0] = node;\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c];\n          ++nodePos;\n          node = {\n            \"node\": nodePos,\n            \"row\": 0,\n            \"col\": c,\n            \"th\": th,\n            \"parent\": rMark[c - 1],\n            \"children\": [],\n            \"descendants\": lastCol - c,\n            \"leaves\": 1,\n            \"flatKey\": flatKey\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          flatKey = \"\";\n          c = 0;\n          while (c <= lastCol) {\n            flatKey = c === 0 ? keysArr[r][c] : flatKey + String.fromCharCode(0) + keysArr[r][c];\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            header = {\n              \"node\": nodePos,\n              \"row\": r,\n              \"col\": c,\n              \"th\": th,\n              \"parent\": null,\n              \"children\": [],\n              \"descendants\": 0,\n              \"leaves\": 1,\n              \"flatKey\": flatKey\n            };\n            if (c === 0) {\n              headers.push(header);\n            } else {\n              header.parent = rMark[c - 1];\n              rMark[c - 1].children.push(header);\n              x = 0;\n              while (x <= c - 1) {\n                rMark[x].descendants = rMark[x].descendants + 1;\n                ++x;\n              }\n            }\n            rMark[c] = header;\n            repeats = false;\n            ++c;\n          }\n          c = 0;\n          while (c <= lastCol) {\n            rMark[c].leaves = rMark[c].leaves + 1;\n            ++c;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeader = function(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) {\n        var colAttr, textContent, th;\n        colAttr = colAttrs[col];\n        th = createCell(\"th\", \"pvtAxisLabel\", colAttr);\n        textContent = colAttr;\n        if (col < colAttrs.length - 1) {\n          textContent = \" \" + arrowExpanded + \" \" + colAttr;\n        }\n        th = createCell(\"th\", \"pvtAxisLabel\", textContent);\n        th.setAttribute(\"data-colAttr\", colAttr);\n        tr.appendChild(th);\n        colHeaderHeaders.push({\n          \"tr\": tr,\n          \"th\": th,\n          \"clickStatus\": \"expanded\"\n        });\n        return thead.appendChild(tr);\n      };\n      buildColHeaderHeaders = function(thead, colHeaderHeaders, rowAttrs, colAttrs) {\n        var c, k, ref, results, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            \"colspan\": rowAttrs.length,\n            \"rowspan\": colAttrs.length\n          }));\n        }\n        buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0);\n        results = [];\n        for (c = k = 1, ref = colAttrs.length; 1 <= ref ? k <= ref : k >= ref; c = 1 <= ref ? ++k : --k) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          results.push(buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c));\n        }\n        return results;\n      };\n      buildColHeaderHeadersClickEvents = function(colHeaderHeaders, colHeaderCols, colAttrs) {\n        var colAttr, i, k, ref, results, th;\n        results = [];\n        for (i = k = 0, ref = colAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < colAttrs.length - 1)) {\n            continue;\n          }\n          th = colHeaderHeaders[i].th;\n          colAttr = colAttrs[i];\n          results.push(th.onclick = function(event) {\n            event = event || window.event;\n            return toggleColHeaderHeader(colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\"));\n          });\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) {\n        var h, k, len, ref, rowspan, style, th, tr;\n        ref = colHeader.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n        }\n        tr = colHeaderHeaders[colHeader.col].tr;\n        th = colHeader.th;\n        th.setAttribute(\"data-colHeader\", th.textContent);\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants + 1);\n        }\n        th.setAttribute(\"data-node\", colHeaderCols.length);\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleCol(colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          rowspan = colAttrs.length - (colHeader.col + 1) + (rowAttrs.length !== 0 ? 1 : 0);\n          style = \"pvtColLabel col\" + colHeader.row;\n          th = createCell(\"th\", style, '', {\n            \"rowspan\": rowspan\n          });\n          colHeader.children[0].tr.appendChild(th);\n          colHeader.sTh = th;\n        }\n        colHeader.clickStatus = \"expanded\";\n        colHeader.tr = tr;\n        return colHeaderCols.push(colHeader);\n      };\n      buildRowHeaderHeaders = function(thead, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var i, rowAttr, textContent, th, tr;\n        tr = document.createElement(\"tr\");\n        rowHeaderHeaders.th = [];\n        for (i in rowAttrs) {\n          rowAttr = rowAttrs[i];\n          textContent = rowAttr;\n          if (i < rowAttrs.length - 1) {\n            textContent = \" \" + arrowExpanded + \" \" + rowAttr;\n          }\n          th = createCell(\"th\", \"pvtAxisLabel\", textContent);\n          th.setAttribute(\"data-rowAttr\", rowAttr);\n          tr.appendChild(th);\n          rowHeaderHeaders.th.push({\n            \"th\": th,\n            \"clickStatus\": \"expanded\"\n          });\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        thead.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowHeaderHeadersClickEvents = function(rowHeaderHeaders, rowHeaderRows, rowAttrs) {\n        var i, k, ref, results, rowAttr, th;\n        results = [];\n        for (i = k = 0, ref = rowAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < rowAttrs.length - 1)) {\n            continue;\n          }\n          th = rowHeaderHeaders.th[i];\n          rowAttr = rowAttrs[i];\n          results.push(th.th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRowHeaderHeader(rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\"));\n          });\n        }\n        return results;\n      };\n      buildRowTotalsHeader = function(tr, rowAttrs, colAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"rowspan\": rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(tbody, rowHeaderRows, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, k, len, ref, results, th, tr;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        th.setAttribute(\"data-rowHeader\", th.textContent);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRows.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel\", '', {\n            \"colspan\": colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = \"expanded\";\n        rowHeader.tr = tr;\n        rowHeaderRows.push(rowHeader);\n        tbody.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          results.push(buildRowHeaders(tbody, rowHeaderRows, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRows, colHeaderCols) {\n        var aggregator, colHeader, flatColKey, flatRowKey, k, l, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (k = 0, len = rowHeaderRows.length; k < len; k++) {\n          rowHeader = rowHeaderRows[k];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (l = 0, len1 = colHeaderCols.length; l < len1; l++) {\n            colHeader = colHeaderCols[l];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            style = colHeader.children.length !== 0 ? style + \" pvtColSubtotal\" : style;\n            style = rowHeader.children.length !== 0 ? style + \" pvtRowSubtotal\" : style;\n            style = style + \" row\" + rowHeader.row + \" col\" + colHeader.row + \" rowcol\" + rowHeader.col + \" colcol\" + colHeader.col;\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            });\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"colspan\": colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderCols) {\n        var h, k, len, results, style, td, totalAggregator, val;\n        results = [];\n        for (k = 0, len = colHeaderCols.length; k < len; k++) {\n          h = colHeaderCols[k];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          style = \"pvtVal pvtTotal colTotal\";\n          style = h.children.length ? style + \" pvtColSubtotal\" : style;\n          style = style + \" col\" + h.row + \" colcol\" + h.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        });\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      collapseCol = function(colHeaderCols, c) {\n        var colspan, d, h, i, k, p, ref;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === \"collapsed\") {\n          return;\n        }\n        colspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = colHeaderCols[c - i];\n          if (d.descendants !== 0) {\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"colspan\", 1);\n          if (d.th.style.display !== \"none\") {\n            ++colspan;\n            d.th.style.display = \"none\";\n            if (d.children.length) {\n              $('table.pvtTable tbody tr td.pvtColSubtotal.col' + d.row + '.colcol' + d.col).hide();\n            } else {\n              $('table.pvtTable tbody tr td.pvtVal.col' + d.row).not('.pvtColSubtotal').hide();\n            }\n            if (d.sTh) {\n              d.sTh.style.display = \"none\";\n            }\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\")) - colspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"colspan\", 1);\n        return h.th.style.display = \"\";\n      };\n      expandCol = function(colHeaderCols, c) {\n        var ch, colspan, d, h, i, k, l, len, p, ref, ref1, results;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === \"expanded\") {\n          return;\n        }\n        colspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = colHeaderCols[c - i];\n          if (d.descendants !== 0) {\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-colHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"colspan\", 1);\n          if (d.th.style.display !== \"none\") {\n            ++colspan;\n            d.th.style.display = \"none\";\n            if (d.children.length) {\n              $('table.pvtTable tbody tr td.pvtColSubtotal.col' + d.row + '.colcol' + d.col).hide();\n            } else {\n              $('table.pvtTable tbody tr td.pvtVal.col' + d.row).not('.pvtColSubtotal').hide();\n            }\n            if (d.sTh) {\n              d.sTh.style.display = \"none\";\n            }\n          }\n        }\n        ref1 = h.children;\n        for (l = 0, len = ref1.length; l < len; l++) {\n          ch = ref1[l];\n          if (ch.th.style.display === \"none\") {\n            ++colspan;\n            ch.th.style.display = \"\";\n            if (ch.children.length) {\n              $('table.pvtTable tbody tr td.pvtColSubtotal.col' + ch.row + '.colcol' + ch.col).show();\n            } else {\n              $('table.pvtTable tbody tr td.pvtVal.col' + ch.row).not('.pvtColSubtotal').show();\n            }\n            if (ch.sTh) {\n              ch.sTh.style.display = \"\";\n            }\n          }\n        }\n        h.th.setAttribute(\"colspan\", h.children.length + 1);\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.clickStatus = \"expanded\";\n        h.th.style.display = \"\";\n        if (h.sTh) {\n          h.sTh.style.display = \"\";\n        }\n        p = h.parent;\n        results = [];\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", colspan + parseInt(p.th.getAttribute(\"colspan\")));\n          results.push(p = p.parent);\n        }\n        return results;\n      };\n      collapseRow = function(rowHeaderRows, r) {\n        var d, h, i, k, p, ref, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === \"collapsed\") {\n          return;\n        }\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\")) - rowspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"rowspan\", 1);\n        return h.tr.style.display = \"\";\n      };\n      expandRow = function(rowHeaderRows, r) {\n        var c, d, h, i, k, l, len, p, ref, ref1, results, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === \"expanded\") {\n          return;\n        }\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            --rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        ref1 = h.children;\n        for (l = 0, len = ref1.length; l < len; l++) {\n          c = ref1[l];\n          if (c.tr.style.display === \"none\") {\n            ++rowspan;\n            c.tr.style.display = \"\";\n          }\n        }\n        h.th.setAttribute(\"rowspan\", h.children.length + 1);\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = \"expanded\";\n        h.tr.style.display = \"\";\n        p = h.parent;\n        results = [];\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          results.push(p = p.parent);\n        }\n        return results;\n      };\n      toggleCol = function(colHeaderCols, c) {\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        if (colHeaderCols[c].clickStatus === \"collapsed\") {\n          return expandCol(colHeaderCols, c);\n        } else {\n          return collapseCol(colHeaderCols, c);\n        }\n      };\n      toggleRow = function(rowHeaderRows, r) {\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === \"collapsed\") {\n          return expandRow(rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderRows, r);\n        }\n      };\n      collapseRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, nAttrs, nRows, results, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = rowAttrs.length - 1;\n        while (i < nAttrs) {\n          th = rowHeaderHeaders.th[i];\n          th.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i];\n          th.clickStatus = \"collapsed\";\n          ++i;\n        }\n        i = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (i < nRows) {\n          h = rowHeaderRows[i];\n          if (h.col === idx) {\n            collapseRow(rowHeaderRows, h.node);\n            results.push(i = i + h.descendants + 1);\n          } else {\n            results.push(++i);\n          }\n        }\n        return results;\n      };\n      expandRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, j, k, nRows, ref, results, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          th = rowHeaderHeaders.th[i];\n          th.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i];\n          th.clickStatus = \"expanded\";\n          j = 0;\n          nRows = rowHeaderRows.length;\n          results.push((function() {\n            var results1;\n            results1 = [];\n            while (j < nRows) {\n              h = rowHeaderRows[j];\n              if (h.col === i) {\n                expandRow(rowHeaderRows, h.node);\n                results1.push(j = j + h.descendants + 1);\n              } else {\n                results1.push(++j);\n              }\n            }\n            return results1;\n          })());\n        }\n        return results;\n      };\n      collapseColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, i, idx, nAttrs, nCols, results, th;\n        idx = colAttrs.indexOf(colAttr);\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = colAttrs.length - 1;\n        while (i < nAttrs) {\n          th = colHeaderHeaders[i].th;\n          th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i];\n          th.clickStatus = \"collapsed\";\n          ++i;\n        }\n        i = 0;\n        nCols = colHeaderCols.length;\n        results = [];\n        while (i < nCols) {\n          h = colHeaderCols[i];\n          if (h.col === idx) {\n            collapseCol(colHeaderCols, i);\n          }\n          results.push(++i);\n        }\n        return results;\n      };\n      expandColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, i, idx, j, k, nCols, ref, results, th;\n        idx = colAttrs.indexOf(colAttr);\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          th = colHeaderHeaders[i].th;\n          th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i];\n          th.clickStatus = \"expanded\";\n          j = 0;\n          nCols = colHeaderCols.length;\n          results.push((function() {\n            var results1;\n            results1 = [];\n            while (j < nCols) {\n              h = colHeaderCols[j];\n              if (h.col === i) {\n                expandCol(colHeaderCols, j);\n              }\n              results1.push(++j);\n            }\n            return results1;\n          })());\n        }\n        return results;\n      };\n      toggleColHeaderHeader = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var idx, th;\n        idx = colAttrs.indexOf(colAttr);\n        th = colHeaderHeaders[idx].th;\n        if (th.clickStatus === \"collapsed\") {\n          return expandColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        } else {\n          return collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        }\n      };\n      toggleRowHeaderHeader = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var idx, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        th = rowHeaderHeaders.th[idx];\n        if (th.clickStatus === \"collapsed\") {\n          return expandRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        } else {\n          return collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        }\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderHeaders, colHeaders, h, k, l, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, tbody, thead, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderHeaders = [];\n        colHeaderCols = [];\n        if (rowAttrs.length !== 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length !== 0) {\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        result.style.display = \"none\";\n        thead = document.createElement(\"thead\");\n        result.appendChild(thead);\n        if (colAttrs.length !== 0) {\n          buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs);\n          for (k = 0, len = colHeaders.length; k < len; k++) {\n            h = colHeaders[k];\n            buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n          }\n          buildColHeaderHeadersClickEvents(colHeaderHeaders, colHeaderCols, colAttrs);\n        }\n        if (rowAttrs.length !== 0) {\n          buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs);\n          }\n        }\n        if (colAttrs.length !== 0) {\n          buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs);\n        }\n        tbody = document.createElement(\"tbody\");\n        result.appendChild(tbody);\n        if (rowAttrs.length !== 0) {\n          for (l = 0, len1 = rowHeaders.length; l < len1; l++) {\n            h = rowHeaders[l];\n            buildRowHeaders(tbody, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n          buildRowHeaderHeadersClickEvents(rowHeaderHeaders, rowHeaderRows, rowAttrs);\n        }\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length !== 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(tbody, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        if (!opts.collapseRowsAt && !opts.collapseColsAt) {\n          result.style.display = \"\";\n        }\n        if (opts.collapseRowsAt) {\n          setTimeout((function() {\n            collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt);\n            if (!opts.collapseColsAt) {\n              return result.style.display = \"\";\n            }\n          }), 0);\n        }\n        if (opts.collapseColsAt) {\n          setTimeout((function() {\n            collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt);\n            return result.style.display = \"\";\n          }), 0);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap();\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\");\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\");\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal.js.map\n"],"sourceRoot":"/source/"}