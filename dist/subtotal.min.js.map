{"version":3,"sources":["/source/subtotal.coffee","subtotal.min.js"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","superClass","input","opts","processKey","record","totals","keys","attrs","f","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","l","ref1","results1","pivotUtilities","PivotData","pivotData","buildColHeaderHeaders","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaders","buildRowTotalsHeader","buildValues","collapseRow","collapseRowsAt","createCell","defaults","expandRow","main","minus","plus","processKeys","toggleRow","localeStrings","getRowKeys","getColKeys","cellType","className","textContent","attributes","th","val","document","createElement","setAttribute","keysArr","c","header","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","row","col","children","descendants","leaves","thead","colHeaderRowsArr","tr","appendChild","colspan","rowspan","colHeaderColsArr","colHeader","h","rowHeaderHeaders","rowAttr","tbody","rowHeaderRowsArr","rowHeader","onclick","event","window","parseInt","target","getAttribute","clickStatus","len1","style","td","totalAggregator","value","format","data-value","data-row","data-col","data-for","result","rowHeaderRows","d","p","str","substr","display","nRows","colHeaderCols","colHeaderRows","colHeaders","idx","rowHeaders","sTime","Date","now","indexOf","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super(input, opts)\r\n\r\n        processKey = (record, totals, keys, attrs, f) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\" \r\n                flatKey = key.join(String.fromCharCode(0))\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = f(key.slice())\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            if addKey\r\n                keys.push key\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n            \r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                    return @aggregator(this, key, [])\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                    return @aggregator(this, [], key)\r\n            m = rowKey.length-1\r\n            n = colKey.length-1            \r\n            if m < 0 or n < 0\r\n                return\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\r\n                if not @tree[flatRowKey]\r\n                    @tree[flatRowKey] = {}\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice(0, j+1)\r\n                    flatColKey = fColKey.join(String.fromCharCode(0))\r\n                    if not @tree[flatRowKey][flatColKey]\r\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                totals: \"Totals\"\r\n\r\n        opts = $.extend defaults, opts\r\n\r\n        plus = \"\\u25B6\"\r\n        minus = \"\\u25E2\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal =pivotData.allTotal\r\n        \r\n        createCell = (cellType, className, textContent, attributes) ->\r\n            th = document.createElement(cellType)\r\n            if className then th.className = className\r\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\r\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            headers = []\r\n            th = createCell(\"th\", className, keysArr[0][0])\r\n            flatKey = keysArr[0][0]\r\n            nodePos = 0\r\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\r\n            headers[0] = node \r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell(\"th\", className, keysArr[0][c])\r\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\r\n                ++nodePos\r\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push(node)\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                flatKey = \"\"\r\n                c = 0\r\n                while c <= lastCol\r\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell(\"th\", className, keysArr[r][c])\r\n                    ++nodePos\r\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\r\n                    if c is 0\r\n                        headers.push header\r\n                    else\r\n                        header.parent = rMark[c-1]\r\n                        rMark[c-1].children.push header\r\n                        x = 0\r\n                        while x <= c-1\r\n                            rMark[x].descendants = rMark[x].descendants + 1\r\n                            ++x\r\n                    rMark[c] = header\r\n                    repeats = false\r\n                    ++c\r\n                c = 0\r\n                while c <= lastCol\r\n                    rMark[c].leaves = rMark[c].leaves + 1\r\n                    ++c\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderRowsArr, rowAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\r\n            tr.appendChild createCell(\"th\", \"pvtAxisLabel\", colAttrs[0])\r\n            colHeaderRowsArr[0] = tr\r\n            thead.appendChild(tr)\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                th = createCell(\"th\", \"pvtAxisLabel\", colAttrs[c])\r\n                tr.appendChild th\r\n                colHeaderRowsArr[c] = tr\r\n                thead.appendChild(tr)\r\n                ++c\r\n\r\n        buildColHeaders = (colHeaderRowsArr, colHeaderColsArr, colHeader, parent, colAttrs, rowAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderRowsArr, colHeaderColsArr, h, colHeader, colAttrs, rowAttrs)\r\n            # Process\r\n            tr = colHeaderRowsArr[colHeader.col]\r\n            th = colHeader.th\r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            if colHeader.children.length !=0\r\n                th.setAttribute(\"colspan\", colHeader.descendants)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length !=0\r\n                rowspan = colAttrs.length-colHeader.col + if rowAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtColLabel\", '', {\"rowspan\": rowspan})\r\n                tr.appendChild(th)\r\n            colHeader.tr = tr\r\n            colHeaderColsArr.push(colHeader)\r\n\r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            for rowAttr in rowAttrs\r\n                th = createCell(\"th\", \"pvtAxisLabel\", rowAttr)\r\n                tr.appendChild th\r\n            if colAttrs.length != 0\r\n                th = createCell(\"th\")\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowTotalsHeader = (tr, colAttrs, rowAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (tbody, rowHeaderRowsArr, rowHeader, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            th = rowHeader.th\r\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute(\"colspan\", 2)\r\n            th.setAttribute(\"data-node\", rowHeaderRowsArr.length)\r\n            tr.appendChild(th)\r\n            if rowHeader.children.length != 0\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow(rowHeaderRowsArr, parseInt(event.target.getAttribute(\"data-node\")))\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtRowLabel\", '', {\"colspan\": colspan})\r\n                tr.appendChild(th)\r\n            rowHeader.clickStatus = \"expanded\"\r\n            rowHeader.th.textContent = \" \" + minus + \" \" + rowHeader.th.textContent\r\n            rowHeader.tr = tr\r\n            rowHeaderRowsArr.push(rowHeader)\r\n            tbody.appendChild(tr)\r\n            for h in rowHeader.children\r\n                buildRowHeaders(tbody, rowHeaderRowsArr, h, rowAttrs, colAttrs)\r\n\r\n        buildValues = (rowHeaderRowsArr, colHeaderColsArr) ->\r\n            for rowHeader in rowHeaderRowsArr\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderColsArr\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtSubtotal\" else style\r\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.col\r\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\r\n            tr.appendChild(th)\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderColsArr) ->\r\n            for h in colHeaderColsArr\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal colTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n       \r\n        collapseRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    str = d.th.textContent\r\n                    d.th.textContent = str.substr(0, 1) + plus + str.substr(1+minus.length);\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                str = h.th.textContent\r\n                h.th.textContent = str.substr(0, 1) + plus + str.substr(1+plus.length);\r\n            h.clickStatus = \"collapsed\"\r\n            h.th.setAttribute(\"rowspan\", 1)\r\n            h.tr.style.display = \"\"\r\n            \r\n        expandRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            rowspan = 0\r\n            h = rowHeaderRows[r]\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    str = d.th.textContent\r\n                    d.th.textContent = str.substr(0, 1) + plus + str.substr(1+minus.length);\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    --rowspan\r\n                    d.tr.style.display = \"none\"\r\n            for c in h.children\r\n                if c.tr.style.display is \"none\"\r\n                    ++rowspan\r\n                    c.tr.style.display = \"\"\r\n            h.th.setAttribute(\"rowspan\", h.children.length+1)\r\n            if h.descendants != 0\r\n                str = h.th.textContent\r\n                h.th.textContent = str.substr(0, 1) + minus + str.substr(1+minus.length);\r\n            h.clickStatus = \"expanded\"\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\r\n                p = p.parent\r\n\r\n        toggleRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            if rowHeaderRows[r].clickStatus is \"collapsed\"\r\n                expandRow(rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderRows, r)\r\n\r\n        collapseRowsAt = (rowHeaderRows, col) ->\r\n            i = 0\r\n            nRows = rowHeaderRows.length\r\n            while i < nRows\r\n                h = rowHeaderRows[i]\r\n                if h.col is col\r\n                    collapseRow(rowHeaderRows, h.node)\r\n                    i = i + h.descendants + 1\r\n                else\r\n                    ++i\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderRows = []\r\n            colHeaderCols = []\r\n\r\n            if rowAttrs.length != 0\r\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\r\n            result = document.createElement(\"table\")\r\n            result.className = \"pvtTable\"\r\n            thead = document.createElement(\"thead\")\r\n            result.appendChild thead\r\n            if colAttrs.length != 0\r\n                buildColHeaderHeaders(thead, colHeaderRows, rowAttrs)\r\n                for h in colHeaders\r\n                    buildColHeaders(colHeaderRows, colHeaderCols, h, null, colAttrs, rowAttrs)\r\n            if rowAttrs.length != 0\r\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\r\n                if colAttrs.length == 0\r\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, colAttrs, rowAttrs)\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                buildRowTotalsHeader(colHeaderRows[0], colAttrs, rowAttrs)\r\n            tbody = document.createElement(\"tbody\")\r\n            result.appendChild tbody\r\n            if rowAttrs.length != 0\r\n                for h in rowHeaders\r\n                    buildRowHeaders tbody, rowHeaderRows, h, rowAttrs, colAttrs\r\n            buildValues(rowHeaderRows, colHeaderCols)\r\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildColTotals(tr, colHeaderCols)\r\n            buildGrandTotal(tbody, tr)\r\n            result.setAttribute(\"data-numrows\", rowKeys.length)\r\n            result.setAttribute(\"data-numcols\", colKeys.length)\r\n            idx = rowAttrs.indexOf(opts.collapseRowsAt)\r\n            if idx != -1 and idx != rowAttrs.length-1\r\n                collapseRowsAt(rowHeaderRows, idx)\r\n            return result\r\n\r\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\r\n        \r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap()\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\")\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\")\r\n","(function() {\n  var callWithJQuery,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalPivotData, SubtotalRenderer;\n    SubtotalPivotData = (function(superClass) {\n      var processKey;\n\n      extend(SubtotalPivotData, superClass);\n\n      function SubtotalPivotData(input, opts) {\n        SubtotalPivotData.__super__.constructor.call(this, input, opts);\n      }\n\n      processKey = function(record, totals, keys, attrs, f) {\n        var addKey, attr, flatKey, k, key, len, ref;\n        key = [];\n        addKey = false;\n        for (k = 0, len = attrs.length; k < len; k++) {\n          attr = attrs[k];\n          key.push((ref = record[attr]) != null ? ref : \"null\");\n          flatKey = key.join(String.fromCharCode(0));\n          if (!totals[flatKey]) {\n            totals[flatKey] = f(key.slice());\n            addKey = true;\n          }\n          totals[flatKey].push(record);\n        }\n        if (addKey) {\n          keys.push(key);\n        }\n        return key;\n      };\n\n      SubtotalPivotData.prototype.processRecord = function(record) {\n        var colKey, fColKey, fRowKey, flatColKey, flatRowKey, i, j, k, m, n, ref, results, rowKey;\n        rowKey = [];\n        colKey = [];\n        this.allTotal.push(record);\n        rowKey = processKey(record, this.rowTotals, this.rowKeys, this.rowAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, key, []);\n          };\n        })(this));\n        colKey = processKey(record, this.colTotals, this.colKeys, this.colAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, [], key);\n          };\n        })(this));\n        m = rowKey.length - 1;\n        n = colKey.length - 1;\n        if (m < 0 || n < 0) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = m; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          fRowKey = rowKey.slice(0, i + 1);\n          flatRowKey = fRowKey.join(String.fromCharCode(0));\n          if (!this.tree[flatRowKey]) {\n            this.tree[flatRowKey] = {};\n          }\n          results.push((function() {\n            var l, ref1, results1;\n            results1 = [];\n            for (j = l = 0, ref1 = n; 0 <= ref1 ? l <= ref1 : l >= ref1; j = 0 <= ref1 ? ++l : --l) {\n              fColKey = colKey.slice(0, j + 1);\n              flatColKey = fColKey.join(String.fromCharCode(0));\n              if (!this.tree[flatRowKey][flatColKey]) {\n                this.tree[flatRowKey][flatColKey] = this.aggregator(this, fRowKey, fColKey);\n              }\n              results1.push(this.tree[flatRowKey][flatColKey].push(record));\n            }\n            return results1;\n          }).call(this));\n        }\n        return results;\n      };\n\n      return SubtotalPivotData;\n\n    })($.pivotUtilities.PivotData);\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData;\n    SubtotalRenderer = function(pivotData, opts) {\n      var allTotal, buildColHeaderHeaders, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaders, buildRowTotalsHeader, buildValues, colAttrs, colKeys, colTotals, collapseRow, collapseRowsAt, createCell, defaults, expandRow, main, minus, plus, processKeys, rowAttrs, rowKeys, rowTotals, toggleRow, tree;\n      defaults = {\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(defaults, opts);\n      plus = \"\\u25B6\";\n      minus = \"\\u25E2\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      createCell = function(cellType, className, textContent, attributes) {\n        var attr, th, val;\n        th = document.createElement(cellType);\n        if (className) {\n          th.className = className;\n        }\n        if (textContent !== null && textContent !== void 0) {\n          th.textContent = textContent;\n        }\n        if (attributes) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, flatKey, header, headers, lastCol, lastRow, node, nodePos, r, rMark, repeats, th, x;\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        headers = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        flatKey = keysArr[0][0];\n        nodePos = 0;\n        node = {\n          \"node\": nodePos,\n          \"row\": 0,\n          \"col\": 0,\n          \"th\": th,\n          \"parent\": null,\n          \"children\": [],\n          \"descendants\": lastCol,\n          \"leaves\": 1,\n          \"flatKey\": flatKey\n        };\n        headers[0] = node;\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c];\n          ++nodePos;\n          node = {\n            \"node\": nodePos,\n            \"row\": 0,\n            \"col\": c,\n            \"th\": th,\n            \"parent\": rMark[c - 1],\n            \"children\": [],\n            \"descendants\": lastCol - c,\n            \"leaves\": 1,\n            \"flatKey\": flatKey\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          flatKey = \"\";\n          c = 0;\n          while (c <= lastCol) {\n            flatKey = c === 0 ? keysArr[r][c] : flatKey + String.fromCharCode(0) + keysArr[r][c];\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            header = {\n              \"node\": nodePos,\n              \"row\": r,\n              \"col\": c,\n              \"th\": th,\n              \"parent\": null,\n              \"children\": [],\n              \"descendants\": 0,\n              \"leaves\": 1,\n              \"flatKey\": flatKey\n            };\n            if (c === 0) {\n              headers.push(header);\n            } else {\n              header.parent = rMark[c - 1];\n              rMark[c - 1].children.push(header);\n              x = 0;\n              while (x <= c - 1) {\n                rMark[x].descendants = rMark[x].descendants + 1;\n                ++x;\n              }\n            }\n            rMark[c] = header;\n            repeats = false;\n            ++c;\n          }\n          c = 0;\n          while (c <= lastCol) {\n            rMark[c].leaves = rMark[c].leaves + 1;\n            ++c;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeaders = function(thead, colHeaderRowsArr, rowAttrs) {\n        var c, k, ref, results, th, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            \"colspan\": rowAttrs.length,\n            \"rowspan\": colAttrs.length\n          }));\n        }\n        tr.appendChild(createCell(\"th\", \"pvtAxisLabel\", colAttrs[0]));\n        colHeaderRowsArr[0] = tr;\n        thead.appendChild(tr);\n        results = [];\n        for (c = k = 1, ref = colAttrs.length; 1 <= ref ? k <= ref : k >= ref; c = 1 <= ref ? ++k : --k) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          th = createCell(\"th\", \"pvtAxisLabel\", colAttrs[c]);\n          tr.appendChild(th);\n          colHeaderRowsArr[c] = tr;\n          thead.appendChild(tr);\n          results.push(++c);\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderRowsArr, colHeaderColsArr, colHeader, parent, colAttrs, rowAttrs) {\n        var h, k, len, ref, rowspan, th, tr;\n        ref = colHeader.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          buildColHeaders(colHeaderRowsArr, colHeaderColsArr, h, colHeader, colAttrs, rowAttrs);\n        }\n        tr = colHeaderRowsArr[colHeader.col];\n        th = colHeader.th;\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants);\n        }\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          rowspan = colAttrs.length - colHeader.col + (rowAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtColLabel\", '', {\n            \"rowspan\": rowspan\n          });\n          tr.appendChild(th);\n        }\n        colHeader.tr = tr;\n        return colHeaderColsArr.push(colHeader);\n      };\n      buildRowHeaderHeaders = function(thead, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var k, len, rowAttr, th, tr;\n        tr = document.createElement(\"tr\");\n        for (k = 0, len = rowAttrs.length; k < len; k++) {\n          rowAttr = rowAttrs[k];\n          th = createCell(\"th\", \"pvtAxisLabel\", rowAttr);\n          tr.appendChild(th);\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        thead.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowTotalsHeader = function(tr, colAttrs, rowAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"rowspan\": rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(tbody, rowHeaderRowsArr, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, k, len, ref, results, th, tr;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRowsArr.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderRowsArr, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel\", '', {\n            \"colspan\": colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = \"expanded\";\n        rowHeader.th.textContent = \" \" + minus + \" \" + rowHeader.th.textContent;\n        rowHeader.tr = tr;\n        rowHeaderRowsArr.push(rowHeader);\n        tbody.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          results.push(buildRowHeaders(tbody, rowHeaderRowsArr, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRowsArr, colHeaderColsArr) {\n        var aggregator, colHeader, flatColKey, flatRowKey, k, l, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (k = 0, len = rowHeaderRowsArr.length; k < len; k++) {\n          rowHeader = rowHeaderRowsArr[k];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (l = 0, len1 = colHeaderColsArr.length; l < len1; l++) {\n            colHeader = colHeaderColsArr[l];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            style = colHeader.children.length !== 0 ? style + \" pvtSubtotal\" : style;\n            style = style + \" row\" + rowHeader.row + \" col\" + colHeader.col;\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            });\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"colspan\": colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderColsArr) {\n        var h, k, len, results, td, totalAggregator, val;\n        results = [];\n        for (k = 0, len = colHeaderColsArr.length; k < len; k++) {\n          h = colHeaderColsArr[k];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          td = createCell(\"td\", \"pvtTotal colTotal\", totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        });\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      collapseRow = function(rowHeaderRows, r) {\n        var d, h, i, k, p, ref, rowspan, str;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            str = d.th.textContent;\n            d.th.textContent = str.substr(0, 1) + plus + str.substr(1 + minus.length);\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\")) - rowspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          str = h.th.textContent;\n          h.th.textContent = str.substr(0, 1) + plus + str.substr(1 + plus.length);\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"rowspan\", 1);\n        return h.tr.style.display = \"\";\n      };\n      expandRow = function(rowHeaderRows, r) {\n        var c, d, h, i, k, l, len, p, ref, ref1, results, rowspan, str;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        rowspan = 0;\n        h = rowHeaderRows[r];\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            str = d.th.textContent;\n            d.th.textContent = str.substr(0, 1) + plus + str.substr(1 + minus.length);\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            --rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        ref1 = h.children;\n        for (l = 0, len = ref1.length; l < len; l++) {\n          c = ref1[l];\n          if (c.tr.style.display === \"none\") {\n            ++rowspan;\n            c.tr.style.display = \"\";\n          }\n        }\n        h.th.setAttribute(\"rowspan\", h.children.length + 1);\n        if (h.descendants !== 0) {\n          str = h.th.textContent;\n          h.th.textContent = str.substr(0, 1) + minus + str.substr(1 + minus.length);\n        }\n        h.clickStatus = \"expanded\";\n        h.tr.style.display = \"\";\n        p = h.parent;\n        results = [];\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          results.push(p = p.parent);\n        }\n        return results;\n      };\n      toggleRow = function(rowHeaderRows, r) {\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === \"collapsed\") {\n          return expandRow(rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderRows, r);\n        }\n      };\n      collapseRowsAt = function(rowHeaderRows, col) {\n        var h, i, nRows, results;\n        i = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (i < nRows) {\n          h = rowHeaderRows[i];\n          if (h.col === col) {\n            collapseRow(rowHeaderRows, h.node);\n            results.push(i = i + h.descendants + 1);\n          } else {\n            results.push(++i);\n          }\n        }\n        return results;\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderRows, colHeaders, h, idx, k, l, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, sTime, tbody, thead, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderRows = [];\n        colHeaderCols = [];\n        if (rowAttrs.length !== 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length !== 0) {\n          sTime = Date.now();\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        thead = document.createElement(\"thead\");\n        result.appendChild(thead);\n        if (colAttrs.length !== 0) {\n          buildColHeaderHeaders(thead, colHeaderRows, rowAttrs);\n          for (k = 0, len = colHeaders.length; k < len; k++) {\n            h = colHeaders[k];\n            buildColHeaders(colHeaderRows, colHeaderCols, h, null, colAttrs, rowAttrs);\n          }\n        }\n        if (rowAttrs.length !== 0) {\n          buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, colAttrs, rowAttrs);\n          }\n        }\n        if (colAttrs.length !== 0) {\n          sTime = Date.now();\n          buildRowTotalsHeader(colHeaderRows[0], colAttrs, rowAttrs);\n        }\n        tbody = document.createElement(\"tbody\");\n        result.appendChild(tbody);\n        if (rowAttrs.length !== 0) {\n          for (l = 0, len1 = rowHeaders.length; l < len1; l++) {\n            h = rowHeaders[l];\n            buildRowHeaders(tbody, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n        }\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length !== 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(tbody, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        idx = rowAttrs.indexOf(opts.collapseRowsAt);\n        if (idx !== -1 && idx !== rowAttrs.length - 1) {\n          collapseRowsAt(rowHeaderRows, idx);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap();\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\");\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\");\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal.js.map\n"],"sourceRoot":"/source/"}