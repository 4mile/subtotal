{"version":3,"sources":["/source/subtotal.coffee","subtotal.min.js"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","superClass","input","opts","processKey","record","totals","keys","attrs","f","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","l","ref1","results1","pivotUtilities","PivotData","pivotData","arrowCollapsed","arrowExpanded","buildColHeaderHeaders","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaderHeadersClickEvents","buildRowHeaders","buildRowTotalsHeader","buildValues","collapseRow","collapseRowsAt","createCell","defaults","expandRow","expandRowsAt","main","processKeys","toggleRow","toggleRowHeaderHeader","localeStrings","getRowKeys","getColKeys","cellType","className","textContent","attributes","th","val","document","createElement","setAttribute","keysArr","c","header","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","row","col","children","descendants","leaves","thead","colHeaderRowsArr","tr","appendChild","colspan","rowspan","colHeaderColsArr","colHeader","h","rowHeaderHeaders","rowAttr","clickStatus","rowHeaderRows","onclick","event","window","target","getAttribute","tbody","rowHeaderRowsArr","rowHeader","parseInt","len1","style","td","totalAggregator","value","format","data-value","data-row","data-col","data-for","result","d","p","str","display","idx","nAttrs","nRows","indexOf","colHeaderCols","colHeaderRows","colHeaders","rowHeaders","sTime","Date","now","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n        \r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super(input, opts)\r\n\r\n        processKey = (record, totals, keys, attrs, f) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\" \r\n                flatKey = key.join(String.fromCharCode(0))\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = f(key.slice())\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            if addKey\r\n                keys.push key\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n            \r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                    return @aggregator(this, key, [])\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                    return @aggregator(this, [], key)\r\n            m = rowKey.length-1\r\n            n = colKey.length-1            \r\n            if m < 0 or n < 0\r\n                return\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\r\n                if not @tree[flatRowKey]\r\n                    @tree[flatRowKey] = {}\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice(0, j+1)\r\n                    flatColKey = fColKey.join(String.fromCharCode(0))\r\n                    if not @tree[flatRowKey][flatColKey]\r\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                totals: \"Totals\"\r\n\r\n        opts = $.extend defaults, opts\r\n\r\n        arrowCollapsed = \"\\u25B6\"\r\n        arrowExpanded = \"\\u25E2\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal =pivotData.allTotal\r\n        \r\n        createCell = (cellType, className, textContent, attributes) ->\r\n            th = document.createElement(cellType)\r\n            if className then th.className = className\r\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\r\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            headers = []\r\n            th = createCell(\"th\", className, keysArr[0][0])\r\n            flatKey = keysArr[0][0]\r\n            nodePos = 0\r\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\r\n            headers[0] = node \r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell(\"th\", className, keysArr[0][c])\r\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\r\n                ++nodePos\r\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push(node)\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                flatKey = \"\"\r\n                c = 0\r\n                while c <= lastCol\r\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell(\"th\", className, keysArr[r][c])\r\n                    ++nodePos\r\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\r\n                    if c is 0\r\n                        headers.push header\r\n                    else\r\n                        header.parent = rMark[c-1]\r\n                        rMark[c-1].children.push header\r\n                        x = 0\r\n                        while x <= c-1\r\n                            rMark[x].descendants = rMark[x].descendants + 1\r\n                            ++x\r\n                    rMark[c] = header\r\n                    repeats = false\r\n                    ++c\r\n                c = 0\r\n                while c <= lastCol\r\n                    rMark[c].leaves = rMark[c].leaves + 1\r\n                    ++c\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderRowsArr, rowAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\r\n            tr.appendChild createCell(\"th\", \"pvtAxisLabel\", colAttrs[0])\r\n            colHeaderRowsArr[0] = tr\r\n            thead.appendChild(tr)\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                th = createCell(\"th\", \"pvtAxisLabel\", colAttrs[c])\r\n                tr.appendChild th\r\n                colHeaderRowsArr[c] = tr\r\n                thead.appendChild(tr)\r\n                ++c\r\n\r\n        buildColHeaders = (colHeaderRowsArr, colHeaderColsArr, colHeader, parent, colAttrs, rowAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderRowsArr, colHeaderColsArr, h, colHeader, colAttrs, rowAttrs)\r\n            # Process\r\n            tr = colHeaderRowsArr[colHeader.col]\r\n            th = colHeader.th\r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            if colHeader.children.length !=0\r\n                th.setAttribute(\"colspan\", colHeader.descendants)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length !=0\r\n                rowspan = colAttrs.length-colHeader.col + if rowAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtColLabel\", '', {\"rowspan\": rowspan})\r\n                tr.appendChild(th)\r\n            colHeader.tr = tr\r\n            colHeaderColsArr.push(colHeader)\r\n\r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            rowHeaderHeaders.th = []\r\n            for i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                if i < rowAttrs.length-1\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\r\n                th = createCell(\"th\", \"pvtAxisLabel\", textContent)\r\n                th.setAttribute(\"data-rowAttr\", rowAttr)\r\n                tr.appendChild th                \r\n                rowHeaderHeaders.th.push({\"th\": th, \"clickStatus\": \"expanded\"})\r\n            if colAttrs.length != 0\r\n                th = createCell(\"th\")\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            for i in [0..rowAttrs.length-1] when i < rowAttrs.length-1\r\n                th = rowHeaderHeaders.th[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\")\r\n\r\n        buildRowTotalsHeader = (tr, colAttrs, rowAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (tbody, rowHeaderRowsArr, rowHeader, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            th = rowHeader.th\r\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\r\n            th.setAttribute(\"data-rowHeader\", th.textContent) \r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute(\"colspan\", 2)\r\n            th.setAttribute(\"data-node\", rowHeaderRowsArr.length)\r\n            tr.appendChild(th)\r\n            if rowHeader.children.length != 0\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow(rowHeaderRowsArr, parseInt(event.target.getAttribute(\"data-node\")))\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtRowLabel\", '', {\"colspan\": colspan})\r\n                tr.appendChild(th)\r\n            rowHeader.clickStatus = \"expanded\"\r\n            rowHeader.tr = tr\r\n            rowHeaderRowsArr.push(rowHeader)\r\n            tbody.appendChild(tr)\r\n            for h in rowHeader.children\r\n                buildRowHeaders(tbody, rowHeaderRowsArr, h, rowAttrs, colAttrs)\r\n\r\n        buildValues = (rowHeaderRowsArr, colHeaderColsArr) ->\r\n            for rowHeader in rowHeaderRowsArr\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderColsArr\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtSubtotal\" else style\r\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.col\r\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\r\n            tr.appendChild(th)\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderColsArr) ->\r\n            for h in colHeaderColsArr\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                td = createCell(\"td\", \"pvtTotal colTotal\", totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n       \r\n        collapseRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    str = d.th.textContent\r\n                    #d.th.textContent = str.substr(0, 1) + arrowCollapsed + str.substr(1+arrowExpanded.length);\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                str = h.th.textContent\r\n                #h.th.textContent = str.substr(0, 1) + arrowCollapsed + str.substr(1+arrowCollapsed.length);\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = \"collapsed\"\r\n            h.th.setAttribute(\"rowspan\", 1)\r\n            h.tr.style.display = \"\"\r\n            \r\n        expandRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            rowspan = 0\r\n            h = rowHeaderRows[r]\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.descendants != 0\r\n                    #str = d.th.textContent\r\n                    #d.th.textContent = str.substr(0, 1) + arrowCollapsed + str.substr(1+arrowExpanded.length);\r\n                    d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\")\r\n                d.clickStatus = \"collapsed\"\r\n                d.th.setAttribute(\"rowspan\", 1)\r\n                if d.tr.style.display isnt \"none\"\r\n                    --rowspan\r\n                    d.tr.style.display = \"none\"\r\n            for c in h.children\r\n                if c.tr.style.display is \"none\"\r\n                    ++rowspan\r\n                    c.tr.style.display = \"\"\r\n            h.th.setAttribute(\"rowspan\", h.children.length+1)\r\n            if h.descendants != 0\r\n                #str = h.th.textContent\r\n                #h.th.textContent = str.substr(0, 1) + arrowExpanded + str.substr(1+arrowExpanded.length);\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = \"expanded\"\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\r\n                p = p.parent\r\n\r\n        toggleRow = (rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            if rowHeaderRows[r].clickStatus is \"collapsed\"\r\n                expandRow(rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderRows, r)\r\n\r\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n            i = idx\r\n            nAttrs = rowAttrs.length-1\r\n            while i < nAttrs\r\n                th = rowHeaderHeaders.th[i]\r\n                th.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\r\n                th.clickStatus = \"collapsed\"\r\n                ++i          \r\n            i = 0\r\n            nRows = rowHeaderRows.length\r\n            while i < nRows\r\n                h = rowHeaderRows[i]\r\n                if h.col is idx\r\n                    collapseRow(rowHeaderRows, h.node)\r\n                    i = i + h.descendants + 1\r\n                else\r\n                    ++i\r\n\r\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n\r\n            for i in [0..idx]\r\n                th = rowHeaderHeaders.th[i]\r\n                th.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\r\n                th.clickStatus = \"expanded\"\r\n                j = 0\r\n                nRows = rowHeaderRows.length\r\n                while j < nRows\r\n                    h = rowHeaderRows[j]\r\n                    if h.col == i\r\n                        expandRow(rowHeaderRows, h.node)\r\n                        j = j + h.descendants + 1\r\n                    else\r\n                        ++j\r\n                    #++j\r\n\r\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            th = rowHeaderHeaders.th[idx]\r\n            if th.clickStatus is \"collapsed\"\r\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n            else\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderRows = []\r\n            colHeaderCols = []\r\n\r\n            if rowAttrs.length != 0\r\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\r\n            result = document.createElement(\"table\")\r\n            result.className = \"pvtTable\"\r\n            thead = document.createElement(\"thead\")\r\n            result.appendChild thead\r\n            if colAttrs.length != 0\r\n                buildColHeaderHeaders(thead, colHeaderRows, rowAttrs)\r\n                for h in colHeaders\r\n                    buildColHeaders(colHeaderRows, colHeaderCols, h, null, colAttrs, rowAttrs)\r\n            if rowAttrs.length != 0\r\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\r\n                if colAttrs.length == 0\r\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, colAttrs, rowAttrs)\r\n            if colAttrs.length != 0\r\n                sTime = Date.now()\r\n                buildRowTotalsHeader(colHeaderRows[0], colAttrs, rowAttrs)\r\n            tbody = document.createElement(\"tbody\")\r\n            result.appendChild tbody\r\n            if rowAttrs.length != 0\r\n                for h in rowHeaders\r\n                    buildRowHeaders tbody, rowHeaderRows, h, rowAttrs, colAttrs\r\n                buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            buildValues(rowHeaderRows, colHeaderCols)\r\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildColTotals(tr, colHeaderCols)\r\n            buildGrandTotal(tbody, tr)\r\n            result.setAttribute(\"data-numrows\", rowKeys.length)\r\n            result.setAttribute(\"data-numcols\", colKeys.length)\r\n            if opts.collapseRowsAt\r\n                collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt)\r\n            return result\r\n\r\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\r\n        \r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap()\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\")\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\")\r\n","(function() {\n  var callWithJQuery,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalPivotData, SubtotalRenderer;\n    SubtotalPivotData = (function(superClass) {\n      var processKey;\n\n      extend(SubtotalPivotData, superClass);\n\n      function SubtotalPivotData(input, opts) {\n        SubtotalPivotData.__super__.constructor.call(this, input, opts);\n      }\n\n      processKey = function(record, totals, keys, attrs, f) {\n        var addKey, attr, flatKey, k, key, len, ref;\n        key = [];\n        addKey = false;\n        for (k = 0, len = attrs.length; k < len; k++) {\n          attr = attrs[k];\n          key.push((ref = record[attr]) != null ? ref : \"null\");\n          flatKey = key.join(String.fromCharCode(0));\n          if (!totals[flatKey]) {\n            totals[flatKey] = f(key.slice());\n            addKey = true;\n          }\n          totals[flatKey].push(record);\n        }\n        if (addKey) {\n          keys.push(key);\n        }\n        return key;\n      };\n\n      SubtotalPivotData.prototype.processRecord = function(record) {\n        var colKey, fColKey, fRowKey, flatColKey, flatRowKey, i, j, k, m, n, ref, results, rowKey;\n        rowKey = [];\n        colKey = [];\n        this.allTotal.push(record);\n        rowKey = processKey(record, this.rowTotals, this.rowKeys, this.rowAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, key, []);\n          };\n        })(this));\n        colKey = processKey(record, this.colTotals, this.colKeys, this.colAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, [], key);\n          };\n        })(this));\n        m = rowKey.length - 1;\n        n = colKey.length - 1;\n        if (m < 0 || n < 0) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = m; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          fRowKey = rowKey.slice(0, i + 1);\n          flatRowKey = fRowKey.join(String.fromCharCode(0));\n          if (!this.tree[flatRowKey]) {\n            this.tree[flatRowKey] = {};\n          }\n          results.push((function() {\n            var l, ref1, results1;\n            results1 = [];\n            for (j = l = 0, ref1 = n; 0 <= ref1 ? l <= ref1 : l >= ref1; j = 0 <= ref1 ? ++l : --l) {\n              fColKey = colKey.slice(0, j + 1);\n              flatColKey = fColKey.join(String.fromCharCode(0));\n              if (!this.tree[flatRowKey][flatColKey]) {\n                this.tree[flatRowKey][flatColKey] = this.aggregator(this, fRowKey, fColKey);\n              }\n              results1.push(this.tree[flatRowKey][flatColKey].push(record));\n            }\n            return results1;\n          }).call(this));\n        }\n        return results;\n      };\n\n      return SubtotalPivotData;\n\n    })($.pivotUtilities.PivotData);\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData;\n    SubtotalRenderer = function(pivotData, opts) {\n      var allTotal, arrowCollapsed, arrowExpanded, buildColHeaderHeaders, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaderHeadersClickEvents, buildRowHeaders, buildRowTotalsHeader, buildValues, colAttrs, colKeys, colTotals, collapseRow, collapseRowsAt, createCell, defaults, expandRow, expandRowsAt, main, processKeys, rowAttrs, rowKeys, rowTotals, toggleRow, toggleRowHeaderHeader, tree;\n      defaults = {\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(defaults, opts);\n      arrowCollapsed = \"\\u25B6\";\n      arrowExpanded = \"\\u25E2\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      createCell = function(cellType, className, textContent, attributes) {\n        var attr, th, val;\n        th = document.createElement(cellType);\n        if (className) {\n          th.className = className;\n        }\n        if (textContent !== null && textContent !== void 0) {\n          th.textContent = textContent;\n        }\n        if (attributes) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, flatKey, header, headers, lastCol, lastRow, node, nodePos, r, rMark, repeats, th, x;\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        headers = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        flatKey = keysArr[0][0];\n        nodePos = 0;\n        node = {\n          \"node\": nodePos,\n          \"row\": 0,\n          \"col\": 0,\n          \"th\": th,\n          \"parent\": null,\n          \"children\": [],\n          \"descendants\": lastCol,\n          \"leaves\": 1,\n          \"flatKey\": flatKey\n        };\n        headers[0] = node;\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c];\n          ++nodePos;\n          node = {\n            \"node\": nodePos,\n            \"row\": 0,\n            \"col\": c,\n            \"th\": th,\n            \"parent\": rMark[c - 1],\n            \"children\": [],\n            \"descendants\": lastCol - c,\n            \"leaves\": 1,\n            \"flatKey\": flatKey\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          flatKey = \"\";\n          c = 0;\n          while (c <= lastCol) {\n            flatKey = c === 0 ? keysArr[r][c] : flatKey + String.fromCharCode(0) + keysArr[r][c];\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            header = {\n              \"node\": nodePos,\n              \"row\": r,\n              \"col\": c,\n              \"th\": th,\n              \"parent\": null,\n              \"children\": [],\n              \"descendants\": 0,\n              \"leaves\": 1,\n              \"flatKey\": flatKey\n            };\n            if (c === 0) {\n              headers.push(header);\n            } else {\n              header.parent = rMark[c - 1];\n              rMark[c - 1].children.push(header);\n              x = 0;\n              while (x <= c - 1) {\n                rMark[x].descendants = rMark[x].descendants + 1;\n                ++x;\n              }\n            }\n            rMark[c] = header;\n            repeats = false;\n            ++c;\n          }\n          c = 0;\n          while (c <= lastCol) {\n            rMark[c].leaves = rMark[c].leaves + 1;\n            ++c;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeaders = function(thead, colHeaderRowsArr, rowAttrs) {\n        var c, k, ref, results, th, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            \"colspan\": rowAttrs.length,\n            \"rowspan\": colAttrs.length\n          }));\n        }\n        tr.appendChild(createCell(\"th\", \"pvtAxisLabel\", colAttrs[0]));\n        colHeaderRowsArr[0] = tr;\n        thead.appendChild(tr);\n        results = [];\n        for (c = k = 1, ref = colAttrs.length; 1 <= ref ? k <= ref : k >= ref; c = 1 <= ref ? ++k : --k) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          th = createCell(\"th\", \"pvtAxisLabel\", colAttrs[c]);\n          tr.appendChild(th);\n          colHeaderRowsArr[c] = tr;\n          thead.appendChild(tr);\n          results.push(++c);\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderRowsArr, colHeaderColsArr, colHeader, parent, colAttrs, rowAttrs) {\n        var h, k, len, ref, rowspan, th, tr;\n        ref = colHeader.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          buildColHeaders(colHeaderRowsArr, colHeaderColsArr, h, colHeader, colAttrs, rowAttrs);\n        }\n        tr = colHeaderRowsArr[colHeader.col];\n        th = colHeader.th;\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants);\n        }\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          rowspan = colAttrs.length - colHeader.col + (rowAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtColLabel\", '', {\n            \"rowspan\": rowspan\n          });\n          tr.appendChild(th);\n        }\n        colHeader.tr = tr;\n        return colHeaderColsArr.push(colHeader);\n      };\n      buildRowHeaderHeaders = function(thead, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var i, rowAttr, textContent, th, tr;\n        tr = document.createElement(\"tr\");\n        rowHeaderHeaders.th = [];\n        for (i in rowAttrs) {\n          rowAttr = rowAttrs[i];\n          textContent = rowAttr;\n          if (i < rowAttrs.length - 1) {\n            textContent = \" \" + arrowExpanded + \" \" + rowAttr;\n          }\n          th = createCell(\"th\", \"pvtAxisLabel\", textContent);\n          th.setAttribute(\"data-rowAttr\", rowAttr);\n          tr.appendChild(th);\n          rowHeaderHeaders.th.push({\n            \"th\": th,\n            \"clickStatus\": \"expanded\"\n          });\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        thead.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowHeaderHeadersClickEvents = function(rowHeaderHeaders, rowHeaderRows, rowAttrs) {\n        var i, k, ref, results, rowAttr, th;\n        results = [];\n        for (i = k = 0, ref = rowAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < rowAttrs.length - 1)) {\n            continue;\n          }\n          th = rowHeaderHeaders.th[i];\n          rowAttr = rowAttrs[i];\n          results.push(th.th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRowHeaderHeader(rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\"));\n          });\n        }\n        return results;\n      };\n      buildRowTotalsHeader = function(tr, colAttrs, rowAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"rowspan\": rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(tbody, rowHeaderRowsArr, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, k, len, ref, results, th, tr;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        th.setAttribute(\"data-rowHeader\", th.textContent);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRowsArr.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderRowsArr, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel\", '', {\n            \"colspan\": colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = \"expanded\";\n        rowHeader.tr = tr;\n        rowHeaderRowsArr.push(rowHeader);\n        tbody.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          results.push(buildRowHeaders(tbody, rowHeaderRowsArr, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRowsArr, colHeaderColsArr) {\n        var aggregator, colHeader, flatColKey, flatRowKey, k, l, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (k = 0, len = rowHeaderRowsArr.length; k < len; k++) {\n          rowHeader = rowHeaderRowsArr[k];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (l = 0, len1 = colHeaderColsArr.length; l < len1; l++) {\n            colHeader = colHeaderColsArr[l];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            style = colHeader.children.length !== 0 ? style + \" pvtSubtotal\" : style;\n            style = style + \" row\" + rowHeader.row + \" col\" + colHeader.col;\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            });\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          td = createCell(\"td\", \"pvtTotal rowTotal\", totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"colspan\": colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderColsArr) {\n        var h, k, len, results, td, totalAggregator, val;\n        results = [];\n        for (k = 0, len = colHeaderColsArr.length; k < len; k++) {\n          h = colHeaderColsArr[k];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          td = createCell(\"td\", \"pvtTotal colTotal\", totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        });\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      collapseRow = function(rowHeaderRows, r) {\n        var d, h, i, k, p, ref, rowspan, str;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            str = d.th.textContent;\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\")) - rowspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          str = h.th.textContent;\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"rowspan\", 1);\n        return h.tr.style.display = \"\";\n      };\n      expandRow = function(rowHeaderRows, r) {\n        var c, d, h, i, k, l, len, p, ref, ref1, results, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        rowspan = 0;\n        h = rowHeaderRows[r];\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.descendants !== 0) {\n            d.th.textContent = \" \" + arrowCollapsed + \" \" + d.th.getAttribute(\"data-rowHeader\");\n          }\n          d.clickStatus = \"collapsed\";\n          d.th.setAttribute(\"rowspan\", 1);\n          if (d.tr.style.display !== \"none\") {\n            --rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        ref1 = h.children;\n        for (l = 0, len = ref1.length; l < len; l++) {\n          c = ref1[l];\n          if (c.tr.style.display === \"none\") {\n            ++rowspan;\n            c.tr.style.display = \"\";\n          }\n        }\n        h.th.setAttribute(\"rowspan\", h.children.length + 1);\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = \"expanded\";\n        h.tr.style.display = \"\";\n        p = h.parent;\n        results = [];\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          results.push(p = p.parent);\n        }\n        return results;\n      };\n      toggleRow = function(rowHeaderRows, r) {\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === \"collapsed\") {\n          return expandRow(rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderRows, r);\n        }\n      };\n      collapseRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, nAttrs, nRows, results, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = rowAttrs.length - 1;\n        while (i < nAttrs) {\n          th = rowHeaderHeaders.th[i];\n          th.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i];\n          th.clickStatus = \"collapsed\";\n          ++i;\n        }\n        i = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (i < nRows) {\n          h = rowHeaderRows[i];\n          if (h.col === idx) {\n            collapseRow(rowHeaderRows, h.node);\n            results.push(i = i + h.descendants + 1);\n          } else {\n            results.push(++i);\n          }\n        }\n        return results;\n      };\n      expandRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, j, k, nRows, ref, results, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          th = rowHeaderHeaders.th[i];\n          th.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i];\n          th.clickStatus = \"expanded\";\n          j = 0;\n          nRows = rowHeaderRows.length;\n          results.push((function() {\n            var results1;\n            results1 = [];\n            while (j < nRows) {\n              h = rowHeaderRows[j];\n              if (h.col === i) {\n                expandRow(rowHeaderRows, h.node);\n                results1.push(j = j + h.descendants + 1);\n              } else {\n                results1.push(++j);\n              }\n            }\n            return results1;\n          })());\n        }\n        return results;\n      };\n      toggleRowHeaderHeader = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var idx, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        th = rowHeaderHeaders.th[idx];\n        if (th.clickStatus === \"collapsed\") {\n          return expandRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        } else {\n          return collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        }\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderRows, colHeaders, h, k, l, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, sTime, tbody, thead, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderRows = [];\n        colHeaderCols = [];\n        if (rowAttrs.length !== 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length !== 0) {\n          sTime = Date.now();\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        thead = document.createElement(\"thead\");\n        result.appendChild(thead);\n        if (colAttrs.length !== 0) {\n          buildColHeaderHeaders(thead, colHeaderRows, rowAttrs);\n          for (k = 0, len = colHeaders.length; k < len; k++) {\n            h = colHeaders[k];\n            buildColHeaders(colHeaderRows, colHeaderCols, h, null, colAttrs, rowAttrs);\n          }\n        }\n        if (rowAttrs.length !== 0) {\n          buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, colAttrs, rowAttrs);\n          }\n        }\n        if (colAttrs.length !== 0) {\n          sTime = Date.now();\n          buildRowTotalsHeader(colHeaderRows[0], colAttrs, rowAttrs);\n        }\n        tbody = document.createElement(\"tbody\");\n        result.appendChild(tbody);\n        if (rowAttrs.length !== 0) {\n          for (l = 0, len1 = rowHeaders.length; l < len1; l++) {\n            h = rowHeaders[l];\n            buildRowHeaders(tbody, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n          buildRowHeaderHeadersClickEvents(rowHeaderHeaders, rowHeaderRows, rowAttrs);\n        }\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length !== 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(tbody, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        if (opts.collapseRowsAt) {\n          collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap();\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\");\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\");\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal.js.map\n"],"sourceRoot":"/source/"}