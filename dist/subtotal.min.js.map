{"version":3,"sources":["/source/subtotal.coffee","subtotal.min.js"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","superClass","input","opts","processKey","record","totals","keys","attrs","f","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","l","ref1","results1","pivotUtilities","PivotData","pivotData","addClass","arrowCollapsed","arrowExpanded","buildColHeaderHeader","buildColHeaderHeaders","buildColHeaderHeadersClickEvents","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaderHeadersClickEvents","buildRowHeaders","buildRowTotalsHeader","buildValues","classCollapsed","classExpanded","collapseCol","collapseColsAt","collapseRow","collapseRowsAt","createCell","defaults","expandChildCol","expandChildRow","expandCol","expandColsAt","expandRow","expandRowsAt","hasClass","main","processKeys","removeClass","replaceClass","setColVisibility","toggleCol","toggleColHeaderHeader","toggleRow","toggleRowHeaderHeader","localeStrings","getRowKeys","getColKeys","element","className","regExp","RegExp","match","replace","replaceClassName","byClassName","cellType","textContent","attributes","th","val","document","createElement","setAttribute","keysArr","c","header","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","row","col","children","descendants","leaves","thead","colHeaderHeaders","tr","colAttr","appendChild","clickStatus","expandedCount","nHeaders","colspan","rowspan","colHeaderCols","onclick","event","window","target","getAttribute","colHeader","h","hh","style","parseInt","sTh","rowHeaderHeaders","rowAttr","rowHeaderRows","tbody","rowHeader","len1","td","totalAggregator","value","format","data-value","data-row","data-col","data-for","result","visibility","display","closest","find","css","not","colHeaderHeader","d","p","ref2","ch","gch","colSpan","rowHeaderHeader","rowSpan","scrollIntoView","idx","nAttrs","nCols","indexOf","nRows","colHeaders","rowHeaders","setTimeout","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\r\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\r\n        pivotModule require(\"jquery\")\r\n    else if typeof define is \"function\" and define.amd # AMD\r\n        define [\"jquery\"], pivotModule\r\n    # Plain browser env\r\n    else\r\n        pivotModule jQuery\r\n\r\ncallWithJQuery ($) ->\r\n\r\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\r\n        constructor: (input, opts) ->\r\n            super(input, opts)\r\n\r\n        processKey = (record, totals, keys, attrs, f) ->\r\n            key = []\r\n            addKey = false\r\n            for attr in attrs\r\n                key.push record[attr] ? \"null\"\r\n                flatKey = key.join(String.fromCharCode(0))\r\n                if not totals[flatKey]\r\n                    totals[flatKey] = f(key.slice())\r\n                    addKey = true\r\n                totals[flatKey].push record\r\n            if addKey\r\n                keys.push key\r\n            return key\r\n\r\n        processRecord: (record) -> #this code is called in a tight loop\r\n            rowKey = []\r\n            colKey = []\r\n\r\n            @allTotal.push record\r\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\r\n                    return @aggregator(this, key, [])\r\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\r\n                    return @aggregator(this, [], key)\r\n            m = rowKey.length-1\r\n            n = colKey.length-1\r\n            if m < 0 or n < 0\r\n                return\r\n            for i in [0..m]\r\n                fRowKey = rowKey.slice(0, i+1)\r\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\r\n                if not @tree[flatRowKey]\r\n                    @tree[flatRowKey] = {}\r\n                for j in [0..n]\r\n                    fColKey = colKey.slice(0, j+1)\r\n                    flatColKey = fColKey.join(String.fromCharCode(0))\r\n                    if not @tree[flatRowKey][flatColKey]\r\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\r\n                    @tree[flatRowKey][flatColKey].push record\r\n\r\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\r\n\r\n    SubtotalRenderer = (pivotData, opts) ->\r\n        defaults =\r\n            localeStrings:\r\n                totals: \"Totals\"\r\n\r\n        opts = $.extend defaults, opts\r\n\r\n        arrowCollapsed = opts.arrowCollapsed ?= \"\\u25B6\"\r\n        arrowExpanded = opts.arrowExpanded ?= \"\\u25E2\"\r\n        classExpanded = \"expanded\" \r\n        classCollapsed = \"collapsed\"\r\n        colAttrs = pivotData.colAttrs\r\n        rowAttrs = pivotData.rowAttrs\r\n        rowKeys = pivotData.getRowKeys()\r\n        colKeys = pivotData.getColKeys()\r\n        tree = pivotData.tree\r\n        rowTotals = pivotData.rowTotals\r\n        colTotals = pivotData.colTotals\r\n        allTotal =pivotData.allTotal\r\n\r\n\t# Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- Begin\r\n        hasClass = (element, className) ->\r\n            regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\")\r\n            element.className.match(regExp)\r\n\r\n        removeClass = (element, className) ->\r\n            regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\")\r\n            element.className = element.className.replace(regExp, '')\r\n\r\n        addClass = (element, className) ->\r\n            if (!hasClass(element, className)) then element.className += (\" \" + className)\r\n\r\n        replaceClass = (element, replaceClassName, byClassName) ->\r\n            removeClass element, replaceClassName\r\n            addClass element, byClassName \r\n\t# Based on http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript -- End \r\n\r\n        createCell = (cellType, className, textContent, attributes) ->\r\n            th = document.createElement(cellType)\r\n            if className then th.className = className\r\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\r\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\r\n            return th\r\n\r\n        processKeys = (keysArr, className) ->\r\n            headers = []\r\n            lastRow = keysArr.length - 1\r\n            lastCol = keysArr[0].length - 1\r\n            rMark = []\r\n            th = createCell(\"th\", className, keysArr[0][0])\r\n            flatKey = keysArr[0][0]\r\n            nodePos = 0\r\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\r\n            headers[0] = node\r\n            rMark[0] = node\r\n            c = 1\r\n            while c <= lastCol\r\n                th = createCell(\"th\", className, keysArr[0][c])\r\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\r\n                ++nodePos\r\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\r\n                rMark[c] = node\r\n                rMark[c-1].children.push(node)\r\n                ++c\r\n            rMark[lastCol].leaves = 0\r\n            r = 1\r\n            while r <= lastRow\r\n                repeats = true\r\n                flatKey = \"\"\r\n                c = 0\r\n                while c <= lastCol\r\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\r\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\r\n                        repeats = true\r\n                        ++c\r\n                        continue\r\n                    th = createCell(\"th\", className, keysArr[r][c])\r\n                    ++nodePos\r\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\r\n                    if c is 0\r\n                        headers.push header\r\n                    else\r\n                        header.parent = rMark[c-1]\r\n                        rMark[c-1].children.push header\r\n                        x = 0\r\n                        while x <= c-1\r\n                            rMark[x].descendants = rMark[x].descendants + 1\r\n                            ++x\r\n                    rMark[c] = header\r\n                    repeats = false\r\n                    ++c\r\n                c = 0\r\n                while c <= lastCol\r\n                    rMark[c].leaves = rMark[c].leaves + 1\r\n                    ++c\r\n                rMark[lastCol].leaves = 0\r\n                ++r\r\n            return headers\r\n\r\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\r\n            colAttr = colAttrs[col]\r\n            # th = createCell(\"th\", \"pvtAxisLabel\", colAttr)\r\n            textContent = colAttr\r\n            className = \"pvtAxisLabel\"\r\n            if col < colAttrs.length-1\r\n                className += \" expanded\"\r\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\r\n            th = createCell(\"th\", className, textContent)\r\n            th.setAttribute(\"data-colAttr\", colAttr)\r\n            tr.appendChild th\r\n            colHeaderHeaders.push({\"tr\": tr, \"th\": th, \"clickStatus\": classExpanded, \"expandedCount\": 0, \"nHeaders\": 0})\r\n            thead.appendChild tr\r\n\r\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            if rowAttrs.length != 0\r\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\r\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\r\n            for c in [1..colAttrs.length] when c < colAttrs.length\r\n                tr = document.createElement(\"tr\")\r\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\r\n\r\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\r\n            for i in [0..colAttrs.length-1] when i < colAttrs.length-1\r\n                th = colHeaderHeaders[i].th\r\n                colAttr = colAttrs[i]\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\")\r\n\r\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\r\n            # DF Recurse\r\n            for h in colHeader.children\r\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs)\r\n            # Process\r\n            hh = colHeaderHeaders[colHeader.col]\r\n            ++hh.expandedCount\r\n            ++hh.nHeaders\r\n            tr = hh.tr\r\n            th = colHeader.th\r\n            th.setAttribute(\"data-colHeader\", th.textContent)\r\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\r\n                th.setAttribute(\"rowspan\", 2)\r\n            if colHeader.children.length !=0\r\n                th.setAttribute(\"colspan\", colHeader.descendants+1)\r\n            th.setAttribute(\"data-node\", colHeaderCols.length)\r\n            tr.appendChild(th)\r\n            if colHeader.children.length !=0\r\n                addClass th, classExpanded\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")))\r\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\r\n                style = \"pvtColLabel col\" + colHeader.row\r\n                th = createCell(\"th\", style, '', {\"rowspan\": rowspan})\r\n                colHeader.children[0].tr.appendChild(th)\r\n                colHeader.sTh = th\r\n            colHeader.clickStatus = classExpanded\r\n            colHeader.tr = tr\r\n            colHeaderCols.push(colHeader)\r\n\r\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            rowHeaderHeaders.hh = []\r\n            for own i, rowAttr of rowAttrs\r\n                textContent = rowAttr\r\n                className = \"pvtAxisLabel\"\r\n                if i < rowAttrs.length-1\r\n                    className += \" expanded\"\r\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\r\n                th = createCell(\"th\", className, textContent)\r\n                th.setAttribute(\"data-rowAttr\", rowAttr)\r\n                tr.appendChild th\r\n                rowHeaderHeaders.hh.push({\"th\": th, \"clickStatus\": classExpanded, \"expandedCount\": 0, \"nHeaders\": 0})\r\n            if colAttrs.length != 0\r\n                th = createCell(\"th\")\r\n                tr.appendChild th\r\n            thead.appendChild tr\r\n            rowHeaderHeaders.tr = tr\r\n\r\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\r\n            for i in [0..rowAttrs.length-1] when i < rowAttrs.length-1\r\n                th = rowHeaderHeaders.hh[i]\r\n                rowAttr = rowAttrs[i]\r\n                th.th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\")\r\n\r\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\r\n            rowspan = 1\r\n            if colAttrs.length != 0\r\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\r\n            tr.appendChild th\r\n\r\n        buildRowHeaders = (tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\r\n            hh = rowHeaderHeaders.hh[rowHeader.col]\r\n            ++hh.expandedCount\r\n            ++hh.nHeaders\r\n            tr = document.createElement(\"tr\")\r\n            th = rowHeader.th\r\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\r\n            th.setAttribute(\"data-rowHeader\", th.textContent)\r\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\r\n                th.setAttribute(\"colspan\", 2)\r\n            th.setAttribute(\"data-node\", rowHeaderRows.length)\r\n            tr.appendChild(th)\r\n            if rowHeader.children.length != 0\r\n                addClass th, classExpanded\r\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\r\n                th.onclick = (event) ->\r\n                    event = event || window.event\r\n                    toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")))\r\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\r\n                th = createCell(\"th\", \"pvtRowLabel pvtRowSubtotal\", '', {\"colspan\": colspan})\r\n                tr.appendChild(th)\r\n            rowHeader.clickStatus = classExpanded\r\n            rowHeader.tr = tr\r\n            rowHeaderRows.push(rowHeader)\r\n            tbody.appendChild(tr)\r\n            for h in rowHeader.children\r\n                buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs)\r\n\r\n        buildValues = (rowHeaderRows, colHeaderCols) ->\r\n            for rowHeader in rowHeaderRows\r\n                tr = rowHeader.tr\r\n                flatRowKey = rowHeader.flatKey\r\n                for colHeader in colHeaderCols\r\n                    flatColKey = colHeader.flatKey\r\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\r\n                    val = aggregator.value()\r\n                    style = \"pvtVal\"\r\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtColSubtotal\" else style\r\n                    style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\r\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.row+\" rowcol\"+rowHeader.col+\" colcol\"+colHeader.col\r\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\r\n                    tr.appendChild td\r\n                # buildRowTotal\r\n                totalAggregator = rowTotals[flatRowKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtTotal rowTotal\"\r\n                style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\r\n                style = style + \" row\"+rowHeader.row+\" rowcol\"+rowHeader.col\r\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\r\n                tr.appendChild td\r\n\r\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\r\n            tr = document.createElement(\"tr\")\r\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\r\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\r\n            tr.appendChild(th)\r\n            return tr\r\n\r\n        buildColTotals = (tr, colHeaderCols) ->\r\n            for h in colHeaderCols\r\n                totalAggregator = colTotals[h.flatKey]\r\n                val = totalAggregator.value()\r\n                style = \"pvtVal pvtTotal colTotal\"\r\n                style = if h.children.length then style + \" pvtColSubtotal\" else style\r\n                style = style + \" col\"+h.row+\" colcol\"+h.col\r\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\r\n                tr.appendChild td\r\n\r\n        buildGrandTotal = (result, tr) ->\r\n            totalAggregator = allTotal\r\n            val = totalAggregator.value()\r\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\r\n            tr.appendChild td\r\n            result.appendChild tr\r\n\r\n        setColVisibility = (visibility, h) ->\r\n            h.th.style.display = visibility\r\n            if h.children.length\r\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility)\r\n            else\r\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility)\r\n            if h.sTh\r\n                h.sTh.style.display = visibility\r\n\r\n        collapseCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is classCollapsed\r\n                return\r\n            colspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = colHeaderCols[c-i]\r\n                if d.th.style.display isnt \"none\"\r\n                    ++colspan\r\n                    setColVisibility \"none\", d\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\"))-colspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.clickStatus = classCollapsed\r\n            h.th.setAttribute(\"colspan\", 1)\r\n            h.th.style.display = \"\"\r\n            colHeaderHeader = colHeaderHeaders[h.col]\r\n            colHeaderHeader.expandedCount--\r\n            if colHeaderHeader.expandedCount == 0\r\n                for i in [h.col..colHeaderHeaders.length-2]\r\n                    colHeaderHeader = colHeaderHeaders[i]\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\")\r\n                    colHeaderHeader.clickStatus = classCollapsed\r\n\r\n        expandChildCol = (ch) ->\r\n            if ch.th.style.display is \"none\"\r\n                setColVisibility \"\", ch\r\n            if ch.clickStatus isnt classCollapsed\r\n                for gch in ch.children\r\n                    expandChildCol gch\r\n\r\n        expandCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is classExpanded\r\n                return\r\n            colspan = 0\r\n            for ch in h.children\r\n                colspan = colspan + ch.th.colSpan\r\n                if ch.th.style.display is \"none\"\r\n                    setColVisibility \"\", ch\r\n                expandChildCol ch\r\n            if h.descendants != 0\r\n                replaceClass h.th, classCollapsed, classExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\")\r\n            h.th.setAttribute(\"colspan\", colspan+1)\r\n            h.clickStatus = classExpanded\r\n            h.th.style.display = \"\"\r\n            if h.sTh\r\n                h.sTh.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"colspan\", (colspan + parseInt(p.th.getAttribute(\"colspan\"))))\r\n                p = p.parent\r\n            hh = colHeaderHeaders[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount == hh.nHeaders\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\")\r\n                hh.clickStatus = classExpanded\r\n\r\n        collapseRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            if h.clickStatus is classCollapsed\r\n                return\r\n            rowspan = 0\r\n            for i in [1..h.descendants] when h.descendants != 0\r\n                d = rowHeaderRows[r+i]\r\n                if d.tr.style.display isnt \"none\"\r\n                    ++rowspan\r\n                    d.tr.style.display = \"none\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\r\n                p = p.parent\r\n            if h.descendants != 0\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.clickStatus = classCollapsed\r\n            h.th.setAttribute(\"rowspan\", 1)\r\n            h.tr.style.display = \"\"\r\n            rowHeaderHeader = rowHeaderHeaders.hh[h.col]\r\n            rowHeaderHeader.expandedCount--\r\n            if rowHeaderHeader.expandedCount == 0\r\n                for j in [h.col..rowHeaderHeaders.hh.length-2]\r\n                    rowHeaderHeader = rowHeaderHeaders.hh[j]\r\n                    replaceClass rowHeaderHeader.th, classExpanded, classCollapsed\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\")\r\n                    rowHeaderHeader.clickStatus = classCollapsed\r\n\r\n        expandChildRow = (ch) ->\r\n            if ch.tr.style.display is \"none\"\r\n                ch.tr.style.display = \"\"\r\n            if ch.clickStatus isnt classCollapsed\r\n                for gch in ch.children\r\n                    expandChildRow gch\r\n\r\n        expandRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            h = rowHeaderRows[r]\r\n            if h.clickStatus is classExpanded\r\n                return\r\n            rowspan = 0\r\n            for ch in h.children\r\n                rowspan = rowspan + ch.th.rowSpan\r\n                if ch.tr.style.display is \"none\"\r\n                    ch.tr.style.display = \"\"\r\n                expandChildRow ch\r\n            if h.descendants != 0\r\n                replaceClass h.th, classCollapsed, classExpanded\r\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\")\r\n            h.th.setAttribute(\"rowspan\", rowspan+1)\r\n            h.clickStatus = classExpanded\r\n            h.tr.style.display = \"\"\r\n            p = h.parent\r\n            while p isnt null\r\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\r\n                p = p.parent\r\n            hh = rowHeaderHeaders.hh[h.col]\r\n            ++hh.expandedCount\r\n            if hh.expandedCount == hh.nHeaders\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\")\r\n                hh.clickStatus = classExpanded\r\n\r\n        toggleCol = (colHeaderHeaders, colHeaderCols, c) ->\r\n            if not colHeaderCols[c]\r\n                return\r\n            h = colHeaderCols[c]\r\n            if h.clickStatus is classCollapsed\r\n                expandCol(colHeaderHeaders, colHeaderCols, c)\r\n            else\r\n                collapseCol(colHeaderHeaders, colHeaderCols, c)\r\n            h.th.scrollIntoView\r\n\r\n        toggleRow = (rowHeaderHeaders, rowHeaderRows, r) ->\r\n            if not rowHeaderRows[r]\r\n                return\r\n            if rowHeaderRows[r].clickStatus is classCollapsed\r\n                expandRow(rowHeaderHeaders, rowHeaderRows, r)\r\n            else\r\n                collapseRow(rowHeaderHeaders, rowHeaderRows, r)\r\n\r\n        collapseColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            if typeof colAttr is 'string'\r\n                idx = colAttrs.indexOf(colAttr)\r\n            else\r\n                idx = colAttr\r\n            if idx < 0 or idx == colAttrs.length-1\r\n                return\r\n            i = idx\r\n            nAttrs = colAttrs.length-1\r\n            while i < nAttrs\r\n                hh = colHeaderHeaders[i]\r\n                replaceClass hh.th, classExpanded, classCollapsed\r\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i]\r\n                hh.clickStatus = classCollapsed\r\n                ++i\r\n            i = 0\r\n            nCols = colHeaderCols.length\r\n            while i < nCols\r\n                h = colHeaderCols[i]\r\n                if h.col is idx and h.clickStatus isnt classCollapsed and h.th.style.display isnt \"none\"\r\n                    collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")))\r\n                ++i\r\n\r\n        expandColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            if typeof colAttr is 'string'\r\n                idx = colAttrs.indexOf(colAttr)\r\n            else\r\n                idx = colAttr\r\n            if idx < 0 or idx == colAttrs.length-1\r\n                return\r\n            for i in [0..idx]\r\n                hh = colHeaderHeaders[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i]\r\n                hh.clickStatus = classExpanded\r\n                j = 0\r\n                nCols = colHeaderCols.length\r\n                while j < nCols\r\n                    h = colHeaderCols[j]\r\n                    if h.col == i\r\n                        expandCol(colHeaderHeaders, colHeaderCols, j)\r\n                    ++j\r\n            ++idx\r\n            while idx < colAttrs.length-1\r\n                colHeaderHeader = colHeaderHeaders[idx]\r\n                if colHeaderHeader.expandedCount == 0\r\n                    replaceClass colHeaderHeader.th, classExpanded, classCollapsed\r\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx]\r\n                    colHeaderHeader.clickStatus = classCollapsed\r\n                else if colHeaderHeader.expandedCount == colHeaderHeader.nHeaders\r\n                    replaceClass colHeaderHeader.th, classCollapsed, classExpanded\r\n                    colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx]\r\n                    colHeaderHeader.clickStatus = classExpanded\r\n                ++idx\r\n\r\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            if typeof rowAttr is 'string'\r\n                idx = rowAttrs.indexOf(rowAttr)\r\n            else\r\n                idx = rowAttr\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n            i = idx\r\n            nAttrs = rowAttrs.length-1\r\n            while i < nAttrs\r\n                h = rowHeaderHeaders.hh[i]\r\n                replaceClass h.th, classExpanded, classCollapsed\r\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\r\n                h.clickStatus = classCollapsed\r\n                ++i\r\n            j = 0\r\n            nRows = rowHeaderRows.length\r\n            while j < nRows\r\n                h = rowHeaderRows[j]\r\n                if h.col is idx and h.clickStatus isnt classCollapsed and h.tr.style.display isnt \"none\"\r\n                    collapseRow(rowHeaderHeaders, rowHeaderRows, j)\r\n                    j = j + h.descendants + 1\r\n                else\r\n                    ++j\r\n\r\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            if typeof rowAttr is 'string'\r\n                idx = rowAttrs.indexOf(rowAttr)\r\n            else\r\n                idx = rowAttr\r\n            if idx < 0 or idx == rowAttrs.length-1\r\n                return\r\n            for i in [0..idx]\r\n                hh = rowHeaderHeaders.hh[i]\r\n                replaceClass hh.th, classCollapsed, classExpanded\r\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\r\n                hh.clickStatus = classExpanded\r\n                j = 0\r\n                nRows = rowHeaderRows.length\r\n                while j < nRows\r\n                    h = rowHeaderRows[j]\r\n                    if h.col == i\r\n                        expandRow(rowHeaderHeaders, rowHeaderRows, j)\r\n                        j = j + h.descendants + 1\r\n                    else\r\n                        ++j\r\n            ++idx\r\n            while idx < rowAttrs.length-1\r\n                rowHeaderHeader = rowHeaderHeaders.hh[idx]\r\n                if rowHeaderHeader.expandedCount == 0\r\n                    replaceClass rowHeaderHeader.th, classExpanded, classCollapsed\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx]\r\n                    rowHeaderHeader.clickStatus = classCollapsed\r\n                else if rowHeaderHeader.expandedCount == rowHeaderHeader.nHeaders\r\n                    replaceClass rowHeaderHeader.th, classCollapsed, classExpanded\r\n                    rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx]\r\n                    rowHeaderHeader.clickStatus = classExpanded\r\n                ++idx\r\n\r\n        toggleColHeaderHeader = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\r\n            idx = colAttrs.indexOf(colAttr)\r\n            h = colHeaderHeaders[idx]\r\n            if h.clickStatus is classCollapsed\r\n                expandColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n            else\r\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\r\n\r\n\r\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\r\n            idx = rowAttrs.indexOf(rowAttr)\r\n            th = rowHeaderHeaders.hh[idx]\r\n            if th.clickStatus is classCollapsed\r\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n            else\r\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\r\n\r\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\r\n            rowHeaders = []\r\n            colHeaders = []\r\n            rowHeaderHeaders = {}\r\n            rowHeaderRows = []\r\n            colHeaderHeaders = []\r\n            colHeaderCols = []\r\n\r\n            if rowAttrs.length != 0 and rowKeys.length != 0\r\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\r\n            if colAttrs.length != 0 and colKeys.length != 0\r\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\r\n            result = document.createElement(\"table\")\r\n            result.className = \"pvtTable\"\r\n            result.style.display = \"none\"\r\n            thead = document.createElement(\"thead\")\r\n            result.appendChild thead\r\n            if colAttrs.length != 0\r\n                buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs)\r\n                for h in colHeaders\r\n                   buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\r\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\r\n            if rowAttrs.length != 0\r\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\r\n                if colAttrs.length == 0\r\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs)\r\n            tbody = document.createElement(\"tbody\")\r\n            result.appendChild tbody\r\n            if rowAttrs.length != 0\r\n                for h in rowHeaders\r\n                    buildRowHeaders tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs\r\n                buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\r\n            buildValues(rowHeaderRows, colHeaderCols)\r\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\r\n            if colAttrs.length != 0\r\n                buildColTotals(tr, colHeaderCols)\r\n            buildGrandTotal(tbody, tr)\r\n            result.setAttribute(\"data-numrows\", rowKeys.length)\r\n            result.setAttribute(\"data-numcols\", colKeys.length)\r\n            if not opts.collapseRowsAt? and not opts.collapseColsAt?\r\n                result.style.display = \"\"\r\n            if opts.collapseRowsAt?\r\n                setTimeout (->\r\n                    collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt\r\n                    if not opts.collapseColsAt\r\n                        result.style.display = \"\"\r\n                ), 0\r\n            if opts.collapseColsAt?\r\n                setTimeout (->\r\n                    collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt\r\n                    result.style.display = \"\"\r\n                ), 0\r\n            return result\r\n\r\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\r\n\r\n    $.pivotUtilities.subtotal_renderers =\r\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\r\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\r\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts)\r\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts)\r\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts)\r\n","(function() {\n  var callWithJQuery,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalPivotData, SubtotalRenderer;\n    SubtotalPivotData = (function(superClass) {\n      var processKey;\n\n      extend(SubtotalPivotData, superClass);\n\n      function SubtotalPivotData(input, opts) {\n        SubtotalPivotData.__super__.constructor.call(this, input, opts);\n      }\n\n      processKey = function(record, totals, keys, attrs, f) {\n        var addKey, attr, flatKey, k, key, len, ref;\n        key = [];\n        addKey = false;\n        for (k = 0, len = attrs.length; k < len; k++) {\n          attr = attrs[k];\n          key.push((ref = record[attr]) != null ? ref : \"null\");\n          flatKey = key.join(String.fromCharCode(0));\n          if (!totals[flatKey]) {\n            totals[flatKey] = f(key.slice());\n            addKey = true;\n          }\n          totals[flatKey].push(record);\n        }\n        if (addKey) {\n          keys.push(key);\n        }\n        return key;\n      };\n\n      SubtotalPivotData.prototype.processRecord = function(record) {\n        var colKey, fColKey, fRowKey, flatColKey, flatRowKey, i, j, k, m, n, ref, results, rowKey;\n        rowKey = [];\n        colKey = [];\n        this.allTotal.push(record);\n        rowKey = processKey(record, this.rowTotals, this.rowKeys, this.rowAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, key, []);\n          };\n        })(this));\n        colKey = processKey(record, this.colTotals, this.colKeys, this.colAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, [], key);\n          };\n        })(this));\n        m = rowKey.length - 1;\n        n = colKey.length - 1;\n        if (m < 0 || n < 0) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = m; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          fRowKey = rowKey.slice(0, i + 1);\n          flatRowKey = fRowKey.join(String.fromCharCode(0));\n          if (!this.tree[flatRowKey]) {\n            this.tree[flatRowKey] = {};\n          }\n          results.push((function() {\n            var l, ref1, results1;\n            results1 = [];\n            for (j = l = 0, ref1 = n; 0 <= ref1 ? l <= ref1 : l >= ref1; j = 0 <= ref1 ? ++l : --l) {\n              fColKey = colKey.slice(0, j + 1);\n              flatColKey = fColKey.join(String.fromCharCode(0));\n              if (!this.tree[flatRowKey][flatColKey]) {\n                this.tree[flatRowKey][flatColKey] = this.aggregator(this, fRowKey, fColKey);\n              }\n              results1.push(this.tree[flatRowKey][flatColKey].push(record));\n            }\n            return results1;\n          }).call(this));\n        }\n        return results;\n      };\n\n      return SubtotalPivotData;\n\n    })($.pivotUtilities.PivotData);\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData;\n    SubtotalRenderer = function(pivotData, opts) {\n      var addClass, allTotal, arrowCollapsed, arrowExpanded, buildColHeaderHeader, buildColHeaderHeaders, buildColHeaderHeadersClickEvents, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaderHeadersClickEvents, buildRowHeaders, buildRowTotalsHeader, buildValues, classCollapsed, classExpanded, colAttrs, colKeys, colTotals, collapseCol, collapseColsAt, collapseRow, collapseRowsAt, createCell, defaults, expandChildCol, expandChildRow, expandCol, expandColsAt, expandRow, expandRowsAt, hasClass, main, processKeys, removeClass, replaceClass, rowAttrs, rowKeys, rowTotals, setColVisibility, toggleCol, toggleColHeaderHeader, toggleRow, toggleRowHeaderHeader, tree;\n      defaults = {\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(defaults, opts);\n      arrowCollapsed = opts.arrowCollapsed != null ? opts.arrowCollapsed : opts.arrowCollapsed = \"\\u25B6\";\n      arrowExpanded = opts.arrowExpanded != null ? opts.arrowExpanded : opts.arrowExpanded = \"\\u25E2\";\n      classExpanded = \"expanded\";\n      classCollapsed = \"collapsed\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      hasClass = function(element, className) {\n        var regExp;\n        regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\");\n        return element.className.match(regExp);\n      };\n      removeClass = function(element, className) {\n        var regExp;\n        regExp = new RegExp(\"(?:^|\\\\s)\" + className + \"(?!\\\\S)\", \"g\");\n        return element.className = element.className.replace(regExp, '');\n      };\n      addClass = function(element, className) {\n        if (!hasClass(element, className)) {\n          return element.className += \" \" + className;\n        }\n      };\n      replaceClass = function(element, replaceClassName, byClassName) {\n        removeClass(element, replaceClassName);\n        return addClass(element, byClassName);\n      };\n      createCell = function(cellType, className, textContent, attributes) {\n        var attr, th, val;\n        th = document.createElement(cellType);\n        if (className) {\n          th.className = className;\n        }\n        if (textContent !== null && textContent !== void 0) {\n          th.textContent = textContent;\n        }\n        if (attributes) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, flatKey, header, headers, lastCol, lastRow, node, nodePos, r, rMark, repeats, th, x;\n        headers = [];\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        flatKey = keysArr[0][0];\n        nodePos = 0;\n        node = {\n          \"node\": nodePos,\n          \"row\": 0,\n          \"col\": 0,\n          \"th\": th,\n          \"parent\": null,\n          \"children\": [],\n          \"descendants\": lastCol,\n          \"leaves\": 1,\n          \"flatKey\": flatKey\n        };\n        headers[0] = node;\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c];\n          ++nodePos;\n          node = {\n            \"node\": nodePos,\n            \"row\": 0,\n            \"col\": c,\n            \"th\": th,\n            \"parent\": rMark[c - 1],\n            \"children\": [],\n            \"descendants\": lastCol - c,\n            \"leaves\": 1,\n            \"flatKey\": flatKey\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          flatKey = \"\";\n          c = 0;\n          while (c <= lastCol) {\n            flatKey = c === 0 ? keysArr[r][c] : flatKey + String.fromCharCode(0) + keysArr[r][c];\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            header = {\n              \"node\": nodePos,\n              \"row\": r,\n              \"col\": c,\n              \"th\": th,\n              \"parent\": null,\n              \"children\": [],\n              \"descendants\": 0,\n              \"leaves\": 1,\n              \"flatKey\": flatKey\n            };\n            if (c === 0) {\n              headers.push(header);\n            } else {\n              header.parent = rMark[c - 1];\n              rMark[c - 1].children.push(header);\n              x = 0;\n              while (x <= c - 1) {\n                rMark[x].descendants = rMark[x].descendants + 1;\n                ++x;\n              }\n            }\n            rMark[c] = header;\n            repeats = false;\n            ++c;\n          }\n          c = 0;\n          while (c <= lastCol) {\n            rMark[c].leaves = rMark[c].leaves + 1;\n            ++c;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeader = function(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) {\n        var className, colAttr, textContent, th;\n        colAttr = colAttrs[col];\n        textContent = colAttr;\n        className = \"pvtAxisLabel\";\n        if (col < colAttrs.length - 1) {\n          className += \" expanded\";\n          textContent = \" \" + arrowExpanded + \" \" + colAttr;\n        }\n        th = createCell(\"th\", className, textContent);\n        th.setAttribute(\"data-colAttr\", colAttr);\n        tr.appendChild(th);\n        colHeaderHeaders.push({\n          \"tr\": tr,\n          \"th\": th,\n          \"clickStatus\": classExpanded,\n          \"expandedCount\": 0,\n          \"nHeaders\": 0\n        });\n        return thead.appendChild(tr);\n      };\n      buildColHeaderHeaders = function(thead, colHeaderHeaders, rowAttrs, colAttrs) {\n        var c, k, ref, results, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            \"colspan\": rowAttrs.length,\n            \"rowspan\": colAttrs.length\n          }));\n        }\n        buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0);\n        results = [];\n        for (c = k = 1, ref = colAttrs.length; 1 <= ref ? k <= ref : k >= ref; c = 1 <= ref ? ++k : --k) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          results.push(buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c));\n        }\n        return results;\n      };\n      buildColHeaderHeadersClickEvents = function(colHeaderHeaders, colHeaderCols, colAttrs) {\n        var colAttr, i, k, ref, results, th;\n        results = [];\n        for (i = k = 0, ref = colAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < colAttrs.length - 1)) {\n            continue;\n          }\n          th = colHeaderHeaders[i].th;\n          colAttr = colAttrs[i];\n          results.push(th.onclick = function(event) {\n            event = event || window.event;\n            return toggleColHeaderHeader(colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\"));\n          });\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) {\n        var h, hh, k, len, ref, rowspan, style, th, tr;\n        ref = colHeader.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n        }\n        hh = colHeaderHeaders[colHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = hh.tr;\n        th = colHeader.th;\n        th.setAttribute(\"data-colHeader\", th.textContent);\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants + 1);\n        }\n        th.setAttribute(\"data-node\", colHeaderCols.length);\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          addClass(th, classExpanded);\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          rowspan = colAttrs.length - (colHeader.col + 1) + (rowAttrs.length !== 0 ? 1 : 0);\n          style = \"pvtColLabel col\" + colHeader.row;\n          th = createCell(\"th\", style, '', {\n            \"rowspan\": rowspan\n          });\n          colHeader.children[0].tr.appendChild(th);\n          colHeader.sTh = th;\n        }\n        colHeader.clickStatus = classExpanded;\n        colHeader.tr = tr;\n        return colHeaderCols.push(colHeader);\n      };\n      buildRowHeaderHeaders = function(thead, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var className, i, rowAttr, textContent, th, tr;\n        tr = document.createElement(\"tr\");\n        rowHeaderHeaders.hh = [];\n        for (i in rowAttrs) {\n          if (!hasProp.call(rowAttrs, i)) continue;\n          rowAttr = rowAttrs[i];\n          textContent = rowAttr;\n          className = \"pvtAxisLabel\";\n          if (i < rowAttrs.length - 1) {\n            className += \" expanded\";\n            textContent = \" \" + arrowExpanded + \" \" + rowAttr;\n          }\n          th = createCell(\"th\", className, textContent);\n          th.setAttribute(\"data-rowAttr\", rowAttr);\n          tr.appendChild(th);\n          rowHeaderHeaders.hh.push({\n            \"th\": th,\n            \"clickStatus\": classExpanded,\n            \"expandedCount\": 0,\n            \"nHeaders\": 0\n          });\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        thead.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowHeaderHeadersClickEvents = function(rowHeaderHeaders, rowHeaderRows, rowAttrs) {\n        var i, k, ref, results, rowAttr, th;\n        results = [];\n        for (i = k = 0, ref = rowAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < rowAttrs.length - 1)) {\n            continue;\n          }\n          th = rowHeaderHeaders.hh[i];\n          rowAttr = rowAttrs[i];\n          results.push(th.th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRowHeaderHeader(rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\"));\n          });\n        }\n        return results;\n      };\n      buildRowTotalsHeader = function(tr, rowAttrs, colAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"rowspan\": rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, hh, k, len, ref, results, th, tr;\n        hh = rowHeaderHeaders.hh[rowHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        th.setAttribute(\"data-rowHeader\", th.textContent);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRows.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          addClass(th, classExpanded);\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel pvtRowSubtotal\", '', {\n            \"colspan\": colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = classExpanded;\n        rowHeader.tr = tr;\n        rowHeaderRows.push(rowHeader);\n        tbody.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          results.push(buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRows, colHeaderCols) {\n        var aggregator, colHeader, flatColKey, flatRowKey, k, l, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (k = 0, len = rowHeaderRows.length; k < len; k++) {\n          rowHeader = rowHeaderRows[k];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (l = 0, len1 = colHeaderCols.length; l < len1; l++) {\n            colHeader = colHeaderCols[l];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            style = colHeader.children.length !== 0 ? style + \" pvtColSubtotal\" : style;\n            style = rowHeader.children.length !== 0 ? style + \" pvtRowSubtotal\" : style;\n            style = style + \" row\" + rowHeader.row + \" col\" + colHeader.row + \" rowcol\" + rowHeader.col + \" colcol\" + colHeader.col;\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            });\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          style = \"pvtTotal rowTotal\";\n          style = rowHeader.children.length !== 0 ? style + \" pvtRowSubtotal\" : style;\n          style = style + \" row\" + rowHeader.row + \" rowcol\" + rowHeader.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"colspan\": colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderCols) {\n        var h, k, len, results, style, td, totalAggregator, val;\n        results = [];\n        for (k = 0, len = colHeaderCols.length; k < len; k++) {\n          h = colHeaderCols[k];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          style = \"pvtVal pvtTotal colTotal\";\n          style = h.children.length ? style + \" pvtColSubtotal\" : style;\n          style = style + \" col\" + h.row + \" colcol\" + h.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        });\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      setColVisibility = function(visibility, h) {\n        h.th.style.display = visibility;\n        if (h.children.length) {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility);\n        } else {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility);\n        }\n        if (h.sTh) {\n          return h.sTh.style.display = visibility;\n        }\n      };\n      collapseCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var colHeaderHeader, colspan, d, h, i, k, l, p, ref, ref1, ref2, results;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === classCollapsed) {\n          return;\n        }\n        colspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = colHeaderCols[c - i];\n          if (d.th.style.display !== \"none\") {\n            ++colspan;\n            setColVisibility(\"none\", d);\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\")) - colspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classExpanded, classCollapsed);\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.clickStatus = classCollapsed;\n        h.th.setAttribute(\"colspan\", 1);\n        h.th.style.display = \"\";\n        colHeaderHeader = colHeaderHeaders[h.col];\n        colHeaderHeader.expandedCount--;\n        if (colHeaderHeader.expandedCount === 0) {\n          results = [];\n          for (i = l = ref1 = h.col, ref2 = colHeaderHeaders.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; i = ref1 <= ref2 ? ++l : --l) {\n            colHeaderHeader = colHeaderHeaders[i];\n            replaceClass(colHeaderHeader.th, classExpanded, classCollapsed);\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\");\n            results.push(colHeaderHeader.clickStatus = classCollapsed);\n          }\n          return results;\n        }\n      };\n      expandChildCol = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.th.style.display === \"none\") {\n          setColVisibility(\"\", ch);\n        }\n        if (ch.clickStatus !== classCollapsed) {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildCol(gch));\n          }\n          return results;\n        }\n      };\n      expandCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var ch, colspan, h, hh, k, len, p, ref;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === classExpanded) {\n          return;\n        }\n        colspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          colspan = colspan + ch.th.colSpan;\n          if (ch.th.style.display === \"none\") {\n            setColVisibility(\"\", ch);\n          }\n          expandChildCol(ch);\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classCollapsed, classExpanded);\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.th.setAttribute(\"colspan\", colspan + 1);\n        h.clickStatus = classExpanded;\n        h.th.style.display = \"\";\n        if (h.sTh) {\n          h.sTh.style.display = \"\";\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", colspan + parseInt(p.th.getAttribute(\"colspan\")));\n          p = p.parent;\n        }\n        hh = colHeaderHeaders[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\");\n          return hh.clickStatus = classExpanded;\n        }\n      };\n      collapseRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var d, h, i, j, k, l, p, ref, ref1, ref2, results, rowHeaderHeader, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === classCollapsed) {\n          return;\n        }\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\")) - rowspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classExpanded, classCollapsed);\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = classCollapsed;\n        h.th.setAttribute(\"rowspan\", 1);\n        h.tr.style.display = \"\";\n        rowHeaderHeader = rowHeaderHeaders.hh[h.col];\n        rowHeaderHeader.expandedCount--;\n        if (rowHeaderHeader.expandedCount === 0) {\n          results = [];\n          for (j = l = ref1 = h.col, ref2 = rowHeaderHeaders.hh.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; j = ref1 <= ref2 ? ++l : --l) {\n            rowHeaderHeader = rowHeaderHeaders.hh[j];\n            replaceClass(rowHeaderHeader.th, classExpanded, classCollapsed);\n            rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\");\n            results.push(rowHeaderHeader.clickStatus = classCollapsed);\n          }\n          return results;\n        }\n      };\n      expandChildRow = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.tr.style.display === \"none\") {\n          ch.tr.style.display = \"\";\n        }\n        if (ch.clickStatus !== classCollapsed) {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildRow(gch));\n          }\n          return results;\n        }\n      };\n      expandRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var ch, h, hh, k, len, p, ref, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === classExpanded) {\n          return;\n        }\n        rowspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          rowspan = rowspan + ch.th.rowSpan;\n          if (ch.tr.style.display === \"none\") {\n            ch.tr.style.display = \"\";\n          }\n          expandChildRow(ch);\n        }\n        if (h.descendants !== 0) {\n          replaceClass(h.th, classCollapsed, classExpanded);\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.th.setAttribute(\"rowspan\", rowspan + 1);\n        h.clickStatus = classExpanded;\n        h.tr.style.display = \"\";\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          p = p.parent;\n        }\n        hh = rowHeaderHeaders.hh[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\");\n          return hh.clickStatus = classExpanded;\n        }\n      };\n      toggleCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var h;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === classCollapsed) {\n          expandCol(colHeaderHeaders, colHeaderCols, c);\n        } else {\n          collapseCol(colHeaderHeaders, colHeaderCols, c);\n        }\n        return h.th.scrollIntoView;\n      };\n      toggleRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === classCollapsed) {\n          return expandRow(rowHeaderHeaders, rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderHeaders, rowHeaderRows, r);\n        }\n      };\n      collapseColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, hh, i, idx, nAttrs, nCols, results;\n        if (typeof colAttr === 'string') {\n          idx = colAttrs.indexOf(colAttr);\n        } else {\n          idx = colAttr;\n        }\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = colAttrs.length - 1;\n        while (i < nAttrs) {\n          hh = colHeaderHeaders[i];\n          replaceClass(hh.th, classExpanded, classCollapsed);\n          hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i];\n          hh.clickStatus = classCollapsed;\n          ++i;\n        }\n        i = 0;\n        nCols = colHeaderCols.length;\n        results = [];\n        while (i < nCols) {\n          h = colHeaderCols[i];\n          if (h.col === idx && h.clickStatus !== classCollapsed && h.th.style.display !== \"none\") {\n            collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")));\n          }\n          results.push(++i);\n        }\n        return results;\n      };\n      expandColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var colHeaderHeader, h, hh, i, idx, j, k, nCols, ref, results;\n        if (typeof colAttr === 'string') {\n          idx = colAttrs.indexOf(colAttr);\n        } else {\n          idx = colAttr;\n        }\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = colHeaderHeaders[i];\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i];\n          hh.clickStatus = classExpanded;\n          j = 0;\n          nCols = colHeaderCols.length;\n          while (j < nCols) {\n            h = colHeaderCols[j];\n            if (h.col === i) {\n              expandCol(colHeaderHeaders, colHeaderCols, j);\n            }\n            ++j;\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < colAttrs.length - 1) {\n          colHeaderHeader = colHeaderHeaders[idx];\n          if (colHeaderHeader.expandedCount === 0) {\n            replaceClass(colHeaderHeader.th, classExpanded, classCollapsed);\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = classCollapsed;\n          } else if (colHeaderHeader.expandedCount === colHeaderHeader.nHeaders) {\n            replaceClass(colHeaderHeader.th, classCollapsed, classExpanded);\n            colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = classExpanded;\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      collapseRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, j, nAttrs, nRows, results;\n        if (typeof rowAttr === 'string') {\n          idx = rowAttrs.indexOf(rowAttr);\n        } else {\n          idx = rowAttr;\n        }\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = rowAttrs.length - 1;\n        while (i < nAttrs) {\n          h = rowHeaderHeaders.hh[i];\n          replaceClass(h.th, classExpanded, classCollapsed);\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i];\n          h.clickStatus = classCollapsed;\n          ++i;\n        }\n        j = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (j < nRows) {\n          h = rowHeaderRows[j];\n          if (h.col === idx && h.clickStatus !== classCollapsed && h.tr.style.display !== \"none\") {\n            collapseRow(rowHeaderHeaders, rowHeaderRows, j);\n            results.push(j = j + h.descendants + 1);\n          } else {\n            results.push(++j);\n          }\n        }\n        return results;\n      };\n      expandRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, hh, i, idx, j, k, nRows, ref, results, rowHeaderHeader;\n        if (typeof rowAttr === 'string') {\n          idx = rowAttrs.indexOf(rowAttr);\n        } else {\n          idx = rowAttr;\n        }\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = rowHeaderHeaders.hh[i];\n          replaceClass(hh.th, classCollapsed, classExpanded);\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i];\n          hh.clickStatus = classExpanded;\n          j = 0;\n          nRows = rowHeaderRows.length;\n          while (j < nRows) {\n            h = rowHeaderRows[j];\n            if (h.col === i) {\n              expandRow(rowHeaderHeaders, rowHeaderRows, j);\n              j = j + h.descendants + 1;\n            } else {\n              ++j;\n            }\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < rowAttrs.length - 1) {\n          rowHeaderHeader = rowHeaderHeaders.hh[idx];\n          if (rowHeaderHeader.expandedCount === 0) {\n            replaceClass(rowHeaderHeader.th, classExpanded, classCollapsed);\n            rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = classCollapsed;\n          } else if (rowHeaderHeader.expandedCount === rowHeaderHeader.nHeaders) {\n            replaceClass(rowHeaderHeader.th, classCollapsed, classExpanded);\n            rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = classExpanded;\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      toggleColHeaderHeader = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, idx;\n        idx = colAttrs.indexOf(colAttr);\n        h = colHeaderHeaders[idx];\n        if (h.clickStatus === classCollapsed) {\n          return expandColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        } else {\n          return collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        }\n      };\n      toggleRowHeaderHeader = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var idx, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        th = rowHeaderHeaders.hh[idx];\n        if (th.clickStatus === classCollapsed) {\n          return expandRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        } else {\n          return collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        }\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderHeaders, colHeaders, h, k, l, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, tbody, thead, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderHeaders = [];\n        colHeaderCols = [];\n        if (rowAttrs.length !== 0 && rowKeys.length !== 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length !== 0 && colKeys.length !== 0) {\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        result.style.display = \"none\";\n        thead = document.createElement(\"thead\");\n        result.appendChild(thead);\n        if (colAttrs.length !== 0) {\n          buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs);\n          for (k = 0, len = colHeaders.length; k < len; k++) {\n            h = colHeaders[k];\n            buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n          }\n          buildColHeaderHeadersClickEvents(colHeaderHeaders, colHeaderCols, colAttrs);\n        }\n        if (rowAttrs.length !== 0) {\n          buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs);\n          }\n        }\n        if (colAttrs.length !== 0) {\n          buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs);\n        }\n        tbody = document.createElement(\"tbody\");\n        result.appendChild(tbody);\n        if (rowAttrs.length !== 0) {\n          for (l = 0, len1 = rowHeaders.length; l < len1; l++) {\n            h = rowHeaders[l];\n            buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n          buildRowHeaderHeadersClickEvents(rowHeaderHeaders, rowHeaderRows, rowAttrs);\n        }\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length !== 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(tbody, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        if ((opts.collapseRowsAt == null) && (opts.collapseColsAt == null)) {\n          result.style.display = \"\";\n        }\n        if (opts.collapseRowsAt != null) {\n          setTimeout((function() {\n            collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt);\n            if (!opts.collapseColsAt) {\n              return result.style.display = \"\";\n            }\n          }), 0);\n        }\n        if (opts.collapseColsAt != null) {\n          setTimeout((function() {\n            collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt);\n            return result.style.display = \"\";\n          }), 0);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts);\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts);\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts);\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal.js.map\n"],"sourceRoot":"/source/"}