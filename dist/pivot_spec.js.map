{"version":3,"file":"pivot_spec.js","sources":["pivot_spec.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,WAAA,GAAc,CACV,CAAC,MAAD,EAAY,QAAZ,EAAwB,QAAxB,EAAqC,UAArC,EAAqD,QAArD,EAAiE,WAAjE,CADU,EAEV,CAAC,MAAD,EAAY,MAAZ,EAAwB,MAAxB,EAAqC,YAArC,EAAqD,GAArD,EAAiE,EAAjE,CAFU,EAGV,CAAC,MAAD,EAAY,QAAZ,EAAwB,KAAxB,EAAqC,YAArC,EAAqD,EAArD,EAAiE,EAAjE,CAHU,EAIV,CAAC,MAAD,EAAY,MAAZ,EAAwB,MAAxB,EAAqC,YAArC,EAAqD,GAArD,EAAiE,EAAjE,CAJU,EAKV,CAAC,OAAD,EAAY,QAAZ,EAAwB,QAAxB,EAAqC,YAArC,EAAqD,GAArD,EAAiE,EAAjE,CALU;;EASd,QAAA,CAAS,aAAT,EAAwB,SAAA;IACpB,QAAA,CAAS,oEAAT,EAAgF,SAAA;AAC5E,UAAA;MAAA,KAAA,GAAQ;MAER,UAAA,CAAW,SAAC,IAAD;eACP,KAAA,GAAQ,CAAA,CAAE,OAAF,CAAU,CAAC,OAAX,CAAmB,WAAnB,EAAgC;UAAA,SAAA,EAAW,IAAX;SAAhC;MADD,CAAX;MAEA,EAAA,CAAG,+BAAH,EAAoC,SAAC,IAAD;QAChC,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,qBAAX,CAAiC,CAAC,MAAzC,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,oBAAX,CAAgC,CAAC,MAAxC,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,YAAX,CAAwB,CAAC,MAAhC,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,oBAAX,CAAgC,CAAC,MAAxC,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,sBAAX,CAAkC,CAAC,MAA1C,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,cAAX,CAA0B,CAAC,MAAlC,CACA,CAAC,IADD,CACO,CADP;eAEA,IAAA,CAAA;MAbgC,CAApC;MAeA,EAAA,CAAG,qBAAH,EAA0B,SAAC,IAAD;QACtB,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,2BAAX,CAAuC,CAAC,MAA/C,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,oBAAX,CAAgC,CAAC,GAAjC,CAAA,CAAP,CACA,CAAC,IADD,CACO,OADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,sBAAX,CAAkC,CAAC,GAAnC,CAAA,CAAP,CACA,CAAC,IADD,CACO,OADP;eAEA,IAAA,CAAA;MAPsB,CAA1B;MASA,EAAA,CAAG,iBAAH,EAAsB,SAAC,IAAD;QAClB,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,MAApC,CACA,CAAC,IADD,CACO,CADP;eAEA,IAAA,CAAA;MAHkB,CAAtB;aAMA,QAAA,CAAS,qBAAT,EAAgC,SAAA;QAC5B,EAAA,CAAG,0CAAH,EAA+C,SAAC,IAAD;UAC3C,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,kBAAX,CAA8B,CAAC,MAAtC,CACA,CAAC,IADD,CACO,CADP;UAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,kBAAX,CAA8B,CAAC,MAAtC,CACA,CAAC,IADD,CACO,CADP;iBAEA,IAAA,CAAA;QAL2C,CAA/C;QAOA,EAAA,CAAG,wCAAH,EAA6C,SAAC,IAAD;UACzC,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,IAA7B,CAAA,CAAP,CACA,CAAC,IADD,CACM,CAAC,QAAD,EAAW,GAAX,CAAe,CAAC,IAAhB,CAAqB,EAArB,CADN;iBAEA,IAAA,CAAA;QAHyC,CAA7C;eAKA,EAAA,CAAG,2CAAH,EAAgD,SAAC,IAAD;UAC5C,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,kBAAX,CAA8B,CAAC,IAA/B,CAAA,CAAP,CACA,CAAC,IADD,CACO,GADP;UAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,kBAAX,CAA8B,CAAC,IAA/B,CAAoC,OAApC,CAAP,CACA,CAAC,IADD,CACO,CADP;iBAEA,IAAA,CAAA;QAL4C,CAAhD;MAb4B,CAAhC;IAnC4E,CAAhF;WAuDA,QAAA,CAAS,2DAAT,EAAuE,SAAA;AACnE,UAAA;MAAA,KAAA,GAAQ;MAER,UAAA,CAAW,SAAC,IAAD;eACP,KAAA,GAAQ,CAAA,CAAE,OAAF,CAAU,CAAC,OAAX,CAAmB,WAAnB,EACJ;UAAA,IAAA,EAAM,CAAC,QAAD,CAAN;UAAkB,IAAA,EAAM,CAAC,QAAD,CAAxB;UACA,cAAA,EAAgB,cADhB;UAEA,IAAA,EAAM,CAAC,WAAD,EAAc,QAAd,CAFN;UAGA,YAAA,EAAc,SAHd;UAIA,SAAA,EAAW,IAJX;SADI;MADD,CAAX;MAQA,EAAA,CAAG,+BAAH,EAAoC,SAAC,IAAD;QAChC,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,qBAAX,CAAiC,CAAC,MAAzC,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,oBAAX,CAAgC,CAAC,MAAxC,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,YAAX,CAAwB,CAAC,MAAhC,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,oBAAX,CAAgC,CAAC,MAAxC,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,sBAAX,CAAkC,CAAC,MAA1C,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,cAAX,CAA0B,CAAC,MAAlC,CACA,CAAC,IADD,CACO,CADP;eAEA,IAAA,CAAA;MAbgC,CAApC;MAeA,EAAA,CAAG,qBAAH,EAA0B,SAAC,IAAD;QACtB,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,2BAAX,CAAuC,CAAC,MAA/C,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,yBAAX,CAAqC,CAAC,MAA7C,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,yBAAX,CAAqC,CAAC,MAA7C,CACA,CAAC,IADD,CACO,CADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,oBAAX,CAAgC,CAAC,GAAjC,CAAA,CAAP,CACA,CAAC,IADD,CACO,SADP;QAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,sBAAX,CAAkC,CAAC,GAAnC,CAAA,CAAP,CACA,CAAC,IADD,CACO,cADP;eAEA,IAAA,CAAA;MAXsB,CAA1B;MAaA,EAAA,CAAG,iBAAH,EAAsB,SAAC,IAAD;QAClB,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,MAApC,CACA,CAAC,IADD,CACO,CADP;eAEA,IAAA,CAAA;MAHkB,CAAtB;aAKA,QAAA,CAAS,qBAAT,EAAgC,SAAA;QAC5B,EAAA,CAAG,0CAAH,EAA+C,SAAC,IAAD;UAC3C,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,iBAAX,CAA6B,CAAC,MAArC,CACA,CAAC,IADD,CACO,CADP;UAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,MAApC,CACA,CAAC,IADD,CACO,CADP;UAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,MAApC,CACA,CAAC,IADD,CACO,CADP;UAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,kBAAX,CAA8B,CAAC,MAAtC,CACA,CAAC,IADD,CACO,CADP;UAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,WAAX,CAAuB,CAAC,MAA/B,CACA,CAAC,IADD,CACO,CADP;UAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,aAAX,CAAyB,CAAC,MAAjC,CACA,CAAC,IADD,CACO,CADP;UAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,kBAAX,CAA8B,CAAC,MAAtC,CACA,CAAC,IADD,CACO,CADP;iBAEA,IAAA,CAAA;QAf2C,CAA/C;QAiBA,EAAA,CAAG,wCAAH,EAA6C,SAAC,IAAD;UACzC,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,IAA7B,CAAA,CAAP,CACA,CAAC,IADD,CACM,CACF,QADE,EACU,MADV,EACkB,KADlB,EAC0B,QAD1B,EACsC,QADtC,EAEF,QAFE,EAGF,QAHE,EAGkB,MAHlB,EAG0B,MAH1B,EAGsC,MAHtC,EAIF,MAJE,EAIU,MAJV,EAIsC,MAJtC,EAKF,QALE,EAKU,MALV,EAKkB,MALlB,EAK0B,MAL1B,EAKsC,MALtC,CAMD,CAAC,IANA,CAMK,EANL,CADN;iBAQA,IAAA,CAAA;QATyC,CAA7C;eAWA,EAAA,CAAG,iDAAH,EAAsD,SAAC,IAAD;UAClD,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,cAAX,CAA0B,CAAC,IAA3B,CAAA,CAAP,CACA,CAAC,IADD,CACO,MADP;UAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,cAAX,CAA0B,CAAC,IAA3B,CAAgC,OAAhC,CAAP,CACA,CAAC,IADD,CACO,CAAC,EAAA,GAAG,EAAJ,CAAA,GAAQ,CAAC,GAAA,GAAI,GAAL,CADf;iBAEA,IAAA,CAAA;QALkD,CAAtD;MA7B4B,CAAhC;IA5CmE,CAAvE;EAxDoB,CAAxB;;EAwIA,QAAA,CAAS,WAAT,EAAsB,SAAA;IAElB,QAAA,CAAS,oEAAT,EAAgF,SAAA;AAC5E,UAAA;MAAA,KAAA,GAAQ,CAAA,CAAE,OAAF,CAAU,CAAC,KAAX,CAAiB,WAAjB;MAER,EAAA,CAAG,iBAAH,EAAsB,SAAA;eAClB,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,MAApC,CACA,CAAC,IADD,CACO,CADP;MADkB,CAAtB;aAIA,QAAA,CAAS,qBAAT,EAAgC,SAAA;QAE5B,EAAA,CAAG,wCAAH,EAA6C,SAAA;iBACzC,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,IAA7B,CAAA,CAAP,CACA,CAAC,IADD,CACM,CAAC,QAAD,EAAW,GAAX,CAAe,CAAC,IAAhB,CAAqB,EAArB,CADN;QADyC,CAA7C;eAIA,EAAA,CAAG,2CAAH,EAAgD,SAAA;UAC5C,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,kBAAX,CAA8B,CAAC,IAA/B,CAAA,CAAP,CACA,CAAC,IADD,CACO,GADP;iBAEA,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,kBAAX,CAA8B,CAAC,IAA/B,CAAoC,OAApC,CAAP,CACA,CAAC,IADD,CACO,CADP;QAH4C,CAAhD;MAN4B,CAAhC;IAP4E,CAAhF;IAmBA,QAAA,CAAS,uEAAT,EAAmF,SAAA;AAC/E,UAAA;MAAA,MAAkC,CAAC,CAAC,cAApC,EAAC,mBAAD,EAAS,uBAAT,EAAmB;MACnB,KAAA,GAAQ,CAAA,CAAE,OAAF,CAAU,CAAC,KAAX,CAAiB,WAAjB,EACJ;QAAA,IAAA,EAAM,CAAC,QAAD,CAAN;QAAkB,IAAA,EAAM,CAAC,WAAD,CAAxB;QAAuC,UAAA,EAAY,WAAY,CAAA,KAAA,CAAZ,CAAmB,CAAC,WAAD,CAAnB,CAAnD;QACA,MAAA,EAAQ,SAAC,MAAD;iBAAY,MAAM,CAAC,IAAP,KAAe;QAA3B,CADR;QAEA,iBAAA,EACI;UAAA,SAAA,EAAW,QAAQ,CAAC,UAAT,CAAoB,UAApB,EAAgC,IAAhC,CAAX;UACA,SAAA,EAAW,QAAQ,CAAC,GAAT,CAAa,QAAb,EAAuB,EAAvB,CADX;SAHJ;QAKA,OAAA,EAAS,SAAC,IAAD;UACL,IAAG,IAAA,KAAQ,QAAX;AAAyB,mBAAO,MAAA,CAAO,CAAC,MAAD,EAAS,QAAT,CAAP,EAAhC;;QADK,CALT;OADI;aASR,EAAA,CAAG,yDAAH,EAA8D,SAAA;eAC1D,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,IAA7B,CAAA,CAAP,CACA,CAAC,IADD,CACM,CACF,WADE,EACc,MADd,EAC0B,MAD1B,EACsC,QADtC,EAEF,QAFE,EAGF,MAHE,EAGc,QAHd,EAGsC,QAHtC,EAIF,QAJE,EAIc,OAJd,EAI0B,QAJ1B,EAIsC,QAJtC,EAKF,QALE,EAKc,QALd,EAK0B,QAL1B,EAKsC,QALtC,CAMD,CAAC,IANA,CAMK,EANL,CADN;MAD0D,CAA9D;IAX+E,CAAnF;IAqBA,QAAA,CAAS,wCAAT,EAAoD,SAAA;AAChD,UAAA;MAAC,cAAe,CAAC,CAAC;MAClB,KAAA,GAAQ,CAAA,CAAE,OAAF,CAAU,CAAC,KAAX,CAAiB,WAAjB,EACJ;QAAA,IAAA,EAAM,CAAC,QAAD,CAAN;QACA,UAAA,EAAY,WAAY,CAAA,0BAAA,CAAZ,CAAwC,CAAC,QAAD,CAAxC,CADZ;OADI;aAIR,EAAA,CAAG,yDAAH,EAA8D,SAAA;eAC1D,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,gBAAX,CAA4B,CAAC,IAA7B,CAAA,CAAP,CACA,CAAC,IADD,CACM,CACF,QADE,EACS,QADT,EAEF,QAFE,EAES,OAFT,EAGF,MAHE,EAGS,OAHT,EAIF,QAJE,EAIS,QAJT,CAKD,CAAC,IALA,CAKK,EALL,CADN;MAD0D,CAA9D;IANgD,CAApD;WAeA,QAAA,CAAS,iEAAT,EAA6E,SAAA;AACzE,UAAA;MAAA,kBAAA,GAAqB;MACrB,wBAAA,GAA2B;MAE3B,KAAA,GAAQ,CAAA,CAAE,OAAF,CAAU,CAAC,KAAX,CAAiB,WAAjB,EACJ;QAAA,IAAA,EAAM,CAAC,MAAD,EAAS,QAAT,CAAN;QAA0B,IAAA,EAAM,CAAC,QAAD,EAAW,WAAX,CAAhC;QACA,UAAA,EAAY,SAAA;iBACR;YAAA,OAAA,EAAS,CAAT;YACA,IAAA,EAAM,SAAA;qBAAG,IAAC,CAAA,OAAD,IAAW;YAAd,CADN;YAEA,KAAA,EAAO,SAAA;qBAAG,IAAC,CAAA;YAAJ,CAFP;YAGA,MAAA,EAAQ,SAAC,CAAD;qBAAO,YAAA,GAAe;YAAtB,CAHR;;QADQ,CADZ;QAMA,QAAA,EAAU,SAAC,CAAD,EAAG,CAAH;UACN,kBAAA,GAAqB;UACrB,wBAAA,GAA2B;AAC3B,iBAAO,CAAA,CAAE,OAAF,CAAU,CAAC,QAAX,CAAoB,CAAC,CAAC,QAAtB,CAA+B,CAAC,IAAhC,CAAqC,OAArC;QAHD,CANV;QAUA,eAAA,EAAiB;UAAC,QAAA,EAAS,SAAV;SAVjB;OADI;MAaR,EAAA,CAAG,4CAAH,EAAiD,SAAA;eAC7C,MAAA,CAAO,KAAK,CAAC,IAAN,CAAW,aAAX,CAAyB,CAAC,MAAjC,CACA,CAAC,IADD,CACO,CADP;MAD6C,CAAjD;aAIA,QAAA,CAAS,+BAAT,EAA0C,SAAA;eACtC,EAAA,CAAG,kEAAH,EAAuE,SAAA;AACnE,cAAA;UAAA,GAAA,GAAM,kBAAkB,CAAC,aAAnB,CAAiC,EAAjC,EAAoC,EAApC;UACN,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAA;UACN,MAAA,CAAO,GAAP,CAAW,CAAC,IAAZ,CAAiB,CAAjB;iBACA,MAAA,CAAO,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAP,CAAuB,CAAC,IAAxB,CAA6B,aAA7B;QAJmE,CAAvE;MADsC,CAA1C;IArByE,CAA7E;EAzDkB,CAAtB;;EAqFA,QAAA,CAAS,kBAAT,EAA6B,SAAA;IAEzB,QAAA,CAAS,sBAAT,EAAiC,SAAA;AAC7B,UAAA;MAAA,cAAA,GACI;QAAA,IAAA,EAAM,EAAN;QAAU,IAAA,EAAM,EAAhB;QACA,UAAA,EAAY,CAAC,CAAC,cAAc,CAAC,WAAY,CAAA,cAAA,CAA7B,CAA6C,CAAC,GAAD,EAAK,GAAL,CAA7C,CADZ;QAEA,MAAA,EAAQ,SAAA;iBAAG;QAAH,CAFR;QAGA,OAAA,EAAS,SAAA,GAAA,CAHT;;MAKJ,QAAA,CAAS,2BAAT,EAAsC,SAAA;AAClC,YAAA;QAAA,QAAA,GAAY,CAAE,CAAC,GAAD,EAAK,GAAL,CAAF,EAAa,CAAC,CAAD,EAAG,CAAH,CAAb,EAAoB,CAAC,CAAD,EAAG,CAAH,CAApB;QACZ,EAAA,GAAS,IAAA,CAAC,CAAC,cAAc,CAAC,iBAAjB,CAAmC,QAAnC,EAA6C,cAA7C;eAET,EAAA,CAAG,mCAAH,EAAwC,SAAA;iBACpC,MAAA,CAAO,EAAE,CAAC,aAAH,CAAiB,EAAjB,EAAoB,EAApB,CAAuB,CAAC,KAAxB,CAAA,CAAP,CACA,CAAC,IADD,CACM,CAAC,CAAA,GAAE,CAAH,CAAA,GAAM,CAAC,CAAA,GAAE,CAAH,CADZ;QADoC,CAAxC;MAJkC,CAAtC;MAQA,QAAA,CAAS,4BAAT,EAAuC,SAAA;AACnC,YAAA;QAAA,QAAA,GAAY;UAAE;YAAC,CAAA,EAAE,CAAH;YAAM,CAAA,EAAE,CAAR;WAAF,EAAc;YAAC,CAAA,EAAE,CAAH;YAAM,CAAA,EAAE,CAAR;WAAd;;QACZ,EAAA,GAAS,IAAA,CAAC,CAAC,cAAc,CAAC,iBAAjB,CAAmC,QAAnC,EAA6C,cAA7C;eAET,EAAA,CAAG,mCAAH,EAAwC,SAAA;iBACpC,MAAA,CAAO,EAAE,CAAC,aAAH,CAAiB,EAAjB,EAAoB,EAApB,CAAuB,CAAC,KAAxB,CAAA,CAAP,CACA,CAAC,IADD,CACM,CAAC,CAAA,GAAE,CAAH,CAAA,GAAM,CAAC,CAAA,GAAE,CAAH,CADZ;QADoC,CAAxC;MAJmC,CAAvC;MAQA,QAAA,CAAS,qBAAT,EAAgC,SAAA;AAC5B,YAAA;QAAA,aAAA,GAAgB,SAAC,MAAD;UACZ,MAAA,CAAO;YAAA,CAAA,EAAE,CAAF;YAAK,CAAA,EAAE,CAAP;WAAP;iBACA,MAAA,CAAO;YAAA,CAAA,EAAE,CAAF;YAAK,CAAA,EAAE,CAAP;WAAP;QAFY;QAGhB,EAAA,GAAS,IAAA,CAAC,CAAC,cAAc,CAAC,iBAAjB,CAAmC,aAAnC,EAAkD,cAAlD;eAET,EAAA,CAAG,mCAAH,EAAwC,SAAA;iBACpC,MAAA,CAAO,EAAE,CAAC,aAAH,CAAiB,EAAjB,EAAoB,EAApB,CAAuB,CAAC,KAAxB,CAAA,CAAP,CACA,CAAC,IADD,CACM,CAAC,CAAA,GAAE,CAAH,CAAA,GAAM,CAAC,CAAA,GAAE,CAAH,CADZ;QADoC,CAAxC;MAN4B,CAAhC;MAUA,QAAA,CAAS,iCAAT,EAA4C,SAAA;AACxC,YAAA;QAAA,UAAA,GAAa,CAAA,CAAE,wMAAF;QAYb,EAAA,GAAS,IAAA,CAAC,CAAC,cAAc,CAAC,iBAAjB,CAAmC,UAAnC,EAA+C,cAA/C;eAET,EAAA,CAAG,mCAAH,EAAwC,SAAA;iBACpC,MAAA,CAAO,EAAE,CAAC,aAAH,CAAiB,EAAjB,EAAoB,EAApB,CAAuB,CAAC,KAAxB,CAAA,CAAP,CACA,CAAC,IADD,CACM,CAAC,CAAA,GAAE,CAAH,CAAA,GAAM,CAAC,CAAA,GAAE,CAAH,CADZ;QADoC,CAAxC;MAfwC,CAA5C;aAoBA,QAAA,CAAS,sDAAT,EAAiE,SAAA;AAC7D,YAAA;QAAA,EAAA,GAAS,IAAA,CAAC,CAAC,cAAc,CAAC,iBAAjB,CAAmC,WAAnC,EACL;UAAA,IAAA,EAAM,CAAC,MAAD,EAAS,QAAT,CAAN;UACA,IAAA,EAAM,CAAC,QAAD,EAAW,WAAX,CADN;UAEA,UAAA,EAAY,CAAC,CAAC,cAAc,CAAC,WAAY,CAAA,OAAA,CAA7B,CAAA,CAFZ;UAGA,MAAA,EAAQ,SAAA;mBAAG;UAAH,CAHR;UAIA,OAAA,EAAS,SAAA,GAAA,CAJT;SADK;QAOT,EAAA,CAAG,gCAAH,EAAqC,SAAA;iBACjC,MAAA,CAAO,EAAE,CAAC,UAAH,CAAA,CAAP,CACA,CAAC,OADD,CACS,CAAE,CAAE,OAAF,EAAW,QAAX,CAAF,EAAyB,CAAE,MAAF,EAAU,KAAV,CAAzB,EAA4C,CAAE,MAAF,EAAU,MAAV,CAA5C,EAAgE,CAAE,MAAF,EAAU,MAAV,CAAhE,CADT;QADiC,CAArC;QAIA,EAAA,CAAG,gCAAH,EAAqC,SAAA;iBACjC,MAAA,CAAO,EAAE,CAAC,UAAH,CAAA,CAAP,CACA,CAAC,OADD,CACS,CAAE,CAAE,EAAF,EAAM,EAAN,CAAF,EAAc,CAAE,GAAF,EAAO,EAAP,CAAd,EAA2B,CAAE,GAAF,EAAO,EAAP,CAA3B,EAAwC,CAAE,GAAF,EAAO,EAAP,CAAxC,CADT;QADiC,CAArC;QAIA,EAAA,CAAG,sBAAH,EAA2B,SAAA;AACvB,cAAA;UAAA,UAAA,GAAa;UACb,OAAA,GAAU;AACV;AAAA,eAAA,qCAAA;;AACI;AAAA,iBAAA,wCAAA;;cACI,IAAG,sCAAH;gBACI,UAAA,GADJ;eAAA,MAAA;gBAGI,OAAA,GAHJ;;AADJ;AADJ;UAMA,MAAA,CAAO,UAAP,CACA,CAAC,IADD,CACM,CADN;iBAEA,MAAA,CAAO,OAAP,CACA,CAAC,IADD,CACM,EADN;QAXuB,CAA3B;QAcA,EAAA,CAAG,uCAAH,EAA4C,SAAA;AACxC,cAAA;UAAA,KAAA,GAAQ;YAAE;cAAC,IAAA,EAAM,CAAC,CAAC,OAAD,EAAU,QAAV,CAAD,EAAsB,CAAC,GAAD,EAAM,EAAN,CAAtB,CAAP;cAAyC,GAAA,EAAK,CAA9C;aAAF,EAAoD;cAAC,IAAA,EAAO,CAAC,CAAC,MAAD,EAAS,KAAT,CAAD,EAAkB,CAAC,EAAD,EAAK,EAAL,CAAlB,CAAR;cAAqC,GAAA,EAAK,CAA1C;aAApD,EAAkG;cAAC,IAAA,EAAM,CAAC,CAAC,MAAD,EAAS,MAAT,CAAD,EAAmB,CAAC,GAAD,EAAM,EAAN,CAAnB,CAAP;cAAsC,GAAA,EAAK,CAA3C;aAAlG,EAAiJ;cAAC,IAAA,EAAM,CAAC,CAAC,MAAD,EAAS,MAAT,CAAD,EAAmB,CAAC,GAAD,EAAM,EAAN,CAAnB,CAAP;cAAsC,GAAA,EAAK,CAA3C;aAAjJ;;AACR;eAAA,uCAAA;;YACI,GAAA,GAAM,EAAE,CAAC,aAAH,CAAiB,CAAC,CAAC,IAAK,CAAA,CAAA,CAAxB,EAA2B,CAAC,CAAC,IAAK,CAAA,CAAA,CAAlC;YACN,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAA;YACN,MAAA,CAAO,GAAP,CAAW,CAAC,IAAZ,CAAiB,CAAjB;yBACA,MAAA,CAAO,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAP,CAAuB,CAAC,IAAxB,CAA6B,EAAA,GAAK,CAAC,CAAC,GAApC;AAJJ;;QAFwC,CAA5C;QAQA,EAAA,CAAG,6EAAH,EAAkF,SAAA;AAC9E,cAAA;UAAA,KAAA,GAAQ;YAAE;cAAC,IAAA,EAAM,CAAC,CAAC,OAAD,CAAD,EAAY,CAAC,GAAD,CAAZ,CAAP;cAA2B,GAAA,EAAK,CAAhC;aAAF,EAAsC;cAAC,IAAA,EAAO,CAAC,CAAC,MAAD,CAAD,EAAW,CAAC,EAAD,CAAX,CAAR;cAA0B,GAAA,EAAK,CAA/B;aAAtC,EAAyE;cAAC,IAAA,EAAM,CAAC,CAAC,MAAD,CAAD,EAAW,CAAC,GAAD,CAAX,CAAP;cAA0B,GAAA,EAAK,CAA/B;aAAzE,EAA4G;cAAC,IAAA,EAAM,CAAC,CAAC,MAAD,CAAD,EAAW,CAAC,GAAD,CAAX,CAAP;cAA0B,GAAA,EAAK,CAA/B;aAA5G;;AACR;eAAA,uCAAA;;YACI,GAAA,GAAM,EAAE,CAAC,aAAH,CAAiB,CAAC,CAAC,IAAK,CAAA,CAAA,CAAxB,EAA4B,CAAC,CAAC,IAAK,CAAA,CAAA,CAAnC;YACN,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAA;YACN,MAAA,CAAO,GAAP,CAAW,CAAC,IAAZ,CAAiB,CAAC,CAAC,GAAnB;yBACA,MAAA,CAAO,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAP,CAAuB,CAAC,IAAxB,CAA6B,EAAA,GAAK,CAAC,CAAC,GAApC;AAJJ;;QAF8E,CAAlF;QAQA,EAAA,CAAG,yCAAH,EAA8C,SAAA;AAC1C,cAAA;AAAA;AAAA;eAAA,qCAAA;;YACI,GAAA,GAAM,EAAE,CAAC,aAAH,CAAiB,CAAC,GAAD,CAAjB,EAAuB,EAAvB;YACN,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAA;YACN,MAAA,CAAO,GAAP,CAAW,CAAC,IAAZ,CAAiB,CAAjB;yBACA,MAAA,CAAO,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAP,CAAuB,CAAC,IAAxB,CAA6B,GAA7B;AAJJ;;QAD0C,CAA9C;QAOA,EAAA,CAAG,+CAAH,EAAoD,SAAA;AAChD,cAAA;AAAA;AAAA;eAAA,qCAAA;;YACI,GAAA,GAAM,EAAE,CAAC,aAAH,CAAiB,EAAjB,EAAoB,CAAC,GAAD,CAApB;YACN,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAA;YACN,MAAA,CAAO,GAAP,CAAW,CAAC,IAAZ,CAAiB,CAAjB;yBACA,MAAA,CAAO,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAP,CAAuB,CAAC,IAAxB,CAA6B,GAA7B;AAJJ;;QADgD,CAApD;eAOA,EAAA,CAAG,sCAAH,EAA2C,SAAA;AACvC,cAAA;UAAA,GAAA,GAAM,EAAE,CAAC,aAAH,CAAiB,EAAjB,EAAoB,EAApB;UACN,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAA;UACN,MAAA,CAAO,GAAP,CAAW,CAAC,IAAZ,CAAiB,CAAjB;iBACA,MAAA,CAAO,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAP,CAAuB,CAAC,IAAxB,CAA6B,GAA7B;QAJuC,CAA3C;MA5D6D,CAAjE;IArD6B,CAAjC;IAuHA,QAAA,CAAS,gBAAT,EAA2B,SAAA;AACvB,UAAA;MAAA,WAAA,GAAc,CAAC,CAAC,cAAc,CAAC;MAE/B,EAAA,CAAG,eAAH,EAAoB,SAAA;eAChB,MAAA,CAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAW,CAAC,IAAZ,CAAiB,WAAjB,CAAP,CACA,CAAC,OADD,CACS,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CADT;MADgB,CAApB;MAIA,EAAA,CAAG,eAAH,EAAoB,SAAA;eAChB,MAAA,CAAO,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAAiB,CAAC,IAAlB,CAAuB,WAAvB,CAAP,CACA,CAAC,OADD,CACS,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CADT;MADgB,CAApB;MAIA,EAAA,CAAG,0BAAH,EAA+B,SAAA;eAC3B,MAAA,CAAO,CAAC,GAAD,EAAK,IAAL,EAAU,GAAV,EAAc,IAAd,EAAmB,IAAnB,EAAwB,KAAxB,CAA8B,CAAC,IAA/B,CAAoC,WAApC,CAAP,CACA,CAAC,OADD,CACS,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,EAAc,IAAd,EAAmB,IAAnB,EAAwB,KAAxB,CADT;MAD2B,CAA/B;aAIA,EAAA,CAAG,wBAAH,EAA6B,SAAA;eACzB,MAAA,CAAO,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,CAAqB,CAAC,IAAtB,CAA2B,WAA3B,CAAP,CACA,CAAC,OADD,CACS,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,IAAhB,CADT;MADyB,CAA7B;IAfuB,CAA3B;IAmBA,QAAA,CAAS,WAAT,EAAsB,SAAA;AAClB,UAAA;MAAA,MAAA,GAAS,CAAC,CAAC,cAAc,CAAC;aAE1B,EAAA,CAAG,6CAAH,EAAkD,SAAA;eAC9C,MAAA,CAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAW,CAAC,IAAZ,CAAiB,MAAA,CAAO,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAP,CAAjB,CAAP,CACA,CAAC,OADD,CACS,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CADT;MAD8C,CAAlD;IAHkB,CAAtB;IAOA,QAAA,CAAS,iBAAT,EAA4B,SAAA;AACxB,UAAA;MAAA,YAAA,GAAe,CAAC,CAAC,cAAc,CAAC;MAEhC,EAAA,CAAG,iBAAH,EAAsB,SAAA;AAClB,YAAA;QAAA,EAAA,GAAK,YAAA,CAAA;eACL,MAAA,CAAO,EAAA,CAAG,gBAAH,CAAP,CACA,CAAC,OADD,CACS,cADT;MAFkB,CAAtB;MAKA,EAAA,CAAG,kBAAH,EAAuB,SAAA;AACnB,YAAA;QAAA,EAAA,GAAK,YAAA,CAAA;eACL,MAAA,CAAO,EAAA,CAAG,IAAH,CAAP,CACA,CAAC,OADD,CACS,MADT;MAFmB,CAAvB;MAKA,EAAA,CAAG,4BAAH,EAAiC,SAAA;AAC7B,YAAA;QAAA,EAAA,GAAK,YAAA,CAAA;eACL,MAAA,CAAO,EAAA,CAAG,kBAAH,CAAP,CACA,CAAC,OADD,CACS,cADT;MAF6B,CAAjC;MAKA,EAAA,CAAG,yBAAH,EAA8B,SAAA;AAC1B,YAAA;QAAA,EAAA,GAAK,YAAA,CAAA;eACL,MAAA,CAAO,EAAA,CAAG,UAAH,CAAP,CACA,CAAC,OADD,CACS,EADT;MAF0B,CAA9B;MAKA,EAAA,CAAG,yBAAH,EAA8B,SAAA;AAC1B,YAAA;QAAA,EAAA,GAAK,YAAA,CAAA;eACL,MAAA,CAAO,EAAA,CAAG;UAAC,CAAA,EAAE,CAAH;SAAH,CAAP,CACA,CAAC,OADD,CACS,EADT;MAF0B,CAA9B;MAKA,EAAA,CAAG,qBAAH,EAA0B,SAAA;AACtB,YAAA;QAAA,EAAA,GAAK,YAAA,CAAa;UAAA,MAAA,EAAQ,GAAR;UAAa,MAAA,EAAQ,GAArB;SAAb;eACL,MAAA,CAAO,EAAA,CAAG,OAAH,CAAP,CACA,CAAC,OADD,CACS,QADT;MAFsB,CAA1B;MAKA,EAAA,CAAG,iBAAH,EAAsB,SAAA;AAClB,YAAA;QAAA,EAAA,GAAK,YAAA,CAAa;UAAA,YAAA,EAAc,GAAd;UAAmB,UAAA,EAAY,GAA/B;SAAb;eACL,MAAA,CAAO,EAAA,CAAG,gBAAH,CAAP,CACA,CAAC,OADD,CACS,cADT;MAFkB,CAAtB;MAKA,EAAA,CAAG,4BAAH,EAAiC,SAAA;AAC7B,YAAA;QAAA,EAAA,GAAK,YAAA,CAAa;UAAA,MAAA,EAAQ,GAAR;UAAa,MAAA,EAAQ,GAArB;SAAb;eACL,MAAA,CAAO,EAAA,CAAG,gBAAH,CAAP,CACA,CAAC,OADD,CACS,gBADT;MAF6B,CAAjC;MAKA,EAAA,CAAG,mBAAH,EAAwB,SAAA;AACpB,YAAA;QAAA,EAAA,GAAK,YAAA,CAAa;UAAA,kBAAA,EAAoB,CAApB;UAAuB,MAAA,EAAQ,IAA/B;SAAb;eACL,MAAA,CAAO,EAAA,CAAG,gBAAH,CAAP,CACA,CAAC,OADD,CACS,mBADT;MAFoB,CAAxB;aAKA,EAAA,CAAG,sBAAH,EAA2B,SAAA;AACvB,YAAA;QAAA,EAAA,GAAK,YAAA,CAAa;UAAA,QAAA,EAAU,IAAV;SAAb;QACL,MAAA,CAAO,EAAA,CAAG,CAAH,CAAP,CACA,CAAC,OADD,CACS,MADT;QAGA,EAAA,GAAK,YAAA,CAAa;UAAA,QAAA,EAAU,KAAV;SAAb;eACL,MAAA,CAAO,EAAA,CAAG,CAAH,CAAP,CACA,CAAC,OADD,CACS,EADT;MANuB,CAA3B;IAhDwB,CAA5B;WAyDA,QAAA,CAAS,WAAT,EAAsB,SAAA;MAClB,QAAA,CAAS,eAAT,EAA0B,SAAA;AACtB,YAAA;QAAA,EAAA,GAAK,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,UAA1B,CAAqC,GAArC,EAA0C,4CAA1C,EAAwF,IAAxF;QAEL,EAAA,CAAG,sBAAH,EAA2B,SAAA;iBACvB,MAAA,CAAO,EAAA,CAAG;YAAC,CAAA,EAAO,IAAA,IAAA,CAAK,sBAAL,CAAR;WAAH,CAAP,CACA,CAAC,IADD,CACM,+CADN;QADuB,CAA3B;eAIA,EAAA,CAAG,sCAAH,EAA2C,SAAA;UACvC,MAAA,CAAO,EAAA,CAAG;YAAC,CAAA,EAAG,sBAAJ;WAAH,CAAP,CACA,CAAC,IADD,CACM,+CADN;iBAGA,MAAA,CAAO,EAAA,CAAG;YAAC,CAAA,EAAG,KAAJ;WAAH,CAAP,CACA,CAAC,IADD,CACM,EADN;QAJuC,CAA3C;MAPsB,CAA1B;aAcA,QAAA,CAAS,QAAT,EAAmB,SAAA;AACf,YAAA;QAAA,MAAA,GAAS,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,GAA1B,CAA8B,GAA9B,EAAmC,EAAnC;QAET,EAAA,CAAG,cAAH,EAAmB,SAAA;UACf,MAAA,CAAO,MAAA,CAAO;YAAC,CAAA,EAAG,EAAJ;WAAP,CAAP,CACA,CAAC,IADD,CACM,EADN;UAGA,MAAA,CAAO,MAAA,CAAO;YAAC,CAAA,EAAG,CAAJ;WAAP,CAAP,CACA,CAAC,IADD,CACM,CADN;iBAGA,MAAA,CAAO,MAAA,CAAO;YAAC,CAAA,EAAG,GAAJ;WAAP,CAAP,CACA,CAAC,IADD,CACM,GADN;QAPe,CAAnB;QAUA,EAAA,CAAG,eAAH,EAAoB,SAAA;iBAChB,MAAA,CAAO,MAAA,CAAO;YAAC,CAAA,EAAG,IAAJ;WAAP,CAAP,CACA,CAAC,IADD,CACM,CADN;QADgB,CAApB;QAIA,EAAA,CAAG,uBAAH,EAA4B,SAAA;iBACxB,MAAA,CAAO,MAAA,CAAO;YAAC,CAAA,EAAG,CAAC,EAAL;WAAP,CAAP,CACA,CAAC,IADD,CACM,CAAC,EADP;QADwB,CAA5B;QAIA,EAAA,CAAG,qBAAH,EAA0B,SAAA;iBACtB,MAAA,CAAO,MAAA,CAAO;YAAC,CAAA,EAAG,GAAJ;WAAP,CAAP,CACA,CAAC,OADD,CAAA;QADsB,CAA1B;eAIA,EAAA,CAAG,qBAAH,EAA0B,SAAA;iBACtB,MAAA,CAAO,MAAA,CAAO;YAAC,CAAA,EAAG;cAAC,CAAA,EAAE,CAAH;aAAJ;WAAP,CAAP,CACA,CAAC,OADD,CAAA;QADsB,CAA1B;MAzBe,CAAnB;IAfkB,CAAtB;EA5MyB,CAA7B;AAtOA","sourcesContent":["fixtureData = [\r\n    [\"name\",    \"gender\",   \"colour\",    \"birthday\",     \"trials\",   \"successes\"],\r\n    [\"Nick\",    \"male\",     \"blue\",      \"1982-11-07\",   103,        12],\r\n    [\"Jane\",    \"female\",   \"red\",       \"1982-11-08\",   95,         25],\r\n    [\"John\",    \"male\",     \"blue\",      \"1982-12-08\",   112,        30],\r\n    [\"Carol\",   \"female\",   \"yellow\",    \"1983-12-08\",   102,        14]\r\n]\r\n\r\n\r\ndescribe \"$.pivotUI()\", ->\r\n    describe \"with no rows/cols, default count aggregator, default TableRenderer\",  ->\r\n        table = null\r\n\r\n        beforeEach (done) ->\r\n            table = $(\"<div>\").pivotUI fixtureData, onRefresh: done\r\n        it \"has all the basic UI elements\", (done) ->\r\n            expect table.find(\"td.pvtAxisContainer\").length\r\n            .toBe  3\r\n            expect table.find(\"td.pvtRendererArea\").length\r\n            .toBe  1\r\n            expect table.find(\"td.pvtVals\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtRenderer\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtAggregator\").length\r\n            .toBe  1\r\n            expect table.find(\"span.pvtAttr\").length\r\n            .toBe  6\r\n            done()\r\n\r\n        it \"reflects its inputs\", (done) ->\r\n            expect table.find(\"td.pvtUnused span.pvtAttr\").length\r\n            .toBe  6\r\n            expect table.find(\"select.pvtRenderer\").val()\r\n            .toBe  \"Table\"\r\n            expect table.find(\"select.pvtAggregator\").val()\r\n            .toBe  \"Count\"\r\n            done()\r\n\r\n        it \"renders a table\", (done) ->\r\n            expect table.find(\"table.pvtTable\").length\r\n            .toBe  1 \r\n            done()\r\n\r\n\r\n        describe \"its renderer output\", ->\r\n            it \"has the correct type and number of cells\", (done) ->\r\n                expect table.find(\"th.pvtTotalLabel\").length\r\n                .toBe  1 \r\n                expect table.find(\"td.pvtGrandTotal\").length\r\n                .toBe  1 \r\n                done()\r\n\r\n            it \"has the correct textual representation\", (done) ->\r\n                expect table.find(\"table.pvtTable\").text()\r\n                .toBe [\"Totals\", \"4\"].join(\"\")\r\n                done()\r\n\r\n            it \"has a correct grand total with data value\", (done) ->\r\n                expect table.find(\"td.pvtGrandTotal\").text()\r\n                .toBe  \"4\"\r\n                expect table.find(\"td.pvtGrandTotal\").data(\"value\")\r\n                .toBe  4\r\n                done()\r\n\r\n    describe \"with rows/cols, sum-over-sum aggregator, Heatmap renderer\",  ->\r\n        table = null\r\n\r\n        beforeEach (done) ->\r\n            table = $(\"<div>\").pivotUI fixtureData, \r\n                rows: [\"gender\"], cols: [\"colour\"]\r\n                aggregatorName: \"Sum over Sum\"\r\n                vals: [\"successes\", \"trials\"]\r\n                rendererName: \"Heatmap\"\r\n                onRefresh: done\r\n\r\n        it \"has all the basic UI elements\", (done) ->\r\n            expect table.find(\"td.pvtAxisContainer\").length\r\n            .toBe  3\r\n            expect table.find(\"td.pvtRendererArea\").length\r\n            .toBe  1\r\n            expect table.find(\"td.pvtVals\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtRenderer\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtAggregator\").length\r\n            .toBe  1\r\n            expect table.find(\"span.pvtAttr\").length\r\n            .toBe  6\r\n            done()\r\n\r\n        it \"reflects its inputs\", (done) ->\r\n            expect table.find(\"td.pvtUnused span.pvtAttr\").length\r\n            .toBe  4\r\n            expect table.find(\"td.pvtRows span.pvtAttr\").length\r\n            .toBe  1\r\n            expect table.find(\"td.pvtCols span.pvtAttr\").length\r\n            .toBe  1\r\n            expect table.find(\"select.pvtRenderer\").val()\r\n            .toBe  \"Heatmap\"\r\n            expect table.find(\"select.pvtAggregator\").val()\r\n            .toBe  \"Sum over Sum\"\r\n            done()\r\n\r\n        it \"renders a table\", (done) ->\r\n            expect table.find(\"table.pvtTable\").length\r\n            .toBe  1 \r\n            done()\r\n\r\n        describe \"its renderer output\", ->\r\n            it \"has the correct type and number of cells\", (done) ->\r\n                expect table.find(\"th.pvtAxisLabel\").length\r\n                .toBe  2 \r\n                expect table.find(\"th.pvtRowLabel\").length\r\n                .toBe  2 \r\n                expect table.find(\"th.pvtColLabel\").length\r\n                .toBe  3 \r\n                expect table.find(\"th.pvtTotalLabel\").length\r\n                .toBe  2 \r\n                expect table.find(\"td.pvtVal\").length\r\n                .toBe  6 \r\n                expect table.find(\"td.pvtTotal\").length\r\n                .toBe  5 \r\n                expect table.find(\"td.pvtGrandTotal\").length\r\n                .toBe  1 \r\n                done()\r\n\r\n            it \"has the correct textual representation\", (done) ->\r\n                expect table.find(\"table.pvtTable\").text()\r\n                .toBe [\r\n                    \"colour\",   \"blue\", \"red\",  \"yellow\",   \"Totals\",\r\n                    \"gender\",\r\n                    \"female\",           \"0.26\", \"0.14\",     \"0.20\",\r\n                    \"male\",     \"0.20\",                     \"0.20\",\r\n                    \"Totals\",   \"0.20\", \"0.26\", \"0.14\",     \"0.20\"\r\n                    ].join(\"\")\r\n                done()\r\n\r\n            it \"has a correct spot-checked cell with data value\", (done) ->\r\n                expect table.find(\"td.col0.row1\").text()\r\n                .toBe  \"0.20\"\r\n                expect table.find(\"td.col0.row1\").data(\"value\")\r\n                .toBe  (12+30)/(103+112)\r\n                done()\r\n\r\ndescribe \"$.pivot()\", ->\r\n\r\n    describe \"with no rows/cols, default count aggregator, default TableRenderer\",  ->\r\n        table = $(\"<div>\").pivot fixtureData\r\n\r\n        it \"renders a table\", ->\r\n            expect table.find(\"table.pvtTable\").length\r\n            .toBe  1 \r\n\r\n        describe \"its renderer output\", ->\r\n\r\n            it \"has the correct textual representation\", ->\r\n                expect table.find(\"table.pvtTable\").text()\r\n                .toBe [\"Totals\", \"4\"].join(\"\")\r\n\r\n            it \"has a correct grand total with data value\", ->\r\n                expect table.find(\"td.pvtGrandTotal\").text()\r\n                .toBe  \"4\"\r\n                expect table.find(\"td.pvtGrandTotal\").data(\"value\")\r\n                .toBe  4\r\n\r\n    describe \"with rows/cols, sum aggregator, derivedAttributes, filter and sorters\",  ->\r\n        {sortAs, derivers, aggregators} = $.pivotUtilities\r\n        table = $(\"<div>\").pivot fixtureData,\r\n            rows: [\"gender\"], cols: [\"birthyear\"], aggregator: aggregators[\"Sum\"]([\"trialbins\"])\r\n            filter: (record) -> record.name != \"Nick\"\r\n            derivedAttributes:\r\n                birthyear: derivers.dateFormat \"birthday\", \"%y\"\r\n                trialbins: derivers.bin \"trials\", 10\r\n            sorters: (attr) ->\r\n                if attr == \"gender\" then return sortAs([\"male\", \"female\"])\r\n\r\n        it \"renders a table with the correct textual representation\", ->\r\n            expect table.find(\"table.pvtTable\").text()\r\n            .toBe [\r\n                \"birthyear\",    \"1982\",     \"1983\",     \"Totals\"\r\n                \"gender\",  \r\n                \"male\",         \"110.00\",               \"110.00\"\r\n                \"female\",       \"90.00\",    \"100.00\",   \"190.00\"\r\n                \"Totals\",       \"200.00\",   \"100.00\",   \"300.00\"\r\n                ].join(\"\")\r\n\r\n    describe \"with rows/cols, fraction-of aggregator\",  ->\r\n        {aggregators} = $.pivotUtilities\r\n        table = $(\"<div>\").pivot fixtureData,\r\n            rows: [\"gender\"]\r\n            aggregator: aggregators[\"Sum as Fraction of Total\"]([\"trials\"])\r\n\r\n        it \"renders a table with the correct textual representation\", ->\r\n            expect table.find(\"table.pvtTable\").text()\r\n            .toBe [\r\n                \"gender\",  \"Totals\"\r\n                \"female\",  \"47.8%\"\r\n                \"male\",    \"52.2%\"\r\n                \"Totals\",  \"100.0%\"\r\n                ].join(\"\")\r\n\r\n    describe \"with rows/cols, custom aggregator, custom renderer with options\",  ->\r\n        received_PivotData = null\r\n        received_rendererOptions = null\r\n\r\n        table = $(\"<div>\").pivot fixtureData, \r\n            rows: [\"name\", \"colour\"], cols: [\"trials\", \"successes\"]\r\n            aggregator: -> \r\n                count2x: 0\r\n                push: -> @count2x +=2 \r\n                value: -> @count2x\r\n                format: (x) -> \"formatted \" + x\r\n            renderer: (a,b) -> \r\n                received_PivotData = a\r\n                received_rendererOptions = b\r\n                return $(\"<div>\").addClass(b.greeting).text(\"world\")\r\n            rendererOptions: {greeting:\"hithere\"}\r\n\r\n        it \"renders the custom renderer as per options\", ->\r\n            expect table.find(\"div.hithere\").length\r\n            .toBe  1 \r\n\r\n        describe \"its received PivotData object\", ->\r\n            it \"has a correct grand total value and format for custom aggregator\", ->\r\n                agg = received_PivotData.getAggregator([],[])\r\n                val = agg.value()\r\n                expect(val).toBe 8 \r\n                expect(agg.format(val)).toBe \"formatted 8\"\r\n\r\ndescribe \"$.pivotUtilities\", ->\r\n\r\n    describe \".SubtotalPivotData()\", ->\r\n        sumOverSumOpts = \r\n            rows: [], cols: []\r\n            aggregator: $.pivotUtilities.aggregators[\"Sum over Sum\"]([\"a\",\"b\"])\r\n            filter: -> true\r\n            sorters: ->\r\n\r\n        describe \"with array-of-array input\", ->\r\n            aoaInput =  [ [\"a\",\"b\"], [1,2], [3,4] ]\r\n            pd = new $.pivotUtilities.SubtotalPivotData aoaInput, sumOverSumOpts\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe (1+3)/(2+4)\r\n\r\n        describe \"with array-of-object input\", ->\r\n            aosInput =  [ {a:1, b:2}, {a:3, b:4} ]\r\n            pd = new $.pivotUtilities.SubtotalPivotData aosInput, sumOverSumOpts\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe (1+3)/(2+4)\r\n\r\n        describe \"with function input\", ->\r\n            functionInput = (record) ->\r\n                record a:1, b:2\r\n                record a:3, b:4\r\n            pd = new $.pivotUtilities.SubtotalPivotData functionInput, sumOverSumOpts\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe (1+3)/(2+4)\r\n\r\n        describe \"with jQuery table element input\", ->\r\n            tableInput = $ \"\"\"\r\n                <table>\r\n                    <thead> \r\n                        <tr> <th>a</th><th>b</th> </tr>\r\n                    </thead> \r\n                    <tbody>\r\n                        <tr> <td>1</td> <td>2</td> </tr>\r\n                        <tr> <td>3</td> <td>4</td> </tr>\r\n                    </tbody>\r\n                </table>\r\n                \"\"\"\r\n\r\n            pd = new $.pivotUtilities.SubtotalPivotData tableInput, sumOverSumOpts\r\n\r\n            it \"has the correct grand total value\", ->\r\n                expect pd.getAggregator([],[]).value()\r\n                .toBe (1+3)/(2+4)\r\n\r\n\r\n        describe \"with rows/cols, no filters/sorters, count aggregator\", ->\r\n            pd = new $.pivotUtilities.SubtotalPivotData fixtureData, \r\n                rows: [\"name\", \"colour\"], \r\n                cols: [\"trials\", \"successes\"],\r\n                aggregator: $.pivotUtilities.aggregators[\"Count\"](),\r\n                filter: -> true\r\n                sorters: ->\r\n\r\n            it \"has correctly-ordered row keys\", ->\r\n                expect pd.getRowKeys()\r\n                .toEqual [ [ 'Carol', 'yellow' ], [ 'Jane', 'red' ], [ 'John', 'blue' ], [ 'Nick', 'blue' ] ]\r\n               \r\n            it \"has correctly-ordered col keys\", ->\r\n                expect pd.getColKeys()\r\n                .toEqual [ [ 95, 25 ], [ 102, 14 ], [ 103, 12 ], [ 112, 30 ] ]\r\n\r\n            it \"can be iterated over\", ->\r\n                numNotNull = 0\r\n                numNull = 0\r\n                for r in pd.getRowKeys()\r\n                    for c in pd.getColKeys()\r\n                        if pd.getAggregator(r, c).value()?\r\n                            numNotNull++ \r\n                        else\r\n                            numNull++\r\n                expect numNotNull\r\n                .toBe 4\r\n                expect numNull\r\n                .toBe 12\r\n\r\n            it \"has a correct spot-checked aggregator\", ->\r\n                spots = [ {spot: [['Carol', 'yellow'], [102, 14]], val: 1}, {spot:  [['Jane', 'red'], [95, 25]], val: 1}, {spot: [['John', 'blue'], [112, 30]], val: 1}, {spot: [['Nick', 'blue'], [103, 12]], val: 1} ]\r\n                for s in spots\r\n                    agg = pd.getAggregator(s.spot[0],s.spot[1])\r\n                    val = agg.value()\r\n                    expect(val).toBe 1 \r\n                    expect(agg.format(val)).toBe \"\" + s.val\r\n\r\n            it \"has correct spot-checked aggregators for subtotal-rows and subtotal-columns\", ->\r\n                spots = [ {spot: [['Carol'], [102]], val: 1}, {spot:  [['Jane'], [95]], val: 1}, {spot: [['John'], [112]], val: 1}, {spot: [['Nick'], [103]], val: 1} ]\r\n                for s in spots\r\n                    agg = pd.getAggregator(s.spot[0], s.spot[1])\r\n                    val = agg.value()\r\n                    expect(val).toBe s.val \r\n                    expect(agg.format(val)).toBe \"\" + s.val\r\n\r\n            it \"has correct row-total for subtotal-rows\", ->\r\n                for hdr in ['Carol', 'Jane', 'John', 'Nick']\r\n                    agg = pd.getAggregator([hdr],[])\r\n                    val = agg.value()\r\n                    expect(val).toBe 1\r\n                    expect(agg.format(val)).toBe \"1\"\r\n\r\n            it \"has correct column-total for subtotal-columns\", ->\r\n                for hdr in [95, 102, 103, 112]\r\n                    agg = pd.getAggregator([],[hdr])\r\n                    val = agg.value()\r\n                    expect(val).toBe 1\r\n                    expect(agg.format(val)).toBe \"1\"\r\n\r\n            it \"has a correct grand total aggregator\", ->\r\n                agg = pd.getAggregator([],[])\r\n                val = agg.value()\r\n                expect(val).toBe 4 \r\n                expect(agg.format(val)).toBe \"4\"\r\n\r\n    describe \".naturalSort()\", ->\r\n        naturalSort = $.pivotUtilities.naturalSort\r\n\r\n        it \"sorts numbers\", ->\r\n            expect [2,1,3,4,0].sort naturalSort\r\n            .toEqual [0,1,2,3,4]\r\n\r\n        it \"sorts strings\", ->\r\n            expect ['b','a','c','d'].sort naturalSort\r\n            .toEqual ['a','b','c','d']\r\n\r\n        it \"sorts numbers in strings\", ->\r\n            expect ['1','12','2','10','11','112'].sort naturalSort\r\n            .toEqual ['1','2','10','11','12','112']\r\n\r\n        it \"sorts 0-padded numbers\", ->\r\n            expect ['02','01','10','11'].sort naturalSort\r\n            .toEqual ['01','02','10','11']\r\n\r\n    describe \".sortAs()\", ->\r\n        sortAs = $.pivotUtilities.sortAs\r\n\r\n        it \"sorts with unknown values sorted at the end\", ->\r\n            expect [5,2,3,4,1].sort sortAs([4,3,2])\r\n            .toEqual [4,3,2,1,5]\r\n\r\n    describe \".numberFormat()\", ->\r\n        numberFormat = $.pivotUtilities.numberFormat\r\n\r\n        it \"formats numbers\", ->\r\n            nf = numberFormat()\r\n            expect nf 1234567.89123456\r\n            .toEqual \"1,234,567.89\"\r\n\r\n        it \"formats booleans\", ->\r\n            nf = numberFormat()\r\n            expect nf true\r\n            .toEqual \"1.00\"\r\n\r\n        it \"formats numbers in strings\", ->\r\n            nf = numberFormat()\r\n            expect nf \"1234567.89123456\"\r\n            .toEqual \"1,234,567.89\"\r\n\r\n        it \"doesn't formats strings\", ->\r\n            nf = numberFormat()\r\n            expect nf \"hi there\"\r\n            .toEqual \"\"\r\n\r\n        it \"doesn't formats objects\", ->\r\n            nf = numberFormat()\r\n            expect nf {a:1}\r\n            .toEqual \"\"\r\n\r\n        it \"formats percentages\", ->\r\n            nf = numberFormat(scaler: 100, suffix: \"%\")\r\n            expect nf 0.12345\r\n            .toEqual \"12.35%\"\r\n\r\n        it \"adds separators\", ->\r\n            nf = numberFormat(thousandsSep: \"a\", decimalSep: \"b\")\r\n            expect nf 1234567.89123456\r\n            .toEqual \"1a234a567b89\"\r\n\r\n        it \"adds prefixes and suffixes\", ->\r\n            nf = numberFormat(prefix: \"a\", suffix: \"b\")\r\n            expect nf 1234567.89123456\r\n            .toEqual \"a1,234,567.89b\"\r\n\r\n        it \"scales and rounds\", ->\r\n            nf = numberFormat(digitsAfterDecimal: 3, scaler: 1000)\r\n            expect nf 1234567.89123456\r\n            .toEqual \"1,234,567,891.235\"\r\n\r\n        it \"shows and hides zero\", ->\r\n            nf = numberFormat(showZero: true)\r\n            expect nf 0\r\n            .toEqual \"0.00\"\r\n\r\n            nf = numberFormat(showZero: false)\r\n            expect nf 0\r\n            .toEqual \"\"\r\n\r\n    describe \".derivers\", ->\r\n        describe \".dateFormat()\", ->\r\n            df = $.pivotUtilities.derivers.dateFormat \"x\", \"abc % %% %%% %a %y %m %n %d %w %x %H %M %S\", true\r\n\r\n            it \"formats date objects\", ->\r\n                expect df {x: new Date(\"2015-01-02T23:43:11Z\")}\r\n                .toBe 'abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'\r\n\r\n            it \"formats input parsed by Date.parse()\", ->\r\n                expect df {x: \"2015-01-02T23:43:11Z\"}\r\n                .toBe 'abc % %% %%% %a 2015 01 Jan 02 Fri 5 23 43 11'\r\n\r\n                expect df {x: \"bla\"}\r\n                .toBe ''\r\n\r\n        describe \".bin()\", ->\r\n            binner = $.pivotUtilities.derivers.bin \"x\", 10\r\n\r\n            it \"bins numbers\", ->\r\n                expect binner {x: 11}\r\n                .toBe 10\r\n\r\n                expect binner {x: 9}\r\n                .toBe 0\r\n\r\n                expect binner {x: 111}\r\n                .toBe 110\r\n\r\n            it \"bins booleans\", ->\r\n                expect binner {x: true}\r\n                .toBe 0\r\n\r\n            it \"bins negative numbers\", ->\r\n                expect binner {x: -12}\r\n                .toBe -10\r\n\r\n            it \"doesn't bin strings\", ->\r\n                expect binner {x: \"a\"}\r\n                .toBeNaN()\r\n\r\n            it \"doesn't bin objects\", ->\r\n                expect binner {x: {a:1}}\r\n                .toBeNaN()\r\n\r\n# todo\r\n# agg templates\r\n# date.parse -> date() ?\r\n# default options for PivotData, including filter\r\n"]}